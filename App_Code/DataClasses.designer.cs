#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="test_aspnetdb1")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void InsertApply_Reason(Apply_Reason instance);
  partial void UpdateApply_Reason(Apply_Reason instance);
  partial void DeleteApply_Reason(Apply_Reason instance);
  partial void Insertaspnet_Application(aspnet_Application instance);
  partial void Updateaspnet_Application(aspnet_Application instance);
  partial void Deleteaspnet_Application(aspnet_Application instance);
  partial void Insertaspnet_Membership(aspnet_Membership instance);
  partial void Updateaspnet_Membership(aspnet_Membership instance);
  partial void Deleteaspnet_Membership(aspnet_Membership instance);
  partial void Insertaspnet_Path(aspnet_Path instance);
  partial void Updateaspnet_Path(aspnet_Path instance);
  partial void Deleteaspnet_Path(aspnet_Path instance);
  partial void Insertaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
  partial void Updateaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
  partial void Deleteaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
  partial void Insertaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
  partial void Updateaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
  partial void Deleteaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
  partial void Insertaspnet_Profile(aspnet_Profile instance);
  partial void Updateaspnet_Profile(aspnet_Profile instance);
  partial void Deleteaspnet_Profile(aspnet_Profile instance);
  partial void Insertaspnet_Role(aspnet_Role instance);
  partial void Updateaspnet_Role(aspnet_Role instance);
  partial void Deleteaspnet_Role(aspnet_Role instance);
  partial void Insertaspnet_SchemaVersion(aspnet_SchemaVersion instance);
  partial void Updateaspnet_SchemaVersion(aspnet_SchemaVersion instance);
  partial void Deleteaspnet_SchemaVersion(aspnet_SchemaVersion instance);
  partial void Insertaspnet_User(aspnet_User instance);
  partial void Updateaspnet_User(aspnet_User instance);
  partial void Deleteaspnet_User(aspnet_User instance);
  partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
  partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
  partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
  partial void Insertaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
  partial void Updateaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
  partial void Deleteaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
  partial void InsertAudit(Audit instance);
  partial void UpdateAudit(Audit instance);
  partial void DeleteAudit(Audit instance);
  partial void InsertCampusLocation(CampusLocation instance);
  partial void UpdateCampusLocation(CampusLocation instance);
  partial void DeleteCampusLocation(CampusLocation instance);
  partial void InsertClass(Class instance);
  partial void UpdateClass(Class instance);
  partial void DeleteClass(Class instance);
  partial void InsertDept(Dept instance);
  partial void UpdateDept(Dept instance);
  partial void DeleteDept(Dept instance);
  partial void InsertDeptProcess(DeptProcess instance);
  partial void UpdateDeptProcess(DeptProcess instance);
  partial void DeleteDeptProcess(DeptProcess instance);
  partial void InsertEngClass(EngClass instance);
  partial void UpdateEngClass(EngClass instance);
  partial void DeleteEngClass(EngClass instance);
  partial void InsertEngDept(EngDept instance);
  partial void UpdateEngDept(EngDept instance);
  partial void DeleteEngDept(EngDept instance);
  partial void InsertEngGrade(EngGrade instance);
  partial void UpdateEngGrade(EngGrade instance);
  partial void DeleteEngGrade(EngGrade instance);
  partial void InsertEngMajor(EngMajor instance);
  partial void UpdateEngMajor(EngMajor instance);
  partial void DeleteEngMajor(EngMajor instance);
  partial void InsertEngRedo(EngRedo instance);
  partial void UpdateEngRedo(EngRedo instance);
  partial void DeleteEngRedo(EngRedo instance);
  partial void InsertFiveWater(FiveWater instance);
  partial void UpdateFiveWater(FiveWater instance);
  partial void DeleteFiveWater(FiveWater instance);
  partial void InsertFourWater(FourWater instance);
  partial void UpdateFourWater(FourWater instance);
  partial void DeleteFourWater(FourWater instance);
  partial void InsertHandle_Suggestion(Handle_Suggestion instance);
  partial void UpdateHandle_Suggestion(Handle_Suggestion instance);
  partial void DeleteHandle_Suggestion(Handle_Suggestion instance);
  partial void InsertHistory(History instance);
  partial void UpdateHistory(History instance);
  partial void DeleteHistory(History instance);
  partial void Insertllv(llv instance);
  partial void Updatellv(llv instance);
  partial void Deletellv(llv instance);
  partial void InsertLszh(Lszh instance);
  partial void UpdateLszh(Lszh instance);
  partial void DeleteLszh(Lszh instance);
  partial void InsertMajor(Major instance);
  partial void UpdateMajor(Major instance);
  partial void DeleteMajor(Major instance);
  partial void InsertMandarinGrade(MandarinGrade instance);
  partial void UpdateMandarinGrade(MandarinGrade instance);
  partial void DeleteMandarinGrade(MandarinGrade instance);
  partial void InsertmandarinRegister(mandarinRegister instance);
  partial void UpdatemandarinRegister(mandarinRegister instance);
  partial void DeletemandarinRegister(mandarinRegister instance);
  partial void InsertMHKConflict(MHKConflict instance);
  partial void UpdateMHKConflict(MHKConflict instance);
  partial void DeleteMHKConflict(MHKConflict instance);
  partial void InsertmhkFinalReg(mhkFinalReg instance);
  partial void UpdatemhkFinalReg(mhkFinalReg instance);
  partial void DeletemhkFinalReg(mhkFinalReg instance);
  partial void InsertMHKGrade(MHKGrade instance);
  partial void UpdateMHKGrade(MHKGrade instance);
  partial void DeleteMHKGrade(MHKGrade instance);
  partial void InsertMHKStuReg(MHKStuReg instance);
  partial void UpdateMHKStuReg(MHKStuReg instance);
  partial void DeleteMHKStuReg(MHKStuReg instance);
  partial void InsertMHKSubject(MHKSubject instance);
  partial void UpdateMHKSubject(MHKSubject instance);
  partial void DeleteMHKSubject(MHKSubject instance);
  partial void InsertModifyApplication(ModifyApplication instance);
  partial void UpdateModifyApplication(ModifyApplication instance);
  partial void DeleteModifyApplication(ModifyApplication instance);
  partial void InsertNationality(Nationality instance);
  partial void UpdateNationality(Nationality instance);
  partial void DeleteNationality(Nationality instance);
  partial void InsertNCREGrade(NCREGrade instance);
  partial void UpdateNCREGrade(NCREGrade instance);
  partial void DeleteNCREGrade(NCREGrade instance);
  partial void InsertNCREINFO(NCREINFO instance);
  partial void UpdateNCREINFO(NCREINFO instance);
  partial void DeleteNCREINFO(NCREINFO instance);
  partial void InsertNCREREGISTER(NCREREGISTER instance);
  partial void UpdateNCREREGISTER(NCREREGISTER instance);
  partial void DeleteNCREREGISTER(NCREREGISTER instance);
  partial void InsertNCRESUBJECT(NCRESUBJECT instance);
  partial void UpdateNCRESUBJECT(NCRESUBJECT instance);
  partial void DeleteNCRESUBJECT(NCRESUBJECT instance);
  partial void InsertOperate_Type(Operate_Type instance);
  partial void UpdateOperate_Type(Operate_Type instance);
  partial void DeleteOperate_Type(Operate_Type instance);
  partial void InsertRedoAudit(RedoAudit instance);
  partial void UpdateRedoAudit(RedoAudit instance);
  partial void DeleteRedoAudit(RedoAudit instance);
  partial void InsertRedoInfo(RedoInfo instance);
  partial void UpdateRedoInfo(RedoInfo instance);
  partial void DeleteRedoInfo(RedoInfo instance);
  partial void InsertRegisterProcess(RegisterProcess instance);
  partial void UpdateRegisterProcess(RegisterProcess instance);
  partial void DeleteRegisterProcess(RegisterProcess instance);
  partial void InsertRegisterState(RegisterState instance);
  partial void UpdateRegisterState(RegisterState instance);
  partial void DeleteRegisterState(RegisterState instance);
  partial void InsertSchool(School instance);
  partial void UpdateSchool(School instance);
  partial void DeleteSchool(School instance);
  partial void InsertSecretary(Secretary instance);
  partial void UpdateSecretary(Secretary instance);
  partial void DeleteSecretary(Secretary instance);
  partial void InsertStudent(Student instance);
  partial void UpdateStudent(Student instance);
  partial void DeleteStudent(Student instance);
  partial void InsertStudentDetail(StudentDetail instance);
  partial void UpdateStudentDetail(StudentDetail instance);
  partial void DeleteStudentDetail(StudentDetail instance);
  partial void InsertStuInfoChange(StuInfoChange instance);
  partial void UpdateStuInfoChange(StuInfoChange instance);
  partial void DeleteStuInfoChange(StuInfoChange instance);
  partial void InsertStuReg(StuReg instance);
  partial void UpdateStuReg(StuReg instance);
  partial void DeleteStuReg(StuReg instance);
  partial void InsertTest(Test instance);
  partial void UpdateTest(Test instance);
  partial void DeleteTest(Test instance);
  partial void InsertTestRegister(TestRegister instance);
  partial void UpdateTestRegister(TestRegister instance);
  partial void DeleteTestRegister(TestRegister instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["test_aspnetdb1ConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<University> Universities
	{
		get
		{
			return this.GetTable<University>();
		}
	}
	
	public System.Data.Linq.Table<Apply_Reason> Apply_Reasons
	{
		get
		{
			return this.GetTable<Apply_Reason>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_Application> aspnet_Applications
	{
		get
		{
			return this.GetTable<aspnet_Application>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
	{
		get
		{
			return this.GetTable<aspnet_Membership>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_Path> aspnet_Paths
	{
		get
		{
			return this.GetTable<aspnet_Path>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_PersonalizationAllUser> aspnet_PersonalizationAllUsers
	{
		get
		{
			return this.GetTable<aspnet_PersonalizationAllUser>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
	{
		get
		{
			return this.GetTable<aspnet_PersonalizationPerUser>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
	{
		get
		{
			return this.GetTable<aspnet_Profile>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
	{
		get
		{
			return this.GetTable<aspnet_Role>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_SchemaVersion> aspnet_SchemaVersions
	{
		get
		{
			return this.GetTable<aspnet_SchemaVersion>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_User> aspnet_Users
	{
		get
		{
			return this.GetTable<aspnet_User>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
	{
		get
		{
			return this.GetTable<aspnet_UsersInRole>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_WebEvent_Event> aspnet_WebEvent_Events
	{
		get
		{
			return this.GetTable<aspnet_WebEvent_Event>();
		}
	}
	
	public System.Data.Linq.Table<Audit> Audits
	{
		get
		{
			return this.GetTable<Audit>();
		}
	}
	
	public System.Data.Linq.Table<CampusLocation> CampusLocations
	{
		get
		{
			return this.GetTable<CampusLocation>();
		}
	}
	
	public System.Data.Linq.Table<ChangeCampus> ChangeCampus
	{
		get
		{
			return this.GetTable<ChangeCampus>();
		}
	}
	
	public System.Data.Linq.Table<Class> Classes
	{
		get
		{
			return this.GetTable<Class>();
		}
	}
	
	public System.Data.Linq.Table<Dept> Depts
	{
		get
		{
			return this.GetTable<Dept>();
		}
	}
	
	public System.Data.Linq.Table<DeptProcess> DeptProcesses
	{
		get
		{
			return this.GetTable<DeptProcess>();
		}
	}
	
	public System.Data.Linq.Table<EngClass> EngClasses
	{
		get
		{
			return this.GetTable<EngClass>();
		}
	}
	
	public System.Data.Linq.Table<EngDept> EngDepts
	{
		get
		{
			return this.GetTable<EngDept>();
		}
	}
	
	public System.Data.Linq.Table<EngGrade> EngGrades
	{
		get
		{
			return this.GetTable<EngGrade>();
		}
	}
	
	public System.Data.Linq.Table<EngMajor> EngMajors
	{
		get
		{
			return this.GetTable<EngMajor>();
		}
	}
	
	public System.Data.Linq.Table<EngRedo> EngRedos
	{
		get
		{
			return this.GetTable<EngRedo>();
		}
	}
	
	public System.Data.Linq.Table<FiveWater> FiveWaters
	{
		get
		{
			return this.GetTable<FiveWater>();
		}
	}
	
	public System.Data.Linq.Table<FourWater> FourWaters
	{
		get
		{
			return this.GetTable<FourWater>();
		}
	}
	
	public System.Data.Linq.Table<GetLsh> GetLshes
	{
		get
		{
			return this.GetTable<GetLsh>();
		}
	}
	
	public System.Data.Linq.Table<Handle_Suggestion> Handle_Suggestions
	{
		get
		{
			return this.GetTable<Handle_Suggestion>();
		}
	}
	
	public System.Data.Linq.Table<History> Histories
	{
		get
		{
			return this.GetTable<History>();
		}
	}
	
	public System.Data.Linq.Table<llv> llvs
	{
		get
		{
			return this.GetTable<llv>();
		}
	}
	
	public System.Data.Linq.Table<log> logs
	{
		get
		{
			return this.GetTable<log>();
		}
	}
	
	public System.Data.Linq.Table<Lszh> Lszhs
	{
		get
		{
			return this.GetTable<Lszh>();
		}
	}
	
	public System.Data.Linq.Table<Major> Majors
	{
		get
		{
			return this.GetTable<Major>();
		}
	}
	
	public System.Data.Linq.Table<MandarinGrade> MandarinGrades
	{
		get
		{
			return this.GetTable<MandarinGrade>();
		}
	}
	
	public System.Data.Linq.Table<mandarinRegister> mandarinRegisters
	{
		get
		{
			return this.GetTable<mandarinRegister>();
		}
	}
	
	public System.Data.Linq.Table<MHKConflict> MHKConflicts
	{
		get
		{
			return this.GetTable<MHKConflict>();
		}
	}
	
	public System.Data.Linq.Table<mhkFinalReg> mhkFinalRegs
	{
		get
		{
			return this.GetTable<mhkFinalReg>();
		}
	}
	
	public System.Data.Linq.Table<MHKGrade> MHKGrades
	{
		get
		{
			return this.GetTable<MHKGrade>();
		}
	}
	
	public System.Data.Linq.Table<MHKStuReg> MHKStuRegs
	{
		get
		{
			return this.GetTable<MHKStuReg>();
		}
	}
	
	public System.Data.Linq.Table<MHKSubject> MHKSubjects
	{
		get
		{
			return this.GetTable<MHKSubject>();
		}
	}
	
	public System.Data.Linq.Table<ModifyApplication> ModifyApplications
	{
		get
		{
			return this.GetTable<ModifyApplication>();
		}
	}
	
	public System.Data.Linq.Table<Nationality> Nationalities
	{
		get
		{
			return this.GetTable<Nationality>();
		}
	}
	
	public System.Data.Linq.Table<NCREGrade> NCREGrades
	{
		get
		{
			return this.GetTable<NCREGrade>();
		}
	}
	
	public System.Data.Linq.Table<NCREINFO> NCREINFOs
	{
		get
		{
			return this.GetTable<NCREINFO>();
		}
	}
	
	public System.Data.Linq.Table<NCREREGISTER> NCREREGISTERs
	{
		get
		{
			return this.GetTable<NCREREGISTER>();
		}
	}
	
	public System.Data.Linq.Table<NCRESUBJECT> NCRESUBJECTs
	{
		get
		{
			return this.GetTable<NCRESUBJECT>();
		}
	}
	
	public System.Data.Linq.Table<Operate_Type> Operate_Types
	{
		get
		{
			return this.GetTable<Operate_Type>();
		}
	}
	
	public System.Data.Linq.Table<RedoAudit> RedoAudits
	{
		get
		{
			return this.GetTable<RedoAudit>();
		}
	}
	
	public System.Data.Linq.Table<RedoInfo> RedoInfos
	{
		get
		{
			return this.GetTable<RedoInfo>();
		}
	}
	
	public System.Data.Linq.Table<RegisterProcess> RegisterProcesses
	{
		get
		{
			return this.GetTable<RegisterProcess>();
		}
	}
	
	public System.Data.Linq.Table<RegisterState> RegisterStates
	{
		get
		{
			return this.GetTable<RegisterState>();
		}
	}
	
	public System.Data.Linq.Table<School> Schools
	{
		get
		{
			return this.GetTable<School>();
		}
	}
	
	public System.Data.Linq.Table<Secretary> Secretaries
	{
		get
		{
			return this.GetTable<Secretary>();
		}
	}
	
	public System.Data.Linq.Table<Student> Students
	{
		get
		{
			return this.GetTable<Student>();
		}
	}
	
	public System.Data.Linq.Table<StudentDetail> StudentDetails
	{
		get
		{
			return this.GetTable<StudentDetail>();
		}
	}
	
	public System.Data.Linq.Table<StuInfoChange> StuInfoChanges
	{
		get
		{
			return this.GetTable<StuInfoChange>();
		}
	}
	
	public System.Data.Linq.Table<StuReg> StuRegs
	{
		get
		{
			return this.GetTable<StuReg>();
		}
	}
	
	public System.Data.Linq.Table<Test> Tests
	{
		get
		{
			return this.GetTable<Test>();
		}
	}
	
	public System.Data.Linq.Table<TestRegister> TestRegisters
	{
		get
		{
			return this.GetTable<TestRegister>();
		}
	}
	
	public System.Data.Linq.Table<View_ClassDept> View_ClassDepts
	{
		get
		{
			return this.GetTable<View_ClassDept>();
		}
	}
	
	public System.Data.Linq.Table<View_EngApply> View_EngApplies
	{
		get
		{
			return this.GetTable<View_EngApply>();
		}
	}
	
	public System.Data.Linq.Table<View_MHKReg> View_MHKRegs
	{
		get
		{
			return this.GetTable<View_MHKReg>();
		}
	}
	
	public System.Data.Linq.Table<View_MandarinRegInfo> View_MandarinRegInfos
	{
		get
		{
			return this.GetTable<View_MandarinRegInfo>();
		}
	}
	
	public System.Data.Linq.Table<View_MandarinGrade> View_MandarinGrades
	{
		get
		{
			return this.GetTable<View_MandarinGrade>();
		}
	}
	
	public System.Data.Linq.Table<View_EngGrade> View_EngGrades
	{
		get
		{
			return this.GetTable<View_EngGrade>();
		}
	}
	
	public System.Data.Linq.Table<View_NCREGrade> View_NCREGrades
	{
		get
		{
			return this.GetTable<View_NCREGrade>();
		}
	}
	
	public System.Data.Linq.Table<View_MHKGrade> View_MHKGrades
	{
		get
		{
			return this.GetTable<View_MHKGrade>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.University")]
public partial class University
{
	
	private System.Guid _UniversityID;
	
	private string _UniversityName;
	
	public University()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniversityID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid UniversityID
	{
		get
		{
			return this._UniversityID;
		}
		set
		{
			if ((this._UniversityID != value))
			{
				this._UniversityID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniversityName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string UniversityName
	{
		get
		{
			return this._UniversityName;
		}
		set
		{
			if ((this._UniversityName != value))
			{
				this._UniversityName = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Apply_Reasons")]
public partial class Apply_Reason : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _ApplyReasons;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnApplyReasonsChanging(string value);
    partial void OnApplyReasonsChanged();
    #endregion
	
	public Apply_Reason()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyReasons", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string ApplyReasons
	{
		get
		{
			return this._ApplyReasons;
		}
		set
		{
			if ((this._ApplyReasons != value))
			{
				this.OnApplyReasonsChanging(value);
				this.SendPropertyChanging();
				this._ApplyReasons = value;
				this.SendPropertyChanged("ApplyReasons");
				this.OnApplyReasonsChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ApplicationName;
	
	private string _LoweredApplicationName;
	
	private System.Guid _ApplicationId;
	
	private string _Description;
	
	private EntitySet<aspnet_Membership> _aspnet_Memberships;
	
	private EntitySet<aspnet_Path> _aspnet_Paths;
	
	private EntitySet<aspnet_Role> _aspnet_Roles;
	
	private EntitySet<aspnet_User> _aspnet_Users;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public aspnet_Application()
	{
		this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
		this._aspnet_Paths = new EntitySet<aspnet_Path>(new Action<aspnet_Path>(this.attach_aspnet_Paths), new Action<aspnet_Path>(this.detach_aspnet_Paths));
		this._aspnet_Roles = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles), new Action<aspnet_Role>(this.detach_aspnet_Roles));
		this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string ApplicationName
	{
		get
		{
			return this._ApplicationName;
		}
		set
		{
			if ((this._ApplicationName != value))
			{
				this.OnApplicationNameChanging(value);
				this.SendPropertyChanging();
				this._ApplicationName = value;
				this.SendPropertyChanged("ApplicationName");
				this.OnApplicationNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredApplicationName
	{
		get
		{
			return this._LoweredApplicationName;
		}
		set
		{
			if ((this._LoweredApplicationName != value))
			{
				this.OnLoweredApplicationNameChanging(value);
				this.SendPropertyChanging();
				this._LoweredApplicationName = value;
				this.SendPropertyChanged("LoweredApplicationName");
				this.OnLoweredApplicationNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
	public EntitySet<aspnet_Membership> aspnet_Memberships
	{
		get
		{
			return this._aspnet_Memberships;
		}
		set
		{
			this._aspnet_Memberships.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Paths", ThisKey="ApplicationId", OtherKey="ApplicationId")]
	public EntitySet<aspnet_Path> aspnet_Paths
	{
		get
		{
			return this._aspnet_Paths;
		}
		set
		{
			this._aspnet_Paths.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
	public EntitySet<aspnet_Role> aspnet_Roles
	{
		get
		{
			return this._aspnet_Roles;
		}
		set
		{
			this._aspnet_Roles.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
	public EntitySet<aspnet_User> aspnet_Users
	{
		get
		{
			return this._aspnet_Users;
		}
		set
		{
			this._aspnet_Users.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_aspnet_Memberships(aspnet_Membership entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = this;
	}
	
	private void detach_aspnet_Memberships(aspnet_Membership entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = null;
	}
	
	private void attach_aspnet_Paths(aspnet_Path entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = this;
	}
	
	private void detach_aspnet_Paths(aspnet_Path entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = null;
	}
	
	private void attach_aspnet_Roles(aspnet_Role entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = this;
	}
	
	private void detach_aspnet_Roles(aspnet_Role entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = null;
	}
	
	private void attach_aspnet_Users(aspnet_User entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = this;
	}
	
	private void detach_aspnet_Users(aspnet_User entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _UserId;
	
	private string _Password;
	
	private int _PasswordFormat;
	
	private string _PasswordSalt;
	
	private string _MobilePIN;
	
	private string _Email;
	
	private string _LoweredEmail;
	
	private string _PasswordQuestion;
	
	private string _PasswordAnswer;
	
	private bool _IsApproved;
	
	private bool _IsLockedOut;
	
	private System.DateTime _CreateDate;
	
	private System.DateTime _LastLoginDate;
	
	private System.DateTime _LastPasswordChangedDate;
	
	private System.DateTime _LastLockoutDate;
	
	private int _FailedPasswordAttemptCount;
	
	private System.DateTime _FailedPasswordAttemptWindowStart;
	
	private int _FailedPasswordAnswerAttemptCount;
	
	private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
	
	private string _Comment;
	
	private EntityRef<aspnet_Application> _aspnet_Application;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
	
	public aspnet_Membership()
	{
		this._aspnet_Application = default(EntityRef<aspnet_Application>);
		this._aspnet_User = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				if (this._aspnet_Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
	public int PasswordFormat
	{
		get
		{
			return this._PasswordFormat;
		}
		set
		{
			if ((this._PasswordFormat != value))
			{
				this.OnPasswordFormatChanging(value);
				this.SendPropertyChanging();
				this._PasswordFormat = value;
				this.SendPropertyChanged("PasswordFormat");
				this.OnPasswordFormatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
	public string PasswordSalt
	{
		get
		{
			return this._PasswordSalt;
		}
		set
		{
			if ((this._PasswordSalt != value))
			{
				this.OnPasswordSaltChanging(value);
				this.SendPropertyChanging();
				this._PasswordSalt = value;
				this.SendPropertyChanged("PasswordSalt");
				this.OnPasswordSaltChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
	public string MobilePIN
	{
		get
		{
			return this._MobilePIN;
		}
		set
		{
			if ((this._MobilePIN != value))
			{
				this.OnMobilePINChanging(value);
				this.SendPropertyChanging();
				this._MobilePIN = value;
				this.SendPropertyChanged("MobilePIN");
				this.OnMobilePINChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
	public string LoweredEmail
	{
		get
		{
			return this._LoweredEmail;
		}
		set
		{
			if ((this._LoweredEmail != value))
			{
				this.OnLoweredEmailChanging(value);
				this.SendPropertyChanging();
				this._LoweredEmail = value;
				this.SendPropertyChanged("LoweredEmail");
				this.OnLoweredEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
	public string PasswordQuestion
	{
		get
		{
			return this._PasswordQuestion;
		}
		set
		{
			if ((this._PasswordQuestion != value))
			{
				this.OnPasswordQuestionChanging(value);
				this.SendPropertyChanging();
				this._PasswordQuestion = value;
				this.SendPropertyChanged("PasswordQuestion");
				this.OnPasswordQuestionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
	public string PasswordAnswer
	{
		get
		{
			return this._PasswordAnswer;
		}
		set
		{
			if ((this._PasswordAnswer != value))
			{
				this.OnPasswordAnswerChanging(value);
				this.SendPropertyChanging();
				this._PasswordAnswer = value;
				this.SendPropertyChanged("PasswordAnswer");
				this.OnPasswordAnswerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
	public bool IsApproved
	{
		get
		{
			return this._IsApproved;
		}
		set
		{
			if ((this._IsApproved != value))
			{
				this.OnIsApprovedChanging(value);
				this.SendPropertyChanging();
				this._IsApproved = value;
				this.SendPropertyChanged("IsApproved");
				this.OnIsApprovedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
	public bool IsLockedOut
	{
		get
		{
			return this._IsLockedOut;
		}
		set
		{
			if ((this._IsLockedOut != value))
			{
				this.OnIsLockedOutChanging(value);
				this.SendPropertyChanging();
				this._IsLockedOut = value;
				this.SendPropertyChanged("IsLockedOut");
				this.OnIsLockedOutChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastLoginDate
	{
		get
		{
			return this._LastLoginDate;
		}
		set
		{
			if ((this._LastLoginDate != value))
			{
				this.OnLastLoginDateChanging(value);
				this.SendPropertyChanging();
				this._LastLoginDate = value;
				this.SendPropertyChanged("LastLoginDate");
				this.OnLastLoginDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastPasswordChangedDate
	{
		get
		{
			return this._LastPasswordChangedDate;
		}
		set
		{
			if ((this._LastPasswordChangedDate != value))
			{
				this.OnLastPasswordChangedDateChanging(value);
				this.SendPropertyChanging();
				this._LastPasswordChangedDate = value;
				this.SendPropertyChanged("LastPasswordChangedDate");
				this.OnLastPasswordChangedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastLockoutDate
	{
		get
		{
			return this._LastLockoutDate;
		}
		set
		{
			if ((this._LastLockoutDate != value))
			{
				this.OnLastLockoutDateChanging(value);
				this.SendPropertyChanging();
				this._LastLockoutDate = value;
				this.SendPropertyChanged("LastLockoutDate");
				this.OnLastLockoutDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
	public int FailedPasswordAttemptCount
	{
		get
		{
			return this._FailedPasswordAttemptCount;
		}
		set
		{
			if ((this._FailedPasswordAttemptCount != value))
			{
				this.OnFailedPasswordAttemptCountChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAttemptCount = value;
				this.SendPropertyChanged("FailedPasswordAttemptCount");
				this.OnFailedPasswordAttemptCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
	public System.DateTime FailedPasswordAttemptWindowStart
	{
		get
		{
			return this._FailedPasswordAttemptWindowStart;
		}
		set
		{
			if ((this._FailedPasswordAttemptWindowStart != value))
			{
				this.OnFailedPasswordAttemptWindowStartChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAttemptWindowStart = value;
				this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
				this.OnFailedPasswordAttemptWindowStartChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
	public int FailedPasswordAnswerAttemptCount
	{
		get
		{
			return this._FailedPasswordAnswerAttemptCount;
		}
		set
		{
			if ((this._FailedPasswordAnswerAttemptCount != value))
			{
				this.OnFailedPasswordAnswerAttemptCountChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAnswerAttemptCount = value;
				this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
				this.OnFailedPasswordAnswerAttemptCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
	public System.DateTime FailedPasswordAnswerAttemptWindowStart
	{
		get
		{
			return this._FailedPasswordAnswerAttemptWindowStart;
		}
		set
		{
			if ((this._FailedPasswordAnswerAttemptWindowStart != value))
			{
				this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAnswerAttemptWindowStart = value;
				this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
				this.OnFailedPasswordAnswerAttemptWindowStartChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			if ((this._Comment != value))
			{
				this.OnCommentChanging(value);
				this.SendPropertyChanging();
				this._Comment = value;
				this.SendPropertyChanged("Comment");
				this.OnCommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
	public aspnet_Application aspnet_Application
	{
		get
		{
			return this._aspnet_Application.Entity;
		}
		set
		{
			aspnet_Application previousValue = this._aspnet_Application.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Application.Entity = null;
					previousValue.aspnet_Memberships.Remove(this);
				}
				this._aspnet_Application.Entity = value;
				if ((value != null))
				{
					value.aspnet_Memberships.Add(this);
					this._ApplicationId = value.ApplicationId;
				}
				else
				{
					this._ApplicationId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.aspnet_Membership = null;
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.aspnet_Membership = this;
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Paths")]
public partial class aspnet_Path : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _PathId;
	
	private string _Path;
	
	private string _LoweredPath;
	
	private EntityRef<aspnet_PersonalizationAllUser> _aspnet_PersonalizationAllUser;
	
	private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
	
	private EntityRef<aspnet_Application> _aspnet_Application;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
	
	public aspnet_Path()
	{
		this._aspnet_PersonalizationAllUser = default(EntityRef<aspnet_PersonalizationAllUser>);
		this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
		this._aspnet_Application = default(EntityRef<aspnet_Application>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				if (this._aspnet_Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid PathId
	{
		get
		{
			return this._PathId;
		}
		set
		{
			if ((this._PathId != value))
			{
				this.OnPathIdChanging(value);
				this.SendPropertyChanging();
				this._PathId = value;
				this.SendPropertyChanged("PathId");
				this.OnPathIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string Path
	{
		get
		{
			return this._Path;
		}
		set
		{
			if ((this._Path != value))
			{
				this.OnPathChanging(value);
				this.SendPropertyChanging();
				this._Path = value;
				this.SendPropertyChanged("Path");
				this.OnPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredPath
	{
		get
		{
			return this._LoweredPath;
		}
		set
		{
			if ((this._LoweredPath != value))
			{
				this.OnLoweredPathChanging(value);
				this.SendPropertyChanging();
				this._LoweredPath = value;
				this.SendPropertyChanged("LoweredPath");
				this.OnLoweredPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_PersonalizationAllUser", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
	public aspnet_PersonalizationAllUser aspnet_PersonalizationAllUser
	{
		get
		{
			return this._aspnet_PersonalizationAllUser.Entity;
		}
		set
		{
			aspnet_PersonalizationAllUser previousValue = this._aspnet_PersonalizationAllUser.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_PersonalizationAllUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_PersonalizationAllUser.Entity = null;
					previousValue.aspnet_Path = null;
				}
				this._aspnet_PersonalizationAllUser.Entity = value;
				if ((value != null))
				{
					value.aspnet_Path = this;
				}
				this.SendPropertyChanged("aspnet_PersonalizationAllUser");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="PathId", OtherKey="PathId")]
	public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
	{
		get
		{
			return this._aspnet_PersonalizationPerUsers;
		}
		set
		{
			this._aspnet_PersonalizationPerUsers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
	public aspnet_Application aspnet_Application
	{
		get
		{
			return this._aspnet_Application.Entity;
		}
		set
		{
			aspnet_Application previousValue = this._aspnet_Application.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Application.Entity = null;
					previousValue.aspnet_Paths.Remove(this);
				}
				this._aspnet_Application.Entity = value;
				if ((value != null))
				{
					value.aspnet_Paths.Add(this);
					this._ApplicationId = value.ApplicationId;
				}
				else
				{
					this._ApplicationId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Application");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Path = this;
	}
	
	private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Path = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationAllUsers")]
public partial class aspnet_PersonalizationAllUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _PathId;
	
	private System.Data.Linq.Binary _PageSettings;
	
	private System.DateTime _LastUpdatedDate;
	
	private EntityRef<aspnet_Path> _aspnet_Path;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
	
	public aspnet_PersonalizationAllUser()
	{
		this._aspnet_Path = default(EntityRef<aspnet_Path>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid PathId
	{
		get
		{
			return this._PathId;
		}
		set
		{
			if ((this._PathId != value))
			{
				if (this._aspnet_Path.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPathIdChanging(value);
				this.SendPropertyChanging();
				this._PathId = value;
				this.SendPropertyChanged("PathId");
				this.OnPathIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary PageSettings
	{
		get
		{
			return this._PageSettings;
		}
		set
		{
			if ((this._PageSettings != value))
			{
				this.OnPageSettingsChanging(value);
				this.SendPropertyChanging();
				this._PageSettings = value;
				this.SendPropertyChanged("PageSettings");
				this.OnPageSettingsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastUpdatedDate
	{
		get
		{
			return this._LastUpdatedDate;
		}
		set
		{
			if ((this._LastUpdatedDate != value))
			{
				this.OnLastUpdatedDateChanging(value);
				this.SendPropertyChanging();
				this._LastUpdatedDate = value;
				this.SendPropertyChanged("LastUpdatedDate");
				this.OnLastUpdatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
	public aspnet_Path aspnet_Path
	{
		get
		{
			return this._aspnet_Path.Entity;
		}
		set
		{
			aspnet_Path previousValue = this._aspnet_Path.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Path.Entity = null;
					previousValue.aspnet_PersonalizationAllUser = null;
				}
				this._aspnet_Path.Entity = value;
				if ((value != null))
				{
					value.aspnet_PersonalizationAllUser = this;
					this._PathId = value.PathId;
				}
				else
				{
					this._PathId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Path");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationPerUser")]
public partial class aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _Id;
	
	private System.Nullable<System.Guid> _PathId;
	
	private System.Nullable<System.Guid> _UserId;
	
	private System.Data.Linq.Binary _PageSettings;
	
	private System.DateTime _LastUpdatedDate;
	
	private EntityRef<aspnet_Path> _aspnet_Path;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
	
	public aspnet_PersonalizationPerUser()
	{
		this._aspnet_Path = default(EntityRef<aspnet_Path>);
		this._aspnet_User = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> PathId
	{
		get
		{
			return this._PathId;
		}
		set
		{
			if ((this._PathId != value))
			{
				if (this._aspnet_Path.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPathIdChanging(value);
				this.SendPropertyChanging();
				this._PathId = value;
				this.SendPropertyChanged("PathId");
				this.OnPathIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary PageSettings
	{
		get
		{
			return this._PageSettings;
		}
		set
		{
			if ((this._PageSettings != value))
			{
				this.OnPageSettingsChanging(value);
				this.SendPropertyChanging();
				this._PageSettings = value;
				this.SendPropertyChanged("PageSettings");
				this.OnPageSettingsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastUpdatedDate
	{
		get
		{
			return this._LastUpdatedDate;
		}
		set
		{
			if ((this._LastUpdatedDate != value))
			{
				this.OnLastUpdatedDateChanging(value);
				this.SendPropertyChanging();
				this._LastUpdatedDate = value;
				this.SendPropertyChanged("LastUpdatedDate");
				this.OnLastUpdatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
	public aspnet_Path aspnet_Path
	{
		get
		{
			return this._aspnet_Path.Entity;
		}
		set
		{
			aspnet_Path previousValue = this._aspnet_Path.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Path.Entity = null;
					previousValue.aspnet_PersonalizationPerUsers.Remove(this);
				}
				this._aspnet_Path.Entity = value;
				if ((value != null))
				{
					value.aspnet_PersonalizationPerUsers.Add(this);
					this._PathId = value.PathId;
				}
				else
				{
					this._PathId = default(Nullable<System.Guid>);
				}
				this.SendPropertyChanged("aspnet_Path");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.aspnet_PersonalizationPerUsers.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.aspnet_PersonalizationPerUsers.Add(this);
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(Nullable<System.Guid>);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _UserId;
	
	private string _PropertyNames;
	
	private string _PropertyValuesString;
	
	private System.Data.Linq.Binary _PropertyValuesBinary;
	
	private System.DateTime _LastUpdatedDate;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
	
	public aspnet_Profile()
	{
		this._aspnet_User = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string PropertyNames
	{
		get
		{
			return this._PropertyNames;
		}
		set
		{
			if ((this._PropertyNames != value))
			{
				this.OnPropertyNamesChanging(value);
				this.SendPropertyChanging();
				this._PropertyNames = value;
				this.SendPropertyChanged("PropertyNames");
				this.OnPropertyNamesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string PropertyValuesString
	{
		get
		{
			return this._PropertyValuesString;
		}
		set
		{
			if ((this._PropertyValuesString != value))
			{
				this.OnPropertyValuesStringChanging(value);
				this.SendPropertyChanging();
				this._PropertyValuesString = value;
				this.SendPropertyChanged("PropertyValuesString");
				this.OnPropertyValuesStringChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary PropertyValuesBinary
	{
		get
		{
			return this._PropertyValuesBinary;
		}
		set
		{
			if ((this._PropertyValuesBinary != value))
			{
				this.OnPropertyValuesBinaryChanging(value);
				this.SendPropertyChanging();
				this._PropertyValuesBinary = value;
				this.SendPropertyChanged("PropertyValuesBinary");
				this.OnPropertyValuesBinaryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastUpdatedDate
	{
		get
		{
			return this._LastUpdatedDate;
		}
		set
		{
			if ((this._LastUpdatedDate != value))
			{
				this.OnLastUpdatedDateChanging(value);
				this.SendPropertyChanging();
				this._LastUpdatedDate = value;
				this.SendPropertyChanged("LastUpdatedDate");
				this.OnLastUpdatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.aspnet_Profile = null;
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.aspnet_Profile = this;
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _RoleId;
	
	private string _RoleName;
	
	private string _LoweredRoleName;
	
	private string _Description;
	
	private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
	
	private EntityRef<aspnet_Application> _aspnet_Application;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public aspnet_Role()
	{
		this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
		this._aspnet_Application = default(EntityRef<aspnet_Application>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				if (this._aspnet_Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid RoleId
	{
		get
		{
			return this._RoleId;
		}
		set
		{
			if ((this._RoleId != value))
			{
				this.OnRoleIdChanging(value);
				this.SendPropertyChanging();
				this._RoleId = value;
				this.SendPropertyChanged("RoleId");
				this.OnRoleIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string RoleName
	{
		get
		{
			return this._RoleName;
		}
		set
		{
			if ((this._RoleName != value))
			{
				this.OnRoleNameChanging(value);
				this.SendPropertyChanging();
				this._RoleName = value;
				this.SendPropertyChanged("RoleName");
				this.OnRoleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredRoleName
	{
		get
		{
			return this._LoweredRoleName;
		}
		set
		{
			if ((this._LoweredRoleName != value))
			{
				this.OnLoweredRoleNameChanging(value);
				this.SendPropertyChanging();
				this._LoweredRoleName = value;
				this.SendPropertyChanged("LoweredRoleName");
				this.OnLoweredRoleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
	public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
	{
		get
		{
			return this._aspnet_UsersInRoles;
		}
		set
		{
			this._aspnet_UsersInRoles.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
	public aspnet_Application aspnet_Application
	{
		get
		{
			return this._aspnet_Application.Entity;
		}
		set
		{
			aspnet_Application previousValue = this._aspnet_Application.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Application.Entity = null;
					previousValue.aspnet_Roles.Remove(this);
				}
				this._aspnet_Application.Entity = value;
				if ((value != null))
				{
					value.aspnet_Roles.Add(this);
					this._ApplicationId = value.ApplicationId;
				}
				else
				{
					this._ApplicationId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Application");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Role = this;
	}
	
	private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Role = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
public partial class aspnet_SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Feature;
	
	private string _CompatibleSchemaVersion;
	
	private bool _IsCurrentVersion;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
	
	public aspnet_SchemaVersion()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Feature
	{
		get
		{
			return this._Feature;
		}
		set
		{
			if ((this._Feature != value))
			{
				this.OnFeatureChanging(value);
				this.SendPropertyChanging();
				this._Feature = value;
				this.SendPropertyChanged("Feature");
				this.OnFeatureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string CompatibleSchemaVersion
	{
		get
		{
			return this._CompatibleSchemaVersion;
		}
		set
		{
			if ((this._CompatibleSchemaVersion != value))
			{
				this.OnCompatibleSchemaVersionChanging(value);
				this.SendPropertyChanging();
				this._CompatibleSchemaVersion = value;
				this.SendPropertyChanged("CompatibleSchemaVersion");
				this.OnCompatibleSchemaVersionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
	public bool IsCurrentVersion
	{
		get
		{
			return this._IsCurrentVersion;
		}
		set
		{
			if ((this._IsCurrentVersion != value))
			{
				this.OnIsCurrentVersionChanging(value);
				this.SendPropertyChanging();
				this._IsCurrentVersion = value;
				this.SendPropertyChanged("IsCurrentVersion");
				this.OnIsCurrentVersionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _UserId;
	
	private string _UserName;
	
	private string _LoweredUserName;
	
	private string _MobileAlias;
	
	private bool _IsAnonymous;
	
	private System.DateTime _LastActivityDate;
	
	private EntityRef<aspnet_Membership> _aspnet_Membership;
	
	private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
	
	private EntityRef<aspnet_Profile> _aspnet_Profile;
	
	private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
	
	private EntityRef<aspnet_Application> _aspnet_Application;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
	
	public aspnet_User()
	{
		this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
		this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
		this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
		this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
		this._aspnet_Application = default(EntityRef<aspnet_Application>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				if (this._aspnet_Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredUserName
	{
		get
		{
			return this._LoweredUserName;
		}
		set
		{
			if ((this._LoweredUserName != value))
			{
				this.OnLoweredUserNameChanging(value);
				this.SendPropertyChanging();
				this._LoweredUserName = value;
				this.SendPropertyChanged("LoweredUserName");
				this.OnLoweredUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
	public string MobileAlias
	{
		get
		{
			return this._MobileAlias;
		}
		set
		{
			if ((this._MobileAlias != value))
			{
				this.OnMobileAliasChanging(value);
				this.SendPropertyChanging();
				this._MobileAlias = value;
				this.SendPropertyChanged("MobileAlias");
				this.OnMobileAliasChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
	public bool IsAnonymous
	{
		get
		{
			return this._IsAnonymous;
		}
		set
		{
			if ((this._IsAnonymous != value))
			{
				this.OnIsAnonymousChanging(value);
				this.SendPropertyChanging();
				this._IsAnonymous = value;
				this.SendPropertyChanged("IsAnonymous");
				this.OnIsAnonymousChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastActivityDate
	{
		get
		{
			return this._LastActivityDate;
		}
		set
		{
			if ((this._LastActivityDate != value))
			{
				this.OnLastActivityDateChanging(value);
				this.SendPropertyChanging();
				this._LastActivityDate = value;
				this.SendPropertyChanged("LastActivityDate");
				this.OnLastActivityDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
	public aspnet_Membership aspnet_Membership
	{
		get
		{
			return this._aspnet_Membership.Entity;
		}
		set
		{
			aspnet_Membership previousValue = this._aspnet_Membership.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Membership.Entity = null;
					previousValue.aspnet_User = null;
				}
				this._aspnet_Membership.Entity = value;
				if ((value != null))
				{
					value.aspnet_User = this;
				}
				this.SendPropertyChanged("aspnet_Membership");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="UserId", OtherKey="UserId")]
	public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
	{
		get
		{
			return this._aspnet_PersonalizationPerUsers;
		}
		set
		{
			this._aspnet_PersonalizationPerUsers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
	public aspnet_Profile aspnet_Profile
	{
		get
		{
			return this._aspnet_Profile.Entity;
		}
		set
		{
			aspnet_Profile previousValue = this._aspnet_Profile.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Profile.Entity = null;
					previousValue.aspnet_User = null;
				}
				this._aspnet_Profile.Entity = value;
				if ((value != null))
				{
					value.aspnet_User = this;
				}
				this.SendPropertyChanged("aspnet_Profile");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
	public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
	{
		get
		{
			return this._aspnet_UsersInRoles;
		}
		set
		{
			this._aspnet_UsersInRoles.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
	public aspnet_Application aspnet_Application
	{
		get
		{
			return this._aspnet_Application.Entity;
		}
		set
		{
			aspnet_Application previousValue = this._aspnet_Application.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Application.Entity = null;
					previousValue.aspnet_Users.Remove(this);
				}
				this._aspnet_Application.Entity = value;
				if ((value != null))
				{
					value.aspnet_Users.Add(this);
					this._ApplicationId = value.ApplicationId;
				}
				else
				{
					this._ApplicationId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Application");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
	
	private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _UserId;
	
	private System.Guid _RoleId;
	
	private EntityRef<aspnet_Role> _aspnet_Role;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
	
	public aspnet_UsersInRole()
	{
		this._aspnet_Role = default(EntityRef<aspnet_Role>);
		this._aspnet_User = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid RoleId
	{
		get
		{
			return this._RoleId;
		}
		set
		{
			if ((this._RoleId != value))
			{
				if (this._aspnet_Role.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoleIdChanging(value);
				this.SendPropertyChanging();
				this._RoleId = value;
				this.SendPropertyChanged("RoleId");
				this.OnRoleIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
	public aspnet_Role aspnet_Role
	{
		get
		{
			return this._aspnet_Role.Entity;
		}
		set
		{
			aspnet_Role previousValue = this._aspnet_Role.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Role.Entity = null;
					previousValue.aspnet_UsersInRoles.Remove(this);
				}
				this._aspnet_Role.Entity = value;
				if ((value != null))
				{
					value.aspnet_UsersInRoles.Add(this);
					this._RoleId = value.RoleId;
				}
				else
				{
					this._RoleId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Role");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.aspnet_UsersInRoles.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.aspnet_UsersInRoles.Add(this);
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_WebEvent_Events")]
public partial class aspnet_WebEvent_Event : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _EventId;
	
	private System.DateTime _EventTimeUtc;
	
	private System.DateTime _EventTime;
	
	private string _EventType;
	
	private decimal _EventSequence;
	
	private decimal _EventOccurrence;
	
	private int _EventCode;
	
	private int _EventDetailCode;
	
	private string _Message;
	
	private string _ApplicationPath;
	
	private string _ApplicationVirtualPath;
	
	private string _MachineName;
	
	private string _RequestUrl;
	
	private string _ExceptionType;
	
	private string _Details;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
	
	public aspnet_WebEvent_Event()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string EventId
	{
		get
		{
			return this._EventId;
		}
		set
		{
			if ((this._EventId != value))
			{
				this.OnEventIdChanging(value);
				this.SendPropertyChanging();
				this._EventId = value;
				this.SendPropertyChanged("EventId");
				this.OnEventIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
	public System.DateTime EventTimeUtc
	{
		get
		{
			return this._EventTimeUtc;
		}
		set
		{
			if ((this._EventTimeUtc != value))
			{
				this.OnEventTimeUtcChanging(value);
				this.SendPropertyChanging();
				this._EventTimeUtc = value;
				this.SendPropertyChanged("EventTimeUtc");
				this.OnEventTimeUtcChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
	public System.DateTime EventTime
	{
		get
		{
			return this._EventTime;
		}
		set
		{
			if ((this._EventTime != value))
			{
				this.OnEventTimeChanging(value);
				this.SendPropertyChanging();
				this._EventTime = value;
				this.SendPropertyChanged("EventTime");
				this.OnEventTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string EventType
	{
		get
		{
			return this._EventType;
		}
		set
		{
			if ((this._EventType != value))
			{
				this.OnEventTypeChanging(value);
				this.SendPropertyChanging();
				this._EventType = value;
				this.SendPropertyChanged("EventType");
				this.OnEventTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
	public decimal EventSequence
	{
		get
		{
			return this._EventSequence;
		}
		set
		{
			if ((this._EventSequence != value))
			{
				this.OnEventSequenceChanging(value);
				this.SendPropertyChanging();
				this._EventSequence = value;
				this.SendPropertyChanged("EventSequence");
				this.OnEventSequenceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
	public decimal EventOccurrence
	{
		get
		{
			return this._EventOccurrence;
		}
		set
		{
			if ((this._EventOccurrence != value))
			{
				this.OnEventOccurrenceChanging(value);
				this.SendPropertyChanging();
				this._EventOccurrence = value;
				this.SendPropertyChanged("EventOccurrence");
				this.OnEventOccurrenceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="Int NOT NULL")]
	public int EventCode
	{
		get
		{
			return this._EventCode;
		}
		set
		{
			if ((this._EventCode != value))
			{
				this.OnEventCodeChanging(value);
				this.SendPropertyChanging();
				this._EventCode = value;
				this.SendPropertyChanged("EventCode");
				this.OnEventCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetailCode", DbType="Int NOT NULL")]
	public int EventDetailCode
	{
		get
		{
			return this._EventDetailCode;
		}
		set
		{
			if ((this._EventDetailCode != value))
			{
				this.OnEventDetailCodeChanging(value);
				this.SendPropertyChanging();
				this._EventDetailCode = value;
				this.SendPropertyChanged("EventDetailCode");
				this.OnEventDetailCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1024)")]
	public string Message
	{
		get
		{
			return this._Message;
		}
		set
		{
			if ((this._Message != value))
			{
				this.OnMessageChanging(value);
				this.SendPropertyChanging();
				this._Message = value;
				this.SendPropertyChanged("Message");
				this.OnMessageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPath", DbType="NVarChar(256)")]
	public string ApplicationPath
	{
		get
		{
			return this._ApplicationPath;
		}
		set
		{
			if ((this._ApplicationPath != value))
			{
				this.OnApplicationPathChanging(value);
				this.SendPropertyChanging();
				this._ApplicationPath = value;
				this.SendPropertyChanged("ApplicationPath");
				this.OnApplicationPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
	public string ApplicationVirtualPath
	{
		get
		{
			return this._ApplicationVirtualPath;
		}
		set
		{
			if ((this._ApplicationVirtualPath != value))
			{
				this.OnApplicationVirtualPathChanging(value);
				this.SendPropertyChanging();
				this._ApplicationVirtualPath = value;
				this.SendPropertyChanged("ApplicationVirtualPath");
				this.OnApplicationVirtualPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string MachineName
	{
		get
		{
			return this._MachineName;
		}
		set
		{
			if ((this._MachineName != value))
			{
				this.OnMachineNameChanging(value);
				this.SendPropertyChanging();
				this._MachineName = value;
				this.SendPropertyChanged("MachineName");
				this.OnMachineNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(1024)")]
	public string RequestUrl
	{
		get
		{
			return this._RequestUrl;
		}
		set
		{
			if ((this._RequestUrl != value))
			{
				this.OnRequestUrlChanging(value);
				this.SendPropertyChanging();
				this._RequestUrl = value;
				this.SendPropertyChanged("RequestUrl");
				this.OnRequestUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(256)")]
	public string ExceptionType
	{
		get
		{
			return this._ExceptionType;
		}
		set
		{
			if ((this._ExceptionType != value))
			{
				this.OnExceptionTypeChanging(value);
				this.SendPropertyChanging();
				this._ExceptionType = value;
				this.SendPropertyChanged("ExceptionType");
				this.OnExceptionTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Details
	{
		get
		{
			return this._Details;
		}
		set
		{
			if ((this._Details != value))
			{
				this.OnDetailsChanging(value);
				this.SendPropertyChanging();
				this._Details = value;
				this.SendPropertyChanged("Details");
				this.OnDetailsChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Audit")]
public partial class Audit : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _CheckID;
	
	private System.Guid _OperteID;
	
	private string _InitialAuditor;
	
	private System.Nullable<System.DateTime> _InitialTime;
	
	private string _InitialResult;
	
	private string _InitialSuggestion;
	
	private string _FinalAuditor;
	
	private System.Nullable<System.DateTime> _FinalTime;
	
	private string _FinalResult;
	
	private string _FinalSuggestion;
	
	private EntityRef<ModifyApplication> _ModifyApplication;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCheckIDChanging(System.Guid value);
    partial void OnCheckIDChanged();
    partial void OnOperteIDChanging(System.Guid value);
    partial void OnOperteIDChanged();
    partial void OnInitialAuditorChanging(string value);
    partial void OnInitialAuditorChanged();
    partial void OnInitialTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnInitialTimeChanged();
    partial void OnInitialResultChanging(string value);
    partial void OnInitialResultChanged();
    partial void OnInitialSuggestionChanging(string value);
    partial void OnInitialSuggestionChanged();
    partial void OnFinalAuditorChanging(string value);
    partial void OnFinalAuditorChanged();
    partial void OnFinalTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFinalTimeChanged();
    partial void OnFinalResultChanging(string value);
    partial void OnFinalResultChanged();
    partial void OnFinalSuggestionChanging(string value);
    partial void OnFinalSuggestionChanged();
    #endregion
	
	public Audit()
	{
		this._ModifyApplication = default(EntityRef<ModifyApplication>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid CheckID
	{
		get
		{
			return this._CheckID;
		}
		set
		{
			if ((this._CheckID != value))
			{
				this.OnCheckIDChanging(value);
				this.SendPropertyChanging();
				this._CheckID = value;
				this.SendPropertyChanged("CheckID");
				this.OnCheckIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperteID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid OperteID
	{
		get
		{
			return this._OperteID;
		}
		set
		{
			if ((this._OperteID != value))
			{
				if (this._ModifyApplication.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnOperteIDChanging(value);
				this.SendPropertyChanging();
				this._OperteID = value;
				this.SendPropertyChanged("OperteID");
				this.OnOperteIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialAuditor", DbType="NVarChar(50)")]
	public string InitialAuditor
	{
		get
		{
			return this._InitialAuditor;
		}
		set
		{
			if ((this._InitialAuditor != value))
			{
				this.OnInitialAuditorChanging(value);
				this.SendPropertyChanging();
				this._InitialAuditor = value;
				this.SendPropertyChanged("InitialAuditor");
				this.OnInitialAuditorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> InitialTime
	{
		get
		{
			return this._InitialTime;
		}
		set
		{
			if ((this._InitialTime != value))
			{
				this.OnInitialTimeChanging(value);
				this.SendPropertyChanging();
				this._InitialTime = value;
				this.SendPropertyChanged("InitialTime");
				this.OnInitialTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialResult", DbType="NVarChar(20)")]
	public string InitialResult
	{
		get
		{
			return this._InitialResult;
		}
		set
		{
			if ((this._InitialResult != value))
			{
				this.OnInitialResultChanging(value);
				this.SendPropertyChanging();
				this._InitialResult = value;
				this.SendPropertyChanged("InitialResult");
				this.OnInitialResultChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialSuggestion", DbType="NVarChar(200)")]
	public string InitialSuggestion
	{
		get
		{
			return this._InitialSuggestion;
		}
		set
		{
			if ((this._InitialSuggestion != value))
			{
				this.OnInitialSuggestionChanging(value);
				this.SendPropertyChanging();
				this._InitialSuggestion = value;
				this.SendPropertyChanged("InitialSuggestion");
				this.OnInitialSuggestionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalAuditor", DbType="NVarChar(50)")]
	public string FinalAuditor
	{
		get
		{
			return this._FinalAuditor;
		}
		set
		{
			if ((this._FinalAuditor != value))
			{
				this.OnFinalAuditorChanging(value);
				this.SendPropertyChanging();
				this._FinalAuditor = value;
				this.SendPropertyChanged("FinalAuditor");
				this.OnFinalAuditorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> FinalTime
	{
		get
		{
			return this._FinalTime;
		}
		set
		{
			if ((this._FinalTime != value))
			{
				this.OnFinalTimeChanging(value);
				this.SendPropertyChanging();
				this._FinalTime = value;
				this.SendPropertyChanged("FinalTime");
				this.OnFinalTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalResult", DbType="NVarChar(20)")]
	public string FinalResult
	{
		get
		{
			return this._FinalResult;
		}
		set
		{
			if ((this._FinalResult != value))
			{
				this.OnFinalResultChanging(value);
				this.SendPropertyChanging();
				this._FinalResult = value;
				this.SendPropertyChanged("FinalResult");
				this.OnFinalResultChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalSuggestion", DbType="NVarChar(200)")]
	public string FinalSuggestion
	{
		get
		{
			return this._FinalSuggestion;
		}
		set
		{
			if ((this._FinalSuggestion != value))
			{
				this.OnFinalSuggestionChanging(value);
				this.SendPropertyChanging();
				this._FinalSuggestion = value;
				this.SendPropertyChanged("FinalSuggestion");
				this.OnFinalSuggestionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModifyApplication_Audit", Storage="_ModifyApplication", ThisKey="OperteID", OtherKey="OperateID", IsForeignKey=true)]
	public ModifyApplication ModifyApplication
	{
		get
		{
			return this._ModifyApplication.Entity;
		}
		set
		{
			ModifyApplication previousValue = this._ModifyApplication.Entity;
			if (((previousValue != value) 
						|| (this._ModifyApplication.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ModifyApplication.Entity = null;
					previousValue.Audits.Remove(this);
				}
				this._ModifyApplication.Entity = value;
				if ((value != null))
				{
					value.Audits.Add(this);
					this._OperteID = value.OperateID;
				}
				else
				{
					this._OperteID = default(System.Guid);
				}
				this.SendPropertyChanged("ModifyApplication");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CampusLocation")]
public partial class CampusLocation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _CampusLocationID;
	
	private string _CampusLocationName;
	
	private string _NCRECampusLocationID;
	
	private string _NCRECampusLocationName;
	
	private string _CETCampusLocationID;
	
	private string _CETCampusLocationName;
	
	private string _CampusCode;
	
	private string _CampusNumber;
	
	private EntitySet<Class> _Classes;
	
	private EntitySet<NCREINFO> _NCREINFOs;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampusLocationIDChanging(System.Guid value);
    partial void OnCampusLocationIDChanged();
    partial void OnCampusLocationNameChanging(string value);
    partial void OnCampusLocationNameChanged();
    partial void OnNCRECampusLocationIDChanging(string value);
    partial void OnNCRECampusLocationIDChanged();
    partial void OnNCRECampusLocationNameChanging(string value);
    partial void OnNCRECampusLocationNameChanged();
    partial void OnCETCampusLocationIDChanging(string value);
    partial void OnCETCampusLocationIDChanged();
    partial void OnCETCampusLocationNameChanging(string value);
    partial void OnCETCampusLocationNameChanged();
    partial void OnCampusCodeChanging(string value);
    partial void OnCampusCodeChanged();
    partial void OnCampusNumberChanging(string value);
    partial void OnCampusNumberChanged();
    #endregion
	
	public CampusLocation()
	{
		this._Classes = new EntitySet<Class>(new Action<Class>(this.attach_Classes), new Action<Class>(this.detach_Classes));
		this._NCREINFOs = new EntitySet<NCREINFO>(new Action<NCREINFO>(this.attach_NCREINFOs), new Action<NCREINFO>(this.detach_NCREINFOs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusLocationID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid CampusLocationID
	{
		get
		{
			return this._CampusLocationID;
		}
		set
		{
			if ((this._CampusLocationID != value))
			{
				this.OnCampusLocationIDChanging(value);
				this.SendPropertyChanging();
				this._CampusLocationID = value;
				this.SendPropertyChanged("CampusLocationID");
				this.OnCampusLocationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusLocationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string CampusLocationName
	{
		get
		{
			return this._CampusLocationName;
		}
		set
		{
			if ((this._CampusLocationName != value))
			{
				this.OnCampusLocationNameChanging(value);
				this.SendPropertyChanging();
				this._CampusLocationName = value;
				this.SendPropertyChanged("CampusLocationName");
				this.OnCampusLocationNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NCRECampusLocationID", DbType="NVarChar(10)")]
	public string NCRECampusLocationID
	{
		get
		{
			return this._NCRECampusLocationID;
		}
		set
		{
			if ((this._NCRECampusLocationID != value))
			{
				this.OnNCRECampusLocationIDChanging(value);
				this.SendPropertyChanging();
				this._NCRECampusLocationID = value;
				this.SendPropertyChanged("NCRECampusLocationID");
				this.OnNCRECampusLocationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NCRECampusLocationName", DbType="NVarChar(50)")]
	public string NCRECampusLocationName
	{
		get
		{
			return this._NCRECampusLocationName;
		}
		set
		{
			if ((this._NCRECampusLocationName != value))
			{
				this.OnNCRECampusLocationNameChanging(value);
				this.SendPropertyChanging();
				this._NCRECampusLocationName = value;
				this.SendPropertyChanged("NCRECampusLocationName");
				this.OnNCRECampusLocationNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CETCampusLocationID", DbType="NVarChar(10)")]
	public string CETCampusLocationID
	{
		get
		{
			return this._CETCampusLocationID;
		}
		set
		{
			if ((this._CETCampusLocationID != value))
			{
				this.OnCETCampusLocationIDChanging(value);
				this.SendPropertyChanging();
				this._CETCampusLocationID = value;
				this.SendPropertyChanged("CETCampusLocationID");
				this.OnCETCampusLocationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CETCampusLocationName", DbType="NVarChar(50)")]
	public string CETCampusLocationName
	{
		get
		{
			return this._CETCampusLocationName;
		}
		set
		{
			if ((this._CETCampusLocationName != value))
			{
				this.OnCETCampusLocationNameChanging(value);
				this.SendPropertyChanging();
				this._CETCampusLocationName = value;
				this.SendPropertyChanged("CETCampusLocationName");
				this.OnCETCampusLocationNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusCode", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
	public string CampusCode
	{
		get
		{
			return this._CampusCode;
		}
		set
		{
			if ((this._CampusCode != value))
			{
				this.OnCampusCodeChanging(value);
				this.SendPropertyChanging();
				this._CampusCode = value;
				this.SendPropertyChanged("CampusCode");
				this.OnCampusCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusNumber", DbType="NVarChar(1)")]
	public string CampusNumber
	{
		get
		{
			return this._CampusNumber;
		}
		set
		{
			if ((this._CampusNumber != value))
			{
				this.OnCampusNumberChanging(value);
				this.SendPropertyChanging();
				this._CampusNumber = value;
				this.SendPropertyChanged("CampusNumber");
				this.OnCampusNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampusLocation_Class", Storage="_Classes", ThisKey="CampusLocationID", OtherKey="CampusLocationID")]
	public EntitySet<Class> Classes
	{
		get
		{
			return this._Classes;
		}
		set
		{
			this._Classes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampusLocation_NCREINFO", Storage="_NCREINFOs", ThisKey="CampusLocationID", OtherKey="CampusLocationID")]
	public EntitySet<NCREINFO> NCREINFOs
	{
		get
		{
			return this._NCREINFOs;
		}
		set
		{
			this._NCREINFOs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Classes(Class entity)
	{
		this.SendPropertyChanging();
		entity.CampusLocation = this;
	}
	
	private void detach_Classes(Class entity)
	{
		this.SendPropertyChanging();
		entity.CampusLocation = null;
	}
	
	private void attach_NCREINFOs(NCREINFO entity)
	{
		this.SendPropertyChanging();
		entity.CampusLocation = this;
	}
	
	private void detach_NCREINFOs(NCREINFO entity)
	{
		this.SendPropertyChanging();
		entity.CampusLocation = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChangeCampus")]
public partial class ChangeCampus
{
	
	private System.Guid _TestRegisterID;
	
	private System.Guid _StuID;
	
	private System.Guid _SubjID;
	
	private string _Reason;
	
	private System.Nullable<System.Guid> _ChangedCampusID;
	
	private string _CurState;
	
	private string _CheckResult;
	
	private string _JMCheckUser;
	
	private System.Nullable<System.DateTime> _JMCheckDate;
	
	private string _JWCheckUser1;
	
	private string _JWCheckResult1;
	
	private System.Nullable<System.DateTime> _JWCheckTime1;
	
	private string _JWCheckUser2;
	
	private string _JWCheckResult2;
	
	private System.Nullable<System.DateTime> _JWCheckTime2;
	
	public ChangeCampus()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				this._TestRegisterID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid StuID
	{
		get
		{
			return this._StuID;
		}
		set
		{
			if ((this._StuID != value))
			{
				this._StuID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid SubjID
	{
		get
		{
			return this._SubjID;
		}
		set
		{
			if ((this._SubjID != value))
			{
				this._SubjID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(50)")]
	public string Reason
	{
		get
		{
			return this._Reason;
		}
		set
		{
			if ((this._Reason != value))
			{
				this._Reason = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedCampusID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> ChangedCampusID
	{
		get
		{
			return this._ChangedCampusID;
		}
		set
		{
			if ((this._ChangedCampusID != value))
			{
				this._ChangedCampusID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurState", DbType="NVarChar(15)")]
	public string CurState
	{
		get
		{
			return this._CurState;
		}
		set
		{
			if ((this._CurState != value))
			{
				this._CurState = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckResult", DbType="NVarChar(20)")]
	public string CheckResult
	{
		get
		{
			return this._CheckResult;
		}
		set
		{
			if ((this._CheckResult != value))
			{
				this._CheckResult = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JMCheckUser", DbType="NVarChar(50)")]
	public string JMCheckUser
	{
		get
		{
			return this._JMCheckUser;
		}
		set
		{
			if ((this._JMCheckUser != value))
			{
				this._JMCheckUser = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JMCheckDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> JMCheckDate
	{
		get
		{
			return this._JMCheckDate;
		}
		set
		{
			if ((this._JMCheckDate != value))
			{
				this._JMCheckDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JWCheckUser1", DbType="NVarChar(50)")]
	public string JWCheckUser1
	{
		get
		{
			return this._JWCheckUser1;
		}
		set
		{
			if ((this._JWCheckUser1 != value))
			{
				this._JWCheckUser1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JWCheckResult1", DbType="NVarChar(20)")]
	public string JWCheckResult1
	{
		get
		{
			return this._JWCheckResult1;
		}
		set
		{
			if ((this._JWCheckResult1 != value))
			{
				this._JWCheckResult1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JWCheckTime1", DbType="DateTime")]
	public System.Nullable<System.DateTime> JWCheckTime1
	{
		get
		{
			return this._JWCheckTime1;
		}
		set
		{
			if ((this._JWCheckTime1 != value))
			{
				this._JWCheckTime1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JWCheckUser2", DbType="NVarChar(50)")]
	public string JWCheckUser2
	{
		get
		{
			return this._JWCheckUser2;
		}
		set
		{
			if ((this._JWCheckUser2 != value))
			{
				this._JWCheckUser2 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JWCheckResult2", DbType="NVarChar(20)")]
	public string JWCheckResult2
	{
		get
		{
			return this._JWCheckResult2;
		}
		set
		{
			if ((this._JWCheckResult2 != value))
			{
				this._JWCheckResult2 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JWCheckTime2", DbType="DateTime")]
	public System.Nullable<System.DateTime> JWCheckTime2
	{
		get
		{
			return this._JWCheckTime2;
		}
		set
		{
			if ((this._JWCheckTime2 != value))
			{
				this._JWCheckTime2 = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Class")]
public partial class Class : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ClassID;
	
	private System.Guid _MajorID;
	
	private string _ClassName;
	
	private string _GradeName;
	
	private System.Guid _CampusLocationID;
	
	private string _Note;
	
	private System.Nullable<System.Guid> _NCRECampusLocationID;
	
	private System.Nullable<System.Guid> _CETCampusLocationID;
	
	private System.Nullable<System.Guid> _MHKCampusLocationID;
	
	private string _ClassNumber;
	
	private EntitySet<Student> _Students;
	
	private EntityRef<CampusLocation> _CampusLocation;
	
	private EntityRef<Major> _Major;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassIDChanging(System.Guid value);
    partial void OnClassIDChanged();
    partial void OnMajorIDChanging(System.Guid value);
    partial void OnMajorIDChanged();
    partial void OnClassNameChanging(string value);
    partial void OnClassNameChanged();
    partial void OnGradeNameChanging(string value);
    partial void OnGradeNameChanged();
    partial void OnCampusLocationIDChanging(System.Guid value);
    partial void OnCampusLocationIDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnNCRECampusLocationIDChanging(System.Nullable<System.Guid> value);
    partial void OnNCRECampusLocationIDChanged();
    partial void OnCETCampusLocationIDChanging(System.Nullable<System.Guid> value);
    partial void OnCETCampusLocationIDChanged();
    partial void OnMHKCampusLocationIDChanging(System.Nullable<System.Guid> value);
    partial void OnMHKCampusLocationIDChanged();
    partial void OnClassNumberChanging(string value);
    partial void OnClassNumberChanged();
    #endregion
	
	public Class()
	{
		this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
		this._CampusLocation = default(EntityRef<CampusLocation>);
		this._Major = default(EntityRef<Major>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid ClassID
	{
		get
		{
			return this._ClassID;
		}
		set
		{
			if ((this._ClassID != value))
			{
				this.OnClassIDChanging(value);
				this.SendPropertyChanging();
				this._ClassID = value;
				this.SendPropertyChanged("ClassID");
				this.OnClassIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid MajorID
	{
		get
		{
			return this._MajorID;
		}
		set
		{
			if ((this._MajorID != value))
			{
				if (this._Major.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMajorIDChanging(value);
				this.SendPropertyChanging();
				this._MajorID = value;
				this.SendPropertyChanged("MajorID");
				this.OnMajorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string ClassName
	{
		get
		{
			return this._ClassName;
		}
		set
		{
			if ((this._ClassName != value))
			{
				this.OnClassNameChanging(value);
				this.SendPropertyChanging();
				this._ClassName = value;
				this.SendPropertyChanged("ClassName");
				this.OnClassNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string GradeName
	{
		get
		{
			return this._GradeName;
		}
		set
		{
			if ((this._GradeName != value))
			{
				this.OnGradeNameChanging(value);
				this.SendPropertyChanging();
				this._GradeName = value;
				this.SendPropertyChanged("GradeName");
				this.OnGradeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusLocationID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid CampusLocationID
	{
		get
		{
			return this._CampusLocationID;
		}
		set
		{
			if ((this._CampusLocationID != value))
			{
				if (this._CampusLocation.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCampusLocationIDChanging(value);
				this.SendPropertyChanging();
				this._CampusLocationID = value;
				this.SendPropertyChanged("CampusLocationID");
				this.OnCampusLocationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NChar(200)")]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this.OnNoteChanging(value);
				this.SendPropertyChanging();
				this._Note = value;
				this.SendPropertyChanged("Note");
				this.OnNoteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NCRECampusLocationID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> NCRECampusLocationID
	{
		get
		{
			return this._NCRECampusLocationID;
		}
		set
		{
			if ((this._NCRECampusLocationID != value))
			{
				this.OnNCRECampusLocationIDChanging(value);
				this.SendPropertyChanging();
				this._NCRECampusLocationID = value;
				this.SendPropertyChanged("NCRECampusLocationID");
				this.OnNCRECampusLocationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CETCampusLocationID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> CETCampusLocationID
	{
		get
		{
			return this._CETCampusLocationID;
		}
		set
		{
			if ((this._CETCampusLocationID != value))
			{
				this.OnCETCampusLocationIDChanging(value);
				this.SendPropertyChanging();
				this._CETCampusLocationID = value;
				this.SendPropertyChanged("CETCampusLocationID");
				this.OnCETCampusLocationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHKCampusLocationID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> MHKCampusLocationID
	{
		get
		{
			return this._MHKCampusLocationID;
		}
		set
		{
			if ((this._MHKCampusLocationID != value))
			{
				this.OnMHKCampusLocationIDChanging(value);
				this.SendPropertyChanging();
				this._MHKCampusLocationID = value;
				this.SendPropertyChanged("MHKCampusLocationID");
				this.OnMHKCampusLocationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNumber", DbType="NVarChar(3)")]
	public string ClassNumber
	{
		get
		{
			return this._ClassNumber;
		}
		set
		{
			if ((this._ClassNumber != value))
			{
				this.OnClassNumberChanging(value);
				this.SendPropertyChanging();
				this._ClassNumber = value;
				this.SendPropertyChanged("ClassNumber");
				this.OnClassNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Student", Storage="_Students", ThisKey="ClassID", OtherKey="ClassID")]
	public EntitySet<Student> Students
	{
		get
		{
			return this._Students;
		}
		set
		{
			this._Students.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampusLocation_Class", Storage="_CampusLocation", ThisKey="CampusLocationID", OtherKey="CampusLocationID", IsForeignKey=true)]
	public CampusLocation CampusLocation
	{
		get
		{
			return this._CampusLocation.Entity;
		}
		set
		{
			CampusLocation previousValue = this._CampusLocation.Entity;
			if (((previousValue != value) 
						|| (this._CampusLocation.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CampusLocation.Entity = null;
					previousValue.Classes.Remove(this);
				}
				this._CampusLocation.Entity = value;
				if ((value != null))
				{
					value.Classes.Add(this);
					this._CampusLocationID = value.CampusLocationID;
				}
				else
				{
					this._CampusLocationID = default(System.Guid);
				}
				this.SendPropertyChanged("CampusLocation");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Major_Class", Storage="_Major", ThisKey="MajorID", OtherKey="MajorID", IsForeignKey=true)]
	public Major Major
	{
		get
		{
			return this._Major.Entity;
		}
		set
		{
			Major previousValue = this._Major.Entity;
			if (((previousValue != value) 
						|| (this._Major.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Major.Entity = null;
					previousValue.Classes.Remove(this);
				}
				this._Major.Entity = value;
				if ((value != null))
				{
					value.Classes.Add(this);
					this._MajorID = value.MajorID;
				}
				else
				{
					this._MajorID = default(System.Guid);
				}
				this.SendPropertyChanged("Major");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Students(Student entity)
	{
		this.SendPropertyChanging();
		entity.Class = this;
	}
	
	private void detach_Students(Student entity)
	{
		this.SendPropertyChanging();
		entity.Class = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dept")]
public partial class Dept : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _DeptID;
	
	private string _DeptName;
	
	private string _Note;
	
	private string _DeptNumber;
	
	private EntitySet<DeptProcess> _DeptProcesses;
	
	private EntitySet<Lszh> _Lszhs;
	
	private EntitySet<Major> _Majors;
	
	private EntitySet<RegisterProcess> _RegisterProcesses;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeptIDChanging(System.Guid value);
    partial void OnDeptIDChanged();
    partial void OnDeptNameChanging(string value);
    partial void OnDeptNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnDeptNumberChanging(string value);
    partial void OnDeptNumberChanged();
    #endregion
	
	public Dept()
	{
		this._DeptProcesses = new EntitySet<DeptProcess>(new Action<DeptProcess>(this.attach_DeptProcesses), new Action<DeptProcess>(this.detach_DeptProcesses));
		this._Lszhs = new EntitySet<Lszh>(new Action<Lszh>(this.attach_Lszhs), new Action<Lszh>(this.detach_Lszhs));
		this._Majors = new EntitySet<Major>(new Action<Major>(this.attach_Majors), new Action<Major>(this.detach_Majors));
		this._RegisterProcesses = new EntitySet<RegisterProcess>(new Action<RegisterProcess>(this.attach_RegisterProcesses), new Action<RegisterProcess>(this.detach_RegisterProcesses));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid DeptID
	{
		get
		{
			return this._DeptID;
		}
		set
		{
			if ((this._DeptID != value))
			{
				this.OnDeptIDChanging(value);
				this.SendPropertyChanging();
				this._DeptID = value;
				this.SendPropertyChanged("DeptID");
				this.OnDeptIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string DeptName
	{
		get
		{
			return this._DeptName;
		}
		set
		{
			if ((this._DeptName != value))
			{
				this.OnDeptNameChanging(value);
				this.SendPropertyChanging();
				this._DeptName = value;
				this.SendPropertyChanged("DeptName");
				this.OnDeptNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(200)")]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this.OnNoteChanging(value);
				this.SendPropertyChanging();
				this._Note = value;
				this.SendPropertyChanged("Note");
				this.OnNoteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptNumber", DbType="NVarChar(3)")]
	public string DeptNumber
	{
		get
		{
			return this._DeptNumber;
		}
		set
		{
			if ((this._DeptNumber != value))
			{
				this.OnDeptNumberChanging(value);
				this.SendPropertyChanging();
				this._DeptNumber = value;
				this.SendPropertyChanged("DeptNumber");
				this.OnDeptNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dept_DeptProcess", Storage="_DeptProcesses", ThisKey="DeptID", OtherKey="DeptID")]
	public EntitySet<DeptProcess> DeptProcesses
	{
		get
		{
			return this._DeptProcesses;
		}
		set
		{
			this._DeptProcesses.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dept_Lszh", Storage="_Lszhs", ThisKey="DeptID", OtherKey="DeptID")]
	public EntitySet<Lszh> Lszhs
	{
		get
		{
			return this._Lszhs;
		}
		set
		{
			this._Lszhs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dept_Major", Storage="_Majors", ThisKey="DeptID", OtherKey="DeptID")]
	public EntitySet<Major> Majors
	{
		get
		{
			return this._Majors;
		}
		set
		{
			this._Majors.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dept_RegisterProcess", Storage="_RegisterProcesses", ThisKey="DeptID", OtherKey="DeptID")]
	public EntitySet<RegisterProcess> RegisterProcesses
	{
		get
		{
			return this._RegisterProcesses;
		}
		set
		{
			this._RegisterProcesses.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_DeptProcesses(DeptProcess entity)
	{
		this.SendPropertyChanging();
		entity.Dept = this;
	}
	
	private void detach_DeptProcesses(DeptProcess entity)
	{
		this.SendPropertyChanging();
		entity.Dept = null;
	}
	
	private void attach_Lszhs(Lszh entity)
	{
		this.SendPropertyChanging();
		entity.Dept = this;
	}
	
	private void detach_Lszhs(Lszh entity)
	{
		this.SendPropertyChanging();
		entity.Dept = null;
	}
	
	private void attach_Majors(Major entity)
	{
		this.SendPropertyChanging();
		entity.Dept = this;
	}
	
	private void detach_Majors(Major entity)
	{
		this.SendPropertyChanging();
		entity.Dept = null;
	}
	
	private void attach_RegisterProcesses(RegisterProcess entity)
	{
		this.SendPropertyChanging();
		entity.Dept = this;
	}
	
	private void detach_RegisterProcesses(RegisterProcess entity)
	{
		this.SendPropertyChanging();
		entity.Dept = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeptProcess")]
public partial class DeptProcess : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _RegisterTypeID;
	
	private System.Guid _DeptID;
	
	private string _RegisterState;
	
	private EntityRef<Dept> _Dept;
	
	private EntityRef<RegisterState> _RegisterState1;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegisterTypeIDChanging(System.Guid value);
    partial void OnRegisterTypeIDChanged();
    partial void OnDeptIDChanging(System.Guid value);
    partial void OnDeptIDChanged();
    partial void OnRegisterStateChanging(string value);
    partial void OnRegisterStateChanged();
    #endregion
	
	public DeptProcess()
	{
		this._Dept = default(EntityRef<Dept>);
		this._RegisterState1 = default(EntityRef<RegisterState>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterTypeID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid RegisterTypeID
	{
		get
		{
			return this._RegisterTypeID;
		}
		set
		{
			if ((this._RegisterTypeID != value))
			{
				if (this._RegisterState1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRegisterTypeIDChanging(value);
				this.SendPropertyChanging();
				this._RegisterTypeID = value;
				this.SendPropertyChanged("RegisterTypeID");
				this.OnRegisterTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid DeptID
	{
		get
		{
			return this._DeptID;
		}
		set
		{
			if ((this._DeptID != value))
			{
				if (this._Dept.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDeptIDChanging(value);
				this.SendPropertyChanging();
				this._DeptID = value;
				this.SendPropertyChanged("DeptID");
				this.OnDeptIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterState", DbType="NVarChar(10)")]
	public string RegisterState
	{
		get
		{
			return this._RegisterState;
		}
		set
		{
			if ((this._RegisterState != value))
			{
				this.OnRegisterStateChanging(value);
				this.SendPropertyChanging();
				this._RegisterState = value;
				this.SendPropertyChanged("RegisterState");
				this.OnRegisterStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dept_DeptProcess", Storage="_Dept", ThisKey="DeptID", OtherKey="DeptID", IsForeignKey=true)]
	public Dept Dept
	{
		get
		{
			return this._Dept.Entity;
		}
		set
		{
			Dept previousValue = this._Dept.Entity;
			if (((previousValue != value) 
						|| (this._Dept.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Dept.Entity = null;
					previousValue.DeptProcesses.Remove(this);
				}
				this._Dept.Entity = value;
				if ((value != null))
				{
					value.DeptProcesses.Add(this);
					this._DeptID = value.DeptID;
				}
				else
				{
					this._DeptID = default(System.Guid);
				}
				this.SendPropertyChanged("Dept");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegisterState_DeptProcess", Storage="_RegisterState1", ThisKey="RegisterTypeID", OtherKey="RegisterTypeID", IsForeignKey=true)]
	public RegisterState RegisterState1
	{
		get
		{
			return this._RegisterState1.Entity;
		}
		set
		{
			RegisterState previousValue = this._RegisterState1.Entity;
			if (((previousValue != value) 
						|| (this._RegisterState1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._RegisterState1.Entity = null;
					previousValue.DeptProcesses.Remove(this);
				}
				this._RegisterState1.Entity = value;
				if ((value != null))
				{
					value.DeptProcesses.Add(this);
					this._RegisterTypeID = value.RegisterTypeID;
				}
				else
				{
					this._RegisterTypeID = default(System.Guid);
				}
				this.SendPropertyChanged("RegisterState1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EngClass")]
public partial class EngClass : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ClassID;
	
	private System.Guid _MajorID;
	
	private string _ClassName;
	
	private string _GradeName;
	
	private System.Guid _CampusLocationID;
	
	private string _Note;
	
	private System.Nullable<System.Guid> _NCRECampusLocationID;
	
	private System.Nullable<System.Guid> _CETCampusLocationID;
	
	private System.Nullable<System.Guid> _MHKCampusLocationID;
	
	private string _ClassNumber;
	
	private EntityRef<EngMajor> _EngMajor;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassIDChanging(System.Guid value);
    partial void OnClassIDChanged();
    partial void OnMajorIDChanging(System.Guid value);
    partial void OnMajorIDChanged();
    partial void OnClassNameChanging(string value);
    partial void OnClassNameChanged();
    partial void OnGradeNameChanging(string value);
    partial void OnGradeNameChanged();
    partial void OnCampusLocationIDChanging(System.Guid value);
    partial void OnCampusLocationIDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnNCRECampusLocationIDChanging(System.Nullable<System.Guid> value);
    partial void OnNCRECampusLocationIDChanged();
    partial void OnCETCampusLocationIDChanging(System.Nullable<System.Guid> value);
    partial void OnCETCampusLocationIDChanged();
    partial void OnMHKCampusLocationIDChanging(System.Nullable<System.Guid> value);
    partial void OnMHKCampusLocationIDChanged();
    partial void OnClassNumberChanging(string value);
    partial void OnClassNumberChanged();
    #endregion
	
	public EngClass()
	{
		this._EngMajor = default(EntityRef<EngMajor>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid ClassID
	{
		get
		{
			return this._ClassID;
		}
		set
		{
			if ((this._ClassID != value))
			{
				this.OnClassIDChanging(value);
				this.SendPropertyChanging();
				this._ClassID = value;
				this.SendPropertyChanged("ClassID");
				this.OnClassIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid MajorID
	{
		get
		{
			return this._MajorID;
		}
		set
		{
			if ((this._MajorID != value))
			{
				if (this._EngMajor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMajorIDChanging(value);
				this.SendPropertyChanging();
				this._MajorID = value;
				this.SendPropertyChanged("MajorID");
				this.OnMajorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string ClassName
	{
		get
		{
			return this._ClassName;
		}
		set
		{
			if ((this._ClassName != value))
			{
				this.OnClassNameChanging(value);
				this.SendPropertyChanging();
				this._ClassName = value;
				this.SendPropertyChanged("ClassName");
				this.OnClassNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string GradeName
	{
		get
		{
			return this._GradeName;
		}
		set
		{
			if ((this._GradeName != value))
			{
				this.OnGradeNameChanging(value);
				this.SendPropertyChanging();
				this._GradeName = value;
				this.SendPropertyChanged("GradeName");
				this.OnGradeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusLocationID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid CampusLocationID
	{
		get
		{
			return this._CampusLocationID;
		}
		set
		{
			if ((this._CampusLocationID != value))
			{
				this.OnCampusLocationIDChanging(value);
				this.SendPropertyChanging();
				this._CampusLocationID = value;
				this.SendPropertyChanged("CampusLocationID");
				this.OnCampusLocationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NChar(200)")]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this.OnNoteChanging(value);
				this.SendPropertyChanging();
				this._Note = value;
				this.SendPropertyChanged("Note");
				this.OnNoteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NCRECampusLocationID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> NCRECampusLocationID
	{
		get
		{
			return this._NCRECampusLocationID;
		}
		set
		{
			if ((this._NCRECampusLocationID != value))
			{
				this.OnNCRECampusLocationIDChanging(value);
				this.SendPropertyChanging();
				this._NCRECampusLocationID = value;
				this.SendPropertyChanged("NCRECampusLocationID");
				this.OnNCRECampusLocationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CETCampusLocationID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> CETCampusLocationID
	{
		get
		{
			return this._CETCampusLocationID;
		}
		set
		{
			if ((this._CETCampusLocationID != value))
			{
				this.OnCETCampusLocationIDChanging(value);
				this.SendPropertyChanging();
				this._CETCampusLocationID = value;
				this.SendPropertyChanged("CETCampusLocationID");
				this.OnCETCampusLocationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHKCampusLocationID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> MHKCampusLocationID
	{
		get
		{
			return this._MHKCampusLocationID;
		}
		set
		{
			if ((this._MHKCampusLocationID != value))
			{
				this.OnMHKCampusLocationIDChanging(value);
				this.SendPropertyChanging();
				this._MHKCampusLocationID = value;
				this.SendPropertyChanged("MHKCampusLocationID");
				this.OnMHKCampusLocationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNumber", DbType="NVarChar(3)")]
	public string ClassNumber
	{
		get
		{
			return this._ClassNumber;
		}
		set
		{
			if ((this._ClassNumber != value))
			{
				this.OnClassNumberChanging(value);
				this.SendPropertyChanging();
				this._ClassNumber = value;
				this.SendPropertyChanged("ClassNumber");
				this.OnClassNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EngMajor_EngClass", Storage="_EngMajor", ThisKey="MajorID", OtherKey="MajorID", IsForeignKey=true)]
	public EngMajor EngMajor
	{
		get
		{
			return this._EngMajor.Entity;
		}
		set
		{
			EngMajor previousValue = this._EngMajor.Entity;
			if (((previousValue != value) 
						|| (this._EngMajor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EngMajor.Entity = null;
					previousValue.EngClasses.Remove(this);
				}
				this._EngMajor.Entity = value;
				if ((value != null))
				{
					value.EngClasses.Add(this);
					this._MajorID = value.MajorID;
				}
				else
				{
					this._MajorID = default(System.Guid);
				}
				this.SendPropertyChanged("EngMajor");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EngDept")]
public partial class EngDept : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _DeptID;
	
	private string _DeptName;
	
	private string _Note;
	
	private string _DeptNumber;
	
	private EntitySet<EngMajor> _EngMajors;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeptIDChanging(System.Guid value);
    partial void OnDeptIDChanged();
    partial void OnDeptNameChanging(string value);
    partial void OnDeptNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnDeptNumberChanging(string value);
    partial void OnDeptNumberChanged();
    #endregion
	
	public EngDept()
	{
		this._EngMajors = new EntitySet<EngMajor>(new Action<EngMajor>(this.attach_EngMajors), new Action<EngMajor>(this.detach_EngMajors));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid DeptID
	{
		get
		{
			return this._DeptID;
		}
		set
		{
			if ((this._DeptID != value))
			{
				this.OnDeptIDChanging(value);
				this.SendPropertyChanging();
				this._DeptID = value;
				this.SendPropertyChanged("DeptID");
				this.OnDeptIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string DeptName
	{
		get
		{
			return this._DeptName;
		}
		set
		{
			if ((this._DeptName != value))
			{
				this.OnDeptNameChanging(value);
				this.SendPropertyChanging();
				this._DeptName = value;
				this.SendPropertyChanged("DeptName");
				this.OnDeptNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(200)")]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this.OnNoteChanging(value);
				this.SendPropertyChanging();
				this._Note = value;
				this.SendPropertyChanged("Note");
				this.OnNoteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptNumber", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
	public string DeptNumber
	{
		get
		{
			return this._DeptNumber;
		}
		set
		{
			if ((this._DeptNumber != value))
			{
				this.OnDeptNumberChanging(value);
				this.SendPropertyChanging();
				this._DeptNumber = value;
				this.SendPropertyChanged("DeptNumber");
				this.OnDeptNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EngDept_EngMajor", Storage="_EngMajors", ThisKey="DeptID", OtherKey="DeptID")]
	public EntitySet<EngMajor> EngMajors
	{
		get
		{
			return this._EngMajors;
		}
		set
		{
			this._EngMajors.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_EngMajors(EngMajor entity)
	{
		this.SendPropertyChanging();
		entity.EngDept = this;
	}
	
	private void detach_EngMajors(EngMajor entity)
	{
		this.SendPropertyChanging();
		entity.EngDept = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EngGrade")]
public partial class EngGrade : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _TestRegisterID;
	
	private System.Guid _StudentID;
	
	private string _LanguageLevel;
	
	private string _TestGrade;
	
	private string _ExamRegistrationNum;
	
	private System.DateTime _TestDate;
	
	private EntityRef<StudentDetail> _StudentDetail;
	
	private EntityRef<TestRegister> _TestRegister;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestRegisterIDChanging(System.Guid value);
    partial void OnTestRegisterIDChanged();
    partial void OnStudentIDChanging(System.Guid value);
    partial void OnStudentIDChanged();
    partial void OnLanguageLevelChanging(string value);
    partial void OnLanguageLevelChanged();
    partial void OnTestGradeChanging(string value);
    partial void OnTestGradeChanged();
    partial void OnExamRegistrationNumChanging(string value);
    partial void OnExamRegistrationNumChanged();
    partial void OnTestDateChanging(System.DateTime value);
    partial void OnTestDateChanged();
    #endregion
	
	public EngGrade()
	{
		this._StudentDetail = default(EntityRef<StudentDetail>);
		this._TestRegister = default(EntityRef<TestRegister>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				if (this._TestRegister.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTestRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._TestRegisterID = value;
				this.SendPropertyChanged("TestRegisterID");
				this.OnTestRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				if (this._StudentDetail.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStudentIDChanging(value);
				this.SendPropertyChanging();
				this._StudentID = value;
				this.SendPropertyChanged("StudentID");
				this.OnStudentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageLevel", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string LanguageLevel
	{
		get
		{
			return this._LanguageLevel;
		}
		set
		{
			if ((this._LanguageLevel != value))
			{
				this.OnLanguageLevelChanging(value);
				this.SendPropertyChanging();
				this._LanguageLevel = value;
				this.SendPropertyChanged("LanguageLevel");
				this.OnLanguageLevelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestGrade", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
	public string TestGrade
	{
		get
		{
			return this._TestGrade;
		}
		set
		{
			if ((this._TestGrade != value))
			{
				this.OnTestGradeChanging(value);
				this.SendPropertyChanging();
				this._TestGrade = value;
				this.SendPropertyChanged("TestGrade");
				this.OnTestGradeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamRegistrationNum", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
	public string ExamRegistrationNum
	{
		get
		{
			return this._ExamRegistrationNum;
		}
		set
		{
			if ((this._ExamRegistrationNum != value))
			{
				this.OnExamRegistrationNumChanging(value);
				this.SendPropertyChanging();
				this._ExamRegistrationNum = value;
				this.SendPropertyChanged("ExamRegistrationNum");
				this.OnExamRegistrationNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestDate", DbType="Date NOT NULL", IsPrimaryKey=true)]
	public System.DateTime TestDate
	{
		get
		{
			return this._TestDate;
		}
		set
		{
			if ((this._TestDate != value))
			{
				this.OnTestDateChanging(value);
				this.SendPropertyChanging();
				this._TestDate = value;
				this.SendPropertyChanged("TestDate");
				this.OnTestDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_EngGrade", Storage="_StudentDetail", ThisKey="StudentID", OtherKey="StudentID", IsForeignKey=true)]
	public StudentDetail StudentDetail
	{
		get
		{
			return this._StudentDetail.Entity;
		}
		set
		{
			StudentDetail previousValue = this._StudentDetail.Entity;
			if (((previousValue != value) 
						|| (this._StudentDetail.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StudentDetail.Entity = null;
					previousValue.EngGrades.Remove(this);
				}
				this._StudentDetail.Entity = value;
				if ((value != null))
				{
					value.EngGrades.Add(this);
					this._StudentID = value.StudentID;
				}
				else
				{
					this._StudentID = default(System.Guid);
				}
				this.SendPropertyChanged("StudentDetail");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestRegister_EngGrade", Storage="_TestRegister", ThisKey="TestRegisterID", OtherKey="TestRegisterID", IsForeignKey=true)]
	public TestRegister TestRegister
	{
		get
		{
			return this._TestRegister.Entity;
		}
		set
		{
			TestRegister previousValue = this._TestRegister.Entity;
			if (((previousValue != value) 
						|| (this._TestRegister.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TestRegister.Entity = null;
					previousValue.EngGrades.Remove(this);
				}
				this._TestRegister.Entity = value;
				if ((value != null))
				{
					value.EngGrades.Add(this);
					this._TestRegisterID = value.TestRegisterID;
				}
				else
				{
					this._TestRegisterID = default(System.Guid);
				}
				this.SendPropertyChanged("TestRegister");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EngMajor")]
public partial class EngMajor : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _MajorID;
	
	private System.Guid _DeptID;
	
	private string _MajorName;
	
	private string _Note;
	
	private string _MajorNumber;
	
	private EntitySet<EngClass> _EngClasses;
	
	private EntityRef<EngDept> _EngDept;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMajorIDChanging(System.Guid value);
    partial void OnMajorIDChanged();
    partial void OnDeptIDChanging(System.Guid value);
    partial void OnDeptIDChanged();
    partial void OnMajorNameChanging(string value);
    partial void OnMajorNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnMajorNumberChanging(string value);
    partial void OnMajorNumberChanged();
    #endregion
	
	public EngMajor()
	{
		this._EngClasses = new EntitySet<EngClass>(new Action<EngClass>(this.attach_EngClasses), new Action<EngClass>(this.detach_EngClasses));
		this._EngDept = default(EntityRef<EngDept>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid MajorID
	{
		get
		{
			return this._MajorID;
		}
		set
		{
			if ((this._MajorID != value))
			{
				this.OnMajorIDChanging(value);
				this.SendPropertyChanging();
				this._MajorID = value;
				this.SendPropertyChanged("MajorID");
				this.OnMajorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid DeptID
	{
		get
		{
			return this._DeptID;
		}
		set
		{
			if ((this._DeptID != value))
			{
				if (this._EngDept.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDeptIDChanging(value);
				this.SendPropertyChanging();
				this._DeptID = value;
				this.SendPropertyChanged("DeptID");
				this.OnDeptIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string MajorName
	{
		get
		{
			return this._MajorName;
		}
		set
		{
			if ((this._MajorName != value))
			{
				this.OnMajorNameChanging(value);
				this.SendPropertyChanging();
				this._MajorName = value;
				this.SendPropertyChanged("MajorName");
				this.OnMajorNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(200)")]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this.OnNoteChanging(value);
				this.SendPropertyChanging();
				this._Note = value;
				this.SendPropertyChanged("Note");
				this.OnNoteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorNumber", DbType="NVarChar(6)")]
	public string MajorNumber
	{
		get
		{
			return this._MajorNumber;
		}
		set
		{
			if ((this._MajorNumber != value))
			{
				this.OnMajorNumberChanging(value);
				this.SendPropertyChanging();
				this._MajorNumber = value;
				this.SendPropertyChanged("MajorNumber");
				this.OnMajorNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EngMajor_EngClass", Storage="_EngClasses", ThisKey="MajorID", OtherKey="MajorID")]
	public EntitySet<EngClass> EngClasses
	{
		get
		{
			return this._EngClasses;
		}
		set
		{
			this._EngClasses.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EngDept_EngMajor", Storage="_EngDept", ThisKey="DeptID", OtherKey="DeptID", IsForeignKey=true)]
	public EngDept EngDept
	{
		get
		{
			return this._EngDept.Entity;
		}
		set
		{
			EngDept previousValue = this._EngDept.Entity;
			if (((previousValue != value) 
						|| (this._EngDept.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EngDept.Entity = null;
					previousValue.EngMajors.Remove(this);
				}
				this._EngDept.Entity = value;
				if ((value != null))
				{
					value.EngMajors.Add(this);
					this._DeptID = value.DeptID;
				}
				else
				{
					this._DeptID = default(System.Guid);
				}
				this.SendPropertyChanged("EngDept");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_EngClasses(EngClass entity)
	{
		this.SendPropertyChanging();
		entity.EngMajor = this;
	}
	
	private void detach_EngClasses(EngClass entity)
	{
		this.SendPropertyChanging();
		entity.EngMajor = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EngRedo")]
public partial class EngRedo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _TestRegisterID;
	
	private System.Guid _StuID;
	
	private System.Guid _SubjID;
	
	private string _ApplyUser;
	
	private System.Nullable<System.DateTime> _ApplyDate;
	
	private string _ApplyReason;
	
	private string _CurState;
	
	private string _InitUser;
	
	private string _InitResult;
	
	private System.Nullable<System.DateTime> _InitDate;
	
	private string _InitSuggestion;
	
	private string _FinalUser;
	
	private string _FinalResult;
	
	private System.Nullable<System.DateTime> _FinalDate;
	
	private string _FinalSuggestion;
	
	private EntityRef<StudentDetail> _StudentDetail;
	
	private EntityRef<TestRegister> _TestRegister;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestRegisterIDChanging(System.Guid value);
    partial void OnTestRegisterIDChanged();
    partial void OnStuIDChanging(System.Guid value);
    partial void OnStuIDChanged();
    partial void OnSubjIDChanging(System.Guid value);
    partial void OnSubjIDChanged();
    partial void OnApplyUserChanging(string value);
    partial void OnApplyUserChanged();
    partial void OnApplyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApplyDateChanged();
    partial void OnApplyReasonChanging(string value);
    partial void OnApplyReasonChanged();
    partial void OnCurStateChanging(string value);
    partial void OnCurStateChanged();
    partial void OnInitUserChanging(string value);
    partial void OnInitUserChanged();
    partial void OnInitResultChanging(string value);
    partial void OnInitResultChanged();
    partial void OnInitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInitDateChanged();
    partial void OnInitSuggestionChanging(string value);
    partial void OnInitSuggestionChanged();
    partial void OnFinalUserChanging(string value);
    partial void OnFinalUserChanged();
    partial void OnFinalResultChanging(string value);
    partial void OnFinalResultChanged();
    partial void OnFinalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinalDateChanged();
    partial void OnFinalSuggestionChanging(string value);
    partial void OnFinalSuggestionChanged();
    #endregion
	
	public EngRedo()
	{
		this._StudentDetail = default(EntityRef<StudentDetail>);
		this._TestRegister = default(EntityRef<TestRegister>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				if (this._TestRegister.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTestRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._TestRegisterID = value;
				this.SendPropertyChanged("TestRegisterID");
				this.OnTestRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid StuID
	{
		get
		{
			return this._StuID;
		}
		set
		{
			if ((this._StuID != value))
			{
				if (this._StudentDetail.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStuIDChanging(value);
				this.SendPropertyChanging();
				this._StuID = value;
				this.SendPropertyChanged("StuID");
				this.OnStuIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid SubjID
	{
		get
		{
			return this._SubjID;
		}
		set
		{
			if ((this._SubjID != value))
			{
				this.OnSubjIDChanging(value);
				this.SendPropertyChanging();
				this._SubjID = value;
				this.SendPropertyChanged("SubjID");
				this.OnSubjIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUser", DbType="NVarChar(15)")]
	public string ApplyUser
	{
		get
		{
			return this._ApplyUser;
		}
		set
		{
			if ((this._ApplyUser != value))
			{
				this.OnApplyUserChanging(value);
				this.SendPropertyChanging();
				this._ApplyUser = value;
				this.SendPropertyChanged("ApplyUser");
				this.OnApplyUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ApplyDate
	{
		get
		{
			return this._ApplyDate;
		}
		set
		{
			if ((this._ApplyDate != value))
			{
				this.OnApplyDateChanging(value);
				this.SendPropertyChanging();
				this._ApplyDate = value;
				this.SendPropertyChanged("ApplyDate");
				this.OnApplyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyReason", DbType="NVarChar(50)")]
	public string ApplyReason
	{
		get
		{
			return this._ApplyReason;
		}
		set
		{
			if ((this._ApplyReason != value))
			{
				this.OnApplyReasonChanging(value);
				this.SendPropertyChanging();
				this._ApplyReason = value;
				this.SendPropertyChanged("ApplyReason");
				this.OnApplyReasonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurState", DbType="NVarChar(10)")]
	public string CurState
	{
		get
		{
			return this._CurState;
		}
		set
		{
			if ((this._CurState != value))
			{
				this.OnCurStateChanging(value);
				this.SendPropertyChanging();
				this._CurState = value;
				this.SendPropertyChanged("CurState");
				this.OnCurStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitUser", DbType="NVarChar(10)")]
	public string InitUser
	{
		get
		{
			return this._InitUser;
		}
		set
		{
			if ((this._InitUser != value))
			{
				this.OnInitUserChanging(value);
				this.SendPropertyChanging();
				this._InitUser = value;
				this.SendPropertyChanged("InitUser");
				this.OnInitUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitResult", DbType="NVarChar(10)")]
	public string InitResult
	{
		get
		{
			return this._InitResult;
		}
		set
		{
			if ((this._InitResult != value))
			{
				this.OnInitResultChanging(value);
				this.SendPropertyChanging();
				this._InitResult = value;
				this.SendPropertyChanged("InitResult");
				this.OnInitResultChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InitDate
	{
		get
		{
			return this._InitDate;
		}
		set
		{
			if ((this._InitDate != value))
			{
				this.OnInitDateChanging(value);
				this.SendPropertyChanging();
				this._InitDate = value;
				this.SendPropertyChanged("InitDate");
				this.OnInitDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitSuggestion", DbType="NVarChar(20)")]
	public string InitSuggestion
	{
		get
		{
			return this._InitSuggestion;
		}
		set
		{
			if ((this._InitSuggestion != value))
			{
				this.OnInitSuggestionChanging(value);
				this.SendPropertyChanging();
				this._InitSuggestion = value;
				this.SendPropertyChanged("InitSuggestion");
				this.OnInitSuggestionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalUser", DbType="NVarChar(10)")]
	public string FinalUser
	{
		get
		{
			return this._FinalUser;
		}
		set
		{
			if ((this._FinalUser != value))
			{
				this.OnFinalUserChanging(value);
				this.SendPropertyChanging();
				this._FinalUser = value;
				this.SendPropertyChanged("FinalUser");
				this.OnFinalUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalResult", DbType="NVarChar(10)")]
	public string FinalResult
	{
		get
		{
			return this._FinalResult;
		}
		set
		{
			if ((this._FinalResult != value))
			{
				this.OnFinalResultChanging(value);
				this.SendPropertyChanging();
				this._FinalResult = value;
				this.SendPropertyChanged("FinalResult");
				this.OnFinalResultChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> FinalDate
	{
		get
		{
			return this._FinalDate;
		}
		set
		{
			if ((this._FinalDate != value))
			{
				this.OnFinalDateChanging(value);
				this.SendPropertyChanging();
				this._FinalDate = value;
				this.SendPropertyChanged("FinalDate");
				this.OnFinalDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalSuggestion", DbType="NVarChar(20)")]
	public string FinalSuggestion
	{
		get
		{
			return this._FinalSuggestion;
		}
		set
		{
			if ((this._FinalSuggestion != value))
			{
				this.OnFinalSuggestionChanging(value);
				this.SendPropertyChanging();
				this._FinalSuggestion = value;
				this.SendPropertyChanged("FinalSuggestion");
				this.OnFinalSuggestionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_EngRedo", Storage="_StudentDetail", ThisKey="StuID", OtherKey="StudentID", IsForeignKey=true)]
	public StudentDetail StudentDetail
	{
		get
		{
			return this._StudentDetail.Entity;
		}
		set
		{
			StudentDetail previousValue = this._StudentDetail.Entity;
			if (((previousValue != value) 
						|| (this._StudentDetail.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StudentDetail.Entity = null;
					previousValue.EngRedos.Remove(this);
				}
				this._StudentDetail.Entity = value;
				if ((value != null))
				{
					value.EngRedos.Add(this);
					this._StuID = value.StudentID;
				}
				else
				{
					this._StuID = default(System.Guid);
				}
				this.SendPropertyChanged("StudentDetail");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestRegister_EngRedo", Storage="_TestRegister", ThisKey="TestRegisterID", OtherKey="TestRegisterID", IsForeignKey=true)]
	public TestRegister TestRegister
	{
		get
		{
			return this._TestRegister.Entity;
		}
		set
		{
			TestRegister previousValue = this._TestRegister.Entity;
			if (((previousValue != value) 
						|| (this._TestRegister.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TestRegister.Entity = null;
					previousValue.EngRedos.Remove(this);
				}
				this._TestRegister.Entity = value;
				if ((value != null))
				{
					value.EngRedos.Add(this);
					this._TestRegisterID = value.TestRegisterID;
				}
				else
				{
					this._TestRegisterID = default(System.Guid);
				}
				this.SendPropertyChanged("TestRegister");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FiveWater")]
public partial class FiveWater : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<System.Guid> _DeptID;
	
	private string _WaterAccount;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDeptIDChanging(System.Nullable<System.Guid> value);
    partial void OnDeptIDChanged();
    partial void OnWaterAccountChanging(string value);
    partial void OnWaterAccountChanged();
    #endregion
	
	public FiveWater()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> DeptID
	{
		get
		{
			return this._DeptID;
		}
		set
		{
			if ((this._DeptID != value))
			{
				this.OnDeptIDChanging(value);
				this.SendPropertyChanging();
				this._DeptID = value;
				this.SendPropertyChanged("DeptID");
				this.OnDeptIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaterAccount", DbType="NVarChar(5)")]
	public string WaterAccount
	{
		get
		{
			return this._WaterAccount;
		}
		set
		{
			if ((this._WaterAccount != value))
			{
				this.OnWaterAccountChanging(value);
				this.SendPropertyChanging();
				this._WaterAccount = value;
				this.SendPropertyChanged("WaterAccount");
				this.OnWaterAccountChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FourWater")]
public partial class FourWater : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<System.Guid> _DeptID;
	
	private string _WaterAccount;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDeptIDChanging(System.Nullable<System.Guid> value);
    partial void OnDeptIDChanged();
    partial void OnWaterAccountChanging(string value);
    partial void OnWaterAccountChanged();
    #endregion
	
	public FourWater()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> DeptID
	{
		get
		{
			return this._DeptID;
		}
		set
		{
			if ((this._DeptID != value))
			{
				this.OnDeptIDChanging(value);
				this.SendPropertyChanging();
				this._DeptID = value;
				this.SendPropertyChanged("DeptID");
				this.OnDeptIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaterAccount", DbType="NVarChar(4)")]
	public string WaterAccount
	{
		get
		{
			return this._WaterAccount;
		}
		set
		{
			if ((this._WaterAccount != value))
			{
				this.OnWaterAccountChanging(value);
				this.SendPropertyChanging();
				this._WaterAccount = value;
				this.SendPropertyChanged("WaterAccount");
				this.OnWaterAccountChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GetLsh")]
public partial class GetLsh
{
	
	private int _ID;
	
	private System.Guid _DeptID;
	
	private int _lsh;
	
	public GetLsh()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this._ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid DeptID
	{
		get
		{
			return this._DeptID;
		}
		set
		{
			if ((this._DeptID != value))
			{
				this._DeptID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lsh", DbType="Int NOT NULL")]
	public int lsh
	{
		get
		{
			return this._lsh;
		}
		set
		{
			if ((this._lsh != value))
			{
				this._lsh = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Handle_Suggestion")]
public partial class Handle_Suggestion : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _HandleResult;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHandleResultChanging(string value);
    partial void OnHandleResultChanged();
    #endregion
	
	public Handle_Suggestion()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandleResult", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string HandleResult
	{
		get
		{
			return this._HandleResult;
		}
		set
		{
			if ((this._HandleResult != value))
			{
				this.OnHandleResultChanging(value);
				this.SendPropertyChanging();
				this._HandleResult = value;
				this.SendPropertyChanged("HandleResult");
				this.OnHandleResultChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.History")]
public partial class History : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _OperateID;
	
	private System.Guid _HistroyID;
	
	private string _ModifyType;
	
	private string _ModifyPre_Name;
	
	private string _ModifyPre_UniversityID;
	
	private string _ModifyPre_Gender;
	
	private string _ModifyPre_NationalityName;
	
	private string _ModifyPre_CardID;
	
	private string _ModifyPre_GradeName;
	
	private string _ModifyPre_ClassName;
	
	private string _ModifyPre_MajorName;
	
	private string _ModifyPre_DeptName;
	
	private string _ModifyPre_Image;
	
	private string _ModifyAft_Name;
	
	private string _ModifyAft_UniversityID;
	
	private string _ModifyAft_Gender;
	
	private string _ModifyAft_NationalityName;
	
	private string _ModifyAft_CardID;
	
	private string _ModifyAft_GradeName;
	
	private string _ModifyAft_ClassName;
	
	private string _ModifyAft_MajorName;
	
	private string _ModifyAft_DeptName;
	
	private System.DateTime _OperateTime;
	
	private string _ModifyAft_Image;
	
	private EntityRef<ModifyApplication> _ModifyApplication;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOperateIDChanging(System.Guid value);
    partial void OnOperateIDChanged();
    partial void OnHistroyIDChanging(System.Guid value);
    partial void OnHistroyIDChanged();
    partial void OnModifyTypeChanging(string value);
    partial void OnModifyTypeChanged();
    partial void OnModifyPre_NameChanging(string value);
    partial void OnModifyPre_NameChanged();
    partial void OnModifyPre_UniversityIDChanging(string value);
    partial void OnModifyPre_UniversityIDChanged();
    partial void OnModifyPre_GenderChanging(string value);
    partial void OnModifyPre_GenderChanged();
    partial void OnModifyPre_NationalityNameChanging(string value);
    partial void OnModifyPre_NationalityNameChanged();
    partial void OnModifyPre_CardIDChanging(string value);
    partial void OnModifyPre_CardIDChanged();
    partial void OnModifyPre_GradeNameChanging(string value);
    partial void OnModifyPre_GradeNameChanged();
    partial void OnModifyPre_ClassNameChanging(string value);
    partial void OnModifyPre_ClassNameChanged();
    partial void OnModifyPre_MajorNameChanging(string value);
    partial void OnModifyPre_MajorNameChanged();
    partial void OnModifyPre_DeptNameChanging(string value);
    partial void OnModifyPre_DeptNameChanged();
    partial void OnModifyPre_ImageChanging(string value);
    partial void OnModifyPre_ImageChanged();
    partial void OnModifyAft_NameChanging(string value);
    partial void OnModifyAft_NameChanged();
    partial void OnModifyAft_UniversityIDChanging(string value);
    partial void OnModifyAft_UniversityIDChanged();
    partial void OnModifyAft_GenderChanging(string value);
    partial void OnModifyAft_GenderChanged();
    partial void OnModifyAft_NationalityNameChanging(string value);
    partial void OnModifyAft_NationalityNameChanged();
    partial void OnModifyAft_CardIDChanging(string value);
    partial void OnModifyAft_CardIDChanged();
    partial void OnModifyAft_GradeNameChanging(string value);
    partial void OnModifyAft_GradeNameChanged();
    partial void OnModifyAft_ClassNameChanging(string value);
    partial void OnModifyAft_ClassNameChanged();
    partial void OnModifyAft_MajorNameChanging(string value);
    partial void OnModifyAft_MajorNameChanged();
    partial void OnModifyAft_DeptNameChanging(string value);
    partial void OnModifyAft_DeptNameChanged();
    partial void OnOperateTimeChanging(System.DateTime value);
    partial void OnOperateTimeChanged();
    partial void OnModifyAft_ImageChanging(string value);
    partial void OnModifyAft_ImageChanged();
    #endregion
	
	public History()
	{
		this._ModifyApplication = default(EntityRef<ModifyApplication>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperateID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid OperateID
	{
		get
		{
			return this._OperateID;
		}
		set
		{
			if ((this._OperateID != value))
			{
				if (this._ModifyApplication.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnOperateIDChanging(value);
				this.SendPropertyChanging();
				this._OperateID = value;
				this.SendPropertyChanged("OperateID");
				this.OnOperateIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistroyID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid HistroyID
	{
		get
		{
			return this._HistroyID;
		}
		set
		{
			if ((this._HistroyID != value))
			{
				this.OnHistroyIDChanging(value);
				this.SendPropertyChanging();
				this._HistroyID = value;
				this.SendPropertyChanged("HistroyID");
				this.OnHistroyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyType", DbType="NVarChar(50)")]
	public string ModifyType
	{
		get
		{
			return this._ModifyType;
		}
		set
		{
			if ((this._ModifyType != value))
			{
				this.OnModifyTypeChanging(value);
				this.SendPropertyChanging();
				this._ModifyType = value;
				this.SendPropertyChanged("ModifyType");
				this.OnModifyTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyPre_Name", DbType="NVarChar(50)")]
	public string ModifyPre_Name
	{
		get
		{
			return this._ModifyPre_Name;
		}
		set
		{
			if ((this._ModifyPre_Name != value))
			{
				this.OnModifyPre_NameChanging(value);
				this.SendPropertyChanging();
				this._ModifyPre_Name = value;
				this.SendPropertyChanged("ModifyPre_Name");
				this.OnModifyPre_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyPre_UniversityID", DbType="NVarChar(20)")]
	public string ModifyPre_UniversityID
	{
		get
		{
			return this._ModifyPre_UniversityID;
		}
		set
		{
			if ((this._ModifyPre_UniversityID != value))
			{
				this.OnModifyPre_UniversityIDChanging(value);
				this.SendPropertyChanging();
				this._ModifyPre_UniversityID = value;
				this.SendPropertyChanged("ModifyPre_UniversityID");
				this.OnModifyPre_UniversityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyPre_Gender", DbType="NVarChar(2)")]
	public string ModifyPre_Gender
	{
		get
		{
			return this._ModifyPre_Gender;
		}
		set
		{
			if ((this._ModifyPre_Gender != value))
			{
				this.OnModifyPre_GenderChanging(value);
				this.SendPropertyChanging();
				this._ModifyPre_Gender = value;
				this.SendPropertyChanged("ModifyPre_Gender");
				this.OnModifyPre_GenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyPre_NationalityName", DbType="NVarChar(10)")]
	public string ModifyPre_NationalityName
	{
		get
		{
			return this._ModifyPre_NationalityName;
		}
		set
		{
			if ((this._ModifyPre_NationalityName != value))
			{
				this.OnModifyPre_NationalityNameChanging(value);
				this.SendPropertyChanging();
				this._ModifyPre_NationalityName = value;
				this.SendPropertyChanged("ModifyPre_NationalityName");
				this.OnModifyPre_NationalityNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyPre_CardID", DbType="NVarChar(20)")]
	public string ModifyPre_CardID
	{
		get
		{
			return this._ModifyPre_CardID;
		}
		set
		{
			if ((this._ModifyPre_CardID != value))
			{
				this.OnModifyPre_CardIDChanging(value);
				this.SendPropertyChanging();
				this._ModifyPre_CardID = value;
				this.SendPropertyChanged("ModifyPre_CardID");
				this.OnModifyPre_CardIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyPre_GradeName", DbType="NVarChar(10)")]
	public string ModifyPre_GradeName
	{
		get
		{
			return this._ModifyPre_GradeName;
		}
		set
		{
			if ((this._ModifyPre_GradeName != value))
			{
				this.OnModifyPre_GradeNameChanging(value);
				this.SendPropertyChanging();
				this._ModifyPre_GradeName = value;
				this.SendPropertyChanged("ModifyPre_GradeName");
				this.OnModifyPre_GradeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyPre_ClassName", DbType="NVarChar(50)")]
	public string ModifyPre_ClassName
	{
		get
		{
			return this._ModifyPre_ClassName;
		}
		set
		{
			if ((this._ModifyPre_ClassName != value))
			{
				this.OnModifyPre_ClassNameChanging(value);
				this.SendPropertyChanging();
				this._ModifyPre_ClassName = value;
				this.SendPropertyChanged("ModifyPre_ClassName");
				this.OnModifyPre_ClassNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyPre_MajorName", DbType="NVarChar(50)")]
	public string ModifyPre_MajorName
	{
		get
		{
			return this._ModifyPre_MajorName;
		}
		set
		{
			if ((this._ModifyPre_MajorName != value))
			{
				this.OnModifyPre_MajorNameChanging(value);
				this.SendPropertyChanging();
				this._ModifyPre_MajorName = value;
				this.SendPropertyChanged("ModifyPre_MajorName");
				this.OnModifyPre_MajorNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyPre_DeptName", DbType="NVarChar(50)")]
	public string ModifyPre_DeptName
	{
		get
		{
			return this._ModifyPre_DeptName;
		}
		set
		{
			if ((this._ModifyPre_DeptName != value))
			{
				this.OnModifyPre_DeptNameChanging(value);
				this.SendPropertyChanging();
				this._ModifyPre_DeptName = value;
				this.SendPropertyChanged("ModifyPre_DeptName");
				this.OnModifyPre_DeptNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyPre_Image", DbType="NVarChar(200)")]
	public string ModifyPre_Image
	{
		get
		{
			return this._ModifyPre_Image;
		}
		set
		{
			if ((this._ModifyPre_Image != value))
			{
				this.OnModifyPre_ImageChanging(value);
				this.SendPropertyChanging();
				this._ModifyPre_Image = value;
				this.SendPropertyChanged("ModifyPre_Image");
				this.OnModifyPre_ImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyAft_Name", DbType="NVarChar(50)")]
	public string ModifyAft_Name
	{
		get
		{
			return this._ModifyAft_Name;
		}
		set
		{
			if ((this._ModifyAft_Name != value))
			{
				this.OnModifyAft_NameChanging(value);
				this.SendPropertyChanging();
				this._ModifyAft_Name = value;
				this.SendPropertyChanged("ModifyAft_Name");
				this.OnModifyAft_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyAft_UniversityID", DbType="NVarChar(20)")]
	public string ModifyAft_UniversityID
	{
		get
		{
			return this._ModifyAft_UniversityID;
		}
		set
		{
			if ((this._ModifyAft_UniversityID != value))
			{
				this.OnModifyAft_UniversityIDChanging(value);
				this.SendPropertyChanging();
				this._ModifyAft_UniversityID = value;
				this.SendPropertyChanged("ModifyAft_UniversityID");
				this.OnModifyAft_UniversityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyAft_Gender", DbType="NVarChar(2)")]
	public string ModifyAft_Gender
	{
		get
		{
			return this._ModifyAft_Gender;
		}
		set
		{
			if ((this._ModifyAft_Gender != value))
			{
				this.OnModifyAft_GenderChanging(value);
				this.SendPropertyChanging();
				this._ModifyAft_Gender = value;
				this.SendPropertyChanged("ModifyAft_Gender");
				this.OnModifyAft_GenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyAft_NationalityName", DbType="NVarChar(10)")]
	public string ModifyAft_NationalityName
	{
		get
		{
			return this._ModifyAft_NationalityName;
		}
		set
		{
			if ((this._ModifyAft_NationalityName != value))
			{
				this.OnModifyAft_NationalityNameChanging(value);
				this.SendPropertyChanging();
				this._ModifyAft_NationalityName = value;
				this.SendPropertyChanged("ModifyAft_NationalityName");
				this.OnModifyAft_NationalityNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyAft_CardID", DbType="NVarChar(20)")]
	public string ModifyAft_CardID
	{
		get
		{
			return this._ModifyAft_CardID;
		}
		set
		{
			if ((this._ModifyAft_CardID != value))
			{
				this.OnModifyAft_CardIDChanging(value);
				this.SendPropertyChanging();
				this._ModifyAft_CardID = value;
				this.SendPropertyChanged("ModifyAft_CardID");
				this.OnModifyAft_CardIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyAft_GradeName", DbType="NVarChar(10)")]
	public string ModifyAft_GradeName
	{
		get
		{
			return this._ModifyAft_GradeName;
		}
		set
		{
			if ((this._ModifyAft_GradeName != value))
			{
				this.OnModifyAft_GradeNameChanging(value);
				this.SendPropertyChanging();
				this._ModifyAft_GradeName = value;
				this.SendPropertyChanged("ModifyAft_GradeName");
				this.OnModifyAft_GradeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyAft_ClassName", DbType="NVarChar(50)")]
	public string ModifyAft_ClassName
	{
		get
		{
			return this._ModifyAft_ClassName;
		}
		set
		{
			if ((this._ModifyAft_ClassName != value))
			{
				this.OnModifyAft_ClassNameChanging(value);
				this.SendPropertyChanging();
				this._ModifyAft_ClassName = value;
				this.SendPropertyChanged("ModifyAft_ClassName");
				this.OnModifyAft_ClassNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyAft_MajorName", DbType="NVarChar(50)")]
	public string ModifyAft_MajorName
	{
		get
		{
			return this._ModifyAft_MajorName;
		}
		set
		{
			if ((this._ModifyAft_MajorName != value))
			{
				this.OnModifyAft_MajorNameChanging(value);
				this.SendPropertyChanging();
				this._ModifyAft_MajorName = value;
				this.SendPropertyChanged("ModifyAft_MajorName");
				this.OnModifyAft_MajorNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyAft_DeptName", DbType="NVarChar(50)")]
	public string ModifyAft_DeptName
	{
		get
		{
			return this._ModifyAft_DeptName;
		}
		set
		{
			if ((this._ModifyAft_DeptName != value))
			{
				this.OnModifyAft_DeptNameChanging(value);
				this.SendPropertyChanging();
				this._ModifyAft_DeptName = value;
				this.SendPropertyChanged("ModifyAft_DeptName");
				this.OnModifyAft_DeptNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperateTime", AutoSync=AutoSync.Always, DbType="DateTime NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
	public System.DateTime OperateTime
	{
		get
		{
			return this._OperateTime;
		}
		set
		{
			if ((this._OperateTime != value))
			{
				this.OnOperateTimeChanging(value);
				this.SendPropertyChanging();
				this._OperateTime = value;
				this.SendPropertyChanged("OperateTime");
				this.OnOperateTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyAft_Image", DbType="NVarChar(200)")]
	public string ModifyAft_Image
	{
		get
		{
			return this._ModifyAft_Image;
		}
		set
		{
			if ((this._ModifyAft_Image != value))
			{
				this.OnModifyAft_ImageChanging(value);
				this.SendPropertyChanging();
				this._ModifyAft_Image = value;
				this.SendPropertyChanged("ModifyAft_Image");
				this.OnModifyAft_ImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModifyApplication_History", Storage="_ModifyApplication", ThisKey="OperateID", OtherKey="OperateID", IsForeignKey=true)]
	public ModifyApplication ModifyApplication
	{
		get
		{
			return this._ModifyApplication.Entity;
		}
		set
		{
			ModifyApplication previousValue = this._ModifyApplication.Entity;
			if (((previousValue != value) 
						|| (this._ModifyApplication.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ModifyApplication.Entity = null;
					previousValue.Histories.Remove(this);
				}
				this._ModifyApplication.Entity = value;
				if ((value != null))
				{
					value.Histories.Add(this);
					this._OperateID = value.OperateID;
				}
				else
				{
					this._OperateID = default(System.Guid);
				}
				this.SendPropertyChanged("ModifyApplication");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.llv")]
public partial class llv : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _llv_ID;
	
	private string _llv_Number;
	
	private string _llv_Name;
	
	private string _llv_SimpleName;
	
	private System.DateTime _llv_Date;
	
	private System.DateTime _llv_StartTime;
	
	private System.DateTime _llv_EndTime;
	
	private char _llv_TimeSpan;
	
	private decimal _llv_cost;
	
	private string _llv_Note;
	
	private bool _IsAllowRegister;
	
	private bool _IsNeedAudit;
	
	private EntitySet<StuReg> _StuRegs;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onllv_IDChanging(System.Guid value);
    partial void Onllv_IDChanged();
    partial void Onllv_NumberChanging(string value);
    partial void Onllv_NumberChanged();
    partial void Onllv_NameChanging(string value);
    partial void Onllv_NameChanged();
    partial void Onllv_SimpleNameChanging(string value);
    partial void Onllv_SimpleNameChanged();
    partial void Onllv_DateChanging(System.DateTime value);
    partial void Onllv_DateChanged();
    partial void Onllv_StartTimeChanging(System.DateTime value);
    partial void Onllv_StartTimeChanged();
    partial void Onllv_EndTimeChanging(System.DateTime value);
    partial void Onllv_EndTimeChanged();
    partial void Onllv_TimeSpanChanging(char value);
    partial void Onllv_TimeSpanChanged();
    partial void Onllv_costChanging(decimal value);
    partial void Onllv_costChanged();
    partial void Onllv_NoteChanging(string value);
    partial void Onllv_NoteChanged();
    partial void OnIsAllowRegisterChanging(bool value);
    partial void OnIsAllowRegisterChanged();
    partial void OnIsNeedAuditChanging(bool value);
    partial void OnIsNeedAuditChanged();
    #endregion
	
	public llv()
	{
		this._StuRegs = new EntitySet<StuReg>(new Action<StuReg>(this.attach_StuRegs), new Action<StuReg>(this.detach_StuRegs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_llv_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid llv_ID
	{
		get
		{
			return this._llv_ID;
		}
		set
		{
			if ((this._llv_ID != value))
			{
				this.Onllv_IDChanging(value);
				this.SendPropertyChanging();
				this._llv_ID = value;
				this.SendPropertyChanged("llv_ID");
				this.Onllv_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_llv_Number", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
	public string llv_Number
	{
		get
		{
			return this._llv_Number;
		}
		set
		{
			if ((this._llv_Number != value))
			{
				this.Onllv_NumberChanging(value);
				this.SendPropertyChanging();
				this._llv_Number = value;
				this.SendPropertyChanged("llv_Number");
				this.Onllv_NumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_llv_Name", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
	public string llv_Name
	{
		get
		{
			return this._llv_Name;
		}
		set
		{
			if ((this._llv_Name != value))
			{
				this.Onllv_NameChanging(value);
				this.SendPropertyChanging();
				this._llv_Name = value;
				this.SendPropertyChanged("llv_Name");
				this.Onllv_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_llv_SimpleName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string llv_SimpleName
	{
		get
		{
			return this._llv_SimpleName;
		}
		set
		{
			if ((this._llv_SimpleName != value))
			{
				this.Onllv_SimpleNameChanging(value);
				this.SendPropertyChanging();
				this._llv_SimpleName = value;
				this.SendPropertyChanged("llv_SimpleName");
				this.Onllv_SimpleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_llv_Date", DbType="Date NOT NULL")]
	public System.DateTime llv_Date
	{
		get
		{
			return this._llv_Date;
		}
		set
		{
			if ((this._llv_Date != value))
			{
				this.Onllv_DateChanging(value);
				this.SendPropertyChanging();
				this._llv_Date = value;
				this.SendPropertyChanged("llv_Date");
				this.Onllv_DateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_llv_StartTime", DbType="DateTime NOT NULL")]
	public System.DateTime llv_StartTime
	{
		get
		{
			return this._llv_StartTime;
		}
		set
		{
			if ((this._llv_StartTime != value))
			{
				this.Onllv_StartTimeChanging(value);
				this.SendPropertyChanging();
				this._llv_StartTime = value;
				this.SendPropertyChanged("llv_StartTime");
				this.Onllv_StartTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_llv_EndTime", DbType="DateTime NOT NULL")]
	public System.DateTime llv_EndTime
	{
		get
		{
			return this._llv_EndTime;
		}
		set
		{
			if ((this._llv_EndTime != value))
			{
				this.Onllv_EndTimeChanging(value);
				this.SendPropertyChanging();
				this._llv_EndTime = value;
				this.SendPropertyChanged("llv_EndTime");
				this.Onllv_EndTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_llv_TimeSpan", DbType="Char(1) NOT NULL")]
	public char llv_TimeSpan
	{
		get
		{
			return this._llv_TimeSpan;
		}
		set
		{
			if ((this._llv_TimeSpan != value))
			{
				this.Onllv_TimeSpanChanging(value);
				this.SendPropertyChanging();
				this._llv_TimeSpan = value;
				this.SendPropertyChanged("llv_TimeSpan");
				this.Onllv_TimeSpanChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_llv_cost", DbType="Decimal(18,4) NOT NULL")]
	public decimal llv_cost
	{
		get
		{
			return this._llv_cost;
		}
		set
		{
			if ((this._llv_cost != value))
			{
				this.Onllv_costChanging(value);
				this.SendPropertyChanging();
				this._llv_cost = value;
				this.SendPropertyChanged("llv_cost");
				this.Onllv_costChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_llv_Note", DbType="NVarChar(128)")]
	public string llv_Note
	{
		get
		{
			return this._llv_Note;
		}
		set
		{
			if ((this._llv_Note != value))
			{
				this.Onllv_NoteChanging(value);
				this.SendPropertyChanging();
				this._llv_Note = value;
				this.SendPropertyChanged("llv_Note");
				this.Onllv_NoteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllowRegister", DbType="Bit NOT NULL")]
	public bool IsAllowRegister
	{
		get
		{
			return this._IsAllowRegister;
		}
		set
		{
			if ((this._IsAllowRegister != value))
			{
				this.OnIsAllowRegisterChanging(value);
				this.SendPropertyChanging();
				this._IsAllowRegister = value;
				this.SendPropertyChanged("IsAllowRegister");
				this.OnIsAllowRegisterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNeedAudit", DbType="Bit NOT NULL")]
	public bool IsNeedAudit
	{
		get
		{
			return this._IsNeedAudit;
		}
		set
		{
			if ((this._IsNeedAudit != value))
			{
				this.OnIsNeedAuditChanging(value);
				this.SendPropertyChanging();
				this._IsNeedAudit = value;
				this.SendPropertyChanged("IsNeedAudit");
				this.OnIsNeedAuditChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="llv_StuReg", Storage="_StuRegs", ThisKey="llv_ID", OtherKey="SubID")]
	public EntitySet<StuReg> StuRegs
	{
		get
		{
			return this._StuRegs;
		}
		set
		{
			this._StuRegs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_StuRegs(StuReg entity)
	{
		this.SendPropertyChanging();
		entity.llv = this;
	}
	
	private void detach_StuRegs(StuReg entity)
	{
		this.SendPropertyChanging();
		entity.llv = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[log]")]
public partial class log
{
	
	private int _ID;
	
	private string _OperateUser;
	
	private string _OperateType;
	
	private System.Nullable<System.DateTime> _OperateTime;
	
	private string _UserIp;
	
	private string _ObjectUser;
	
	public log()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this._ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperateUser", DbType="NVarChar(50)")]
	public string OperateUser
	{
		get
		{
			return this._OperateUser;
		}
		set
		{
			if ((this._OperateUser != value))
			{
				this._OperateUser = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperateType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string OperateType
	{
		get
		{
			return this._OperateType;
		}
		set
		{
			if ((this._OperateType != value))
			{
				this._OperateType = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperateTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> OperateTime
	{
		get
		{
			return this._OperateTime;
		}
		set
		{
			if ((this._OperateTime != value))
			{
				this._OperateTime = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIp", DbType="NVarChar(15)")]
	public string UserIp
	{
		get
		{
			return this._UserIp;
		}
		set
		{
			if ((this._UserIp != value))
			{
				this._UserIp = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectUser", DbType="NVarChar(50)")]
	public string ObjectUser
	{
		get
		{
			return this._ObjectUser;
		}
		set
		{
			if ((this._ObjectUser != value))
			{
				this._ObjectUser = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lszh")]
public partial class Lszh : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Guid _DeptID;
	
	private int _StartNum;
	
	private int _EndNum;
	
	private string _CurrentState;
	
	private int _EngStartNum;
	
	private int _EngEndNum;
	
	private string _EngCurState;
	
	private int _MHKStartNum;
	
	private int _MHKEndNum;
	
	private string _MHKCurState;
	
	private EntityRef<Dept> _Dept;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDeptIDChanging(System.Guid value);
    partial void OnDeptIDChanged();
    partial void OnStartNumChanging(int value);
    partial void OnStartNumChanged();
    partial void OnEndNumChanging(int value);
    partial void OnEndNumChanged();
    partial void OnCurrentStateChanging(string value);
    partial void OnCurrentStateChanged();
    partial void OnEngStartNumChanging(int value);
    partial void OnEngStartNumChanged();
    partial void OnEngEndNumChanging(int value);
    partial void OnEngEndNumChanged();
    partial void OnEngCurStateChanging(string value);
    partial void OnEngCurStateChanged();
    partial void OnMHKStartNumChanging(int value);
    partial void OnMHKStartNumChanged();
    partial void OnMHKEndNumChanging(int value);
    partial void OnMHKEndNumChanged();
    partial void OnMHKCurStateChanging(string value);
    partial void OnMHKCurStateChanged();
    #endregion
	
	public Lszh()
	{
		this._Dept = default(EntityRef<Dept>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid DeptID
	{
		get
		{
			return this._DeptID;
		}
		set
		{
			if ((this._DeptID != value))
			{
				if (this._Dept.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDeptIDChanging(value);
				this.SendPropertyChanging();
				this._DeptID = value;
				this.SendPropertyChanged("DeptID");
				this.OnDeptIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartNum", DbType="Int NOT NULL")]
	public int StartNum
	{
		get
		{
			return this._StartNum;
		}
		set
		{
			if ((this._StartNum != value))
			{
				this.OnStartNumChanging(value);
				this.SendPropertyChanging();
				this._StartNum = value;
				this.SendPropertyChanged("StartNum");
				this.OnStartNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndNum", DbType="Int NOT NULL")]
	public int EndNum
	{
		get
		{
			return this._EndNum;
		}
		set
		{
			if ((this._EndNum != value))
			{
				this.OnEndNumChanging(value);
				this.SendPropertyChanging();
				this._EndNum = value;
				this.SendPropertyChanged("EndNum");
				this.OnEndNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentState", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
	public string CurrentState
	{
		get
		{
			return this._CurrentState;
		}
		set
		{
			if ((this._CurrentState != value))
			{
				this.OnCurrentStateChanging(value);
				this.SendPropertyChanging();
				this._CurrentState = value;
				this.SendPropertyChanged("CurrentState");
				this.OnCurrentStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngStartNum", DbType="Int NOT NULL")]
	public int EngStartNum
	{
		get
		{
			return this._EngStartNum;
		}
		set
		{
			if ((this._EngStartNum != value))
			{
				this.OnEngStartNumChanging(value);
				this.SendPropertyChanging();
				this._EngStartNum = value;
				this.SendPropertyChanged("EngStartNum");
				this.OnEngStartNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngEndNum", DbType="Int NOT NULL")]
	public int EngEndNum
	{
		get
		{
			return this._EngEndNum;
		}
		set
		{
			if ((this._EngEndNum != value))
			{
				this.OnEngEndNumChanging(value);
				this.SendPropertyChanging();
				this._EngEndNum = value;
				this.SendPropertyChanged("EngEndNum");
				this.OnEngEndNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngCurState", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
	public string EngCurState
	{
		get
		{
			return this._EngCurState;
		}
		set
		{
			if ((this._EngCurState != value))
			{
				this.OnEngCurStateChanging(value);
				this.SendPropertyChanging();
				this._EngCurState = value;
				this.SendPropertyChanged("EngCurState");
				this.OnEngCurStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHKStartNum", DbType="Int NOT NULL")]
	public int MHKStartNum
	{
		get
		{
			return this._MHKStartNum;
		}
		set
		{
			if ((this._MHKStartNum != value))
			{
				this.OnMHKStartNumChanging(value);
				this.SendPropertyChanging();
				this._MHKStartNum = value;
				this.SendPropertyChanged("MHKStartNum");
				this.OnMHKStartNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHKEndNum", DbType="Int NOT NULL")]
	public int MHKEndNum
	{
		get
		{
			return this._MHKEndNum;
		}
		set
		{
			if ((this._MHKEndNum != value))
			{
				this.OnMHKEndNumChanging(value);
				this.SendPropertyChanging();
				this._MHKEndNum = value;
				this.SendPropertyChanged("MHKEndNum");
				this.OnMHKEndNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHKCurState", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
	public string MHKCurState
	{
		get
		{
			return this._MHKCurState;
		}
		set
		{
			if ((this._MHKCurState != value))
			{
				this.OnMHKCurStateChanging(value);
				this.SendPropertyChanging();
				this._MHKCurState = value;
				this.SendPropertyChanged("MHKCurState");
				this.OnMHKCurStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dept_Lszh", Storage="_Dept", ThisKey="DeptID", OtherKey="DeptID", IsForeignKey=true)]
	public Dept Dept
	{
		get
		{
			return this._Dept.Entity;
		}
		set
		{
			Dept previousValue = this._Dept.Entity;
			if (((previousValue != value) 
						|| (this._Dept.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Dept.Entity = null;
					previousValue.Lszhs.Remove(this);
				}
				this._Dept.Entity = value;
				if ((value != null))
				{
					value.Lszhs.Add(this);
					this._DeptID = value.DeptID;
				}
				else
				{
					this._DeptID = default(System.Guid);
				}
				this.SendPropertyChanged("Dept");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Major")]
public partial class Major : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _MajorID;
	
	private System.Guid _DeptID;
	
	private string _MajorName;
	
	private string _Note;
	
	private string _MajorNumber;
	
	private EntitySet<Class> _Classes;
	
	private EntityRef<Dept> _Dept;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMajorIDChanging(System.Guid value);
    partial void OnMajorIDChanged();
    partial void OnDeptIDChanging(System.Guid value);
    partial void OnDeptIDChanged();
    partial void OnMajorNameChanging(string value);
    partial void OnMajorNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnMajorNumberChanging(string value);
    partial void OnMajorNumberChanged();
    #endregion
	
	public Major()
	{
		this._Classes = new EntitySet<Class>(new Action<Class>(this.attach_Classes), new Action<Class>(this.detach_Classes));
		this._Dept = default(EntityRef<Dept>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid MajorID
	{
		get
		{
			return this._MajorID;
		}
		set
		{
			if ((this._MajorID != value))
			{
				this.OnMajorIDChanging(value);
				this.SendPropertyChanging();
				this._MajorID = value;
				this.SendPropertyChanged("MajorID");
				this.OnMajorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid DeptID
	{
		get
		{
			return this._DeptID;
		}
		set
		{
			if ((this._DeptID != value))
			{
				if (this._Dept.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDeptIDChanging(value);
				this.SendPropertyChanging();
				this._DeptID = value;
				this.SendPropertyChanged("DeptID");
				this.OnDeptIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string MajorName
	{
		get
		{
			return this._MajorName;
		}
		set
		{
			if ((this._MajorName != value))
			{
				this.OnMajorNameChanging(value);
				this.SendPropertyChanging();
				this._MajorName = value;
				this.SendPropertyChanged("MajorName");
				this.OnMajorNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(200)")]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this.OnNoteChanging(value);
				this.SendPropertyChanging();
				this._Note = value;
				this.SendPropertyChanged("Note");
				this.OnNoteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorNumber", DbType="NVarChar(6)")]
	public string MajorNumber
	{
		get
		{
			return this._MajorNumber;
		}
		set
		{
			if ((this._MajorNumber != value))
			{
				this.OnMajorNumberChanging(value);
				this.SendPropertyChanging();
				this._MajorNumber = value;
				this.SendPropertyChanged("MajorNumber");
				this.OnMajorNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Major_Class", Storage="_Classes", ThisKey="MajorID", OtherKey="MajorID")]
	public EntitySet<Class> Classes
	{
		get
		{
			return this._Classes;
		}
		set
		{
			this._Classes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dept_Major", Storage="_Dept", ThisKey="DeptID", OtherKey="DeptID", IsForeignKey=true)]
	public Dept Dept
	{
		get
		{
			return this._Dept.Entity;
		}
		set
		{
			Dept previousValue = this._Dept.Entity;
			if (((previousValue != value) 
						|| (this._Dept.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Dept.Entity = null;
					previousValue.Majors.Remove(this);
				}
				this._Dept.Entity = value;
				if ((value != null))
				{
					value.Majors.Add(this);
					this._DeptID = value.DeptID;
				}
				else
				{
					this._DeptID = default(System.Guid);
				}
				this.SendPropertyChanged("Dept");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Classes(Class entity)
	{
		this.SendPropertyChanging();
		entity.Major = this;
	}
	
	private void detach_Classes(Class entity)
	{
		this.SendPropertyChanging();
		entity.Major = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MandarinGrade")]
public partial class MandarinGrade : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _TestRegisterID;
	
	private System.Guid _StudentID;
	
	private string _ExamRegNum;
	
	private double _TestGrade;
	
	private string _TestLevel;
	
	private string _CertificateNumber;
	
	private System.DateTime _TestDate;
	
	private EntityRef<StudentDetail> _StudentDetail;
	
	private EntityRef<TestRegister> _TestRegister;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestRegisterIDChanging(System.Guid value);
    partial void OnTestRegisterIDChanged();
    partial void OnStudentIDChanging(System.Guid value);
    partial void OnStudentIDChanged();
    partial void OnExamRegNumChanging(string value);
    partial void OnExamRegNumChanged();
    partial void OnTestGradeChanging(double value);
    partial void OnTestGradeChanged();
    partial void OnTestLevelChanging(string value);
    partial void OnTestLevelChanged();
    partial void OnCertificateNumberChanging(string value);
    partial void OnCertificateNumberChanged();
    partial void OnTestDateChanging(System.DateTime value);
    partial void OnTestDateChanged();
    #endregion
	
	public MandarinGrade()
	{
		this._StudentDetail = default(EntityRef<StudentDetail>);
		this._TestRegister = default(EntityRef<TestRegister>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				if (this._TestRegister.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTestRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._TestRegisterID = value;
				this.SendPropertyChanged("TestRegisterID");
				this.OnTestRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				if (this._StudentDetail.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStudentIDChanging(value);
				this.SendPropertyChanging();
				this._StudentID = value;
				this.SendPropertyChanged("StudentID");
				this.OnStudentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamRegNum", DbType="NVarChar(13) NOT NULL", CanBeNull=false)]
	public string ExamRegNum
	{
		get
		{
			return this._ExamRegNum;
		}
		set
		{
			if ((this._ExamRegNum != value))
			{
				this.OnExamRegNumChanging(value);
				this.SendPropertyChanging();
				this._ExamRegNum = value;
				this.SendPropertyChanged("ExamRegNum");
				this.OnExamRegNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestGrade", DbType="Float NOT NULL")]
	public double TestGrade
	{
		get
		{
			return this._TestGrade;
		}
		set
		{
			if ((this._TestGrade != value))
			{
				this.OnTestGradeChanging(value);
				this.SendPropertyChanging();
				this._TestGrade = value;
				this.SendPropertyChanged("TestGrade");
				this.OnTestGradeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestLevel", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string TestLevel
	{
		get
		{
			return this._TestLevel;
		}
		set
		{
			if ((this._TestLevel != value))
			{
				this.OnTestLevelChanging(value);
				this.SendPropertyChanging();
				this._TestLevel = value;
				this.SendPropertyChanged("TestLevel");
				this.OnTestLevelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNumber", DbType="NVarChar(13) NOT NULL", CanBeNull=false)]
	public string CertificateNumber
	{
		get
		{
			return this._CertificateNumber;
		}
		set
		{
			if ((this._CertificateNumber != value))
			{
				this.OnCertificateNumberChanging(value);
				this.SendPropertyChanging();
				this._CertificateNumber = value;
				this.SendPropertyChanged("CertificateNumber");
				this.OnCertificateNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestDate", DbType="Date NOT NULL", IsPrimaryKey=true)]
	public System.DateTime TestDate
	{
		get
		{
			return this._TestDate;
		}
		set
		{
			if ((this._TestDate != value))
			{
				this.OnTestDateChanging(value);
				this.SendPropertyChanging();
				this._TestDate = value;
				this.SendPropertyChanged("TestDate");
				this.OnTestDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_MandarinGrade", Storage="_StudentDetail", ThisKey="StudentID", OtherKey="StudentID", IsForeignKey=true)]
	public StudentDetail StudentDetail
	{
		get
		{
			return this._StudentDetail.Entity;
		}
		set
		{
			StudentDetail previousValue = this._StudentDetail.Entity;
			if (((previousValue != value) 
						|| (this._StudentDetail.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StudentDetail.Entity = null;
					previousValue.MandarinGrades.Remove(this);
				}
				this._StudentDetail.Entity = value;
				if ((value != null))
				{
					value.MandarinGrades.Add(this);
					this._StudentID = value.StudentID;
				}
				else
				{
					this._StudentID = default(System.Guid);
				}
				this.SendPropertyChanged("StudentDetail");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestRegister_MandarinGrade", Storage="_TestRegister", ThisKey="TestRegisterID", OtherKey="TestRegisterID", IsForeignKey=true)]
	public TestRegister TestRegister
	{
		get
		{
			return this._TestRegister.Entity;
		}
		set
		{
			TestRegister previousValue = this._TestRegister.Entity;
			if (((previousValue != value) 
						|| (this._TestRegister.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TestRegister.Entity = null;
					previousValue.MandarinGrades.Remove(this);
				}
				this._TestRegister.Entity = value;
				if ((value != null))
				{
					value.MandarinGrades.Add(this);
					this._TestRegisterID = value.TestRegisterID;
				}
				else
				{
					this._TestRegisterID = default(System.Guid);
				}
				this.SendPropertyChanged("TestRegister");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mandarinRegister")]
public partial class mandarinRegister : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _TestRegisterID;
	
	private System.Guid _StudentID;
	
	private System.Nullable<decimal> _RegCost;
	
	private System.Nullable<decimal> _TestCost;
	
	private System.Nullable<decimal> _TrainCost;
	
	private bool _IsRegistered;
	
	private System.Nullable<System.DateTime> _RegTime;
	
	private System.Nullable<bool> _IsPayed;
	
	private string _NCRedoState;
	
	private EntityRef<StudentDetail> _StudentDetail;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestRegisterIDChanging(System.Guid value);
    partial void OnTestRegisterIDChanged();
    partial void OnStudentIDChanging(System.Guid value);
    partial void OnStudentIDChanged();
    partial void OnRegCostChanging(System.Nullable<decimal> value);
    partial void OnRegCostChanged();
    partial void OnTestCostChanging(System.Nullable<decimal> value);
    partial void OnTestCostChanged();
    partial void OnTrainCostChanging(System.Nullable<decimal> value);
    partial void OnTrainCostChanged();
    partial void OnIsRegisteredChanging(bool value);
    partial void OnIsRegisteredChanged();
    partial void OnRegTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRegTimeChanged();
    partial void OnIsPayedChanging(System.Nullable<bool> value);
    partial void OnIsPayedChanged();
    partial void OnNCRedoStateChanging(string value);
    partial void OnNCRedoStateChanged();
    #endregion
	
	public mandarinRegister()
	{
		this._StudentDetail = default(EntityRef<StudentDetail>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				this.OnTestRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._TestRegisterID = value;
				this.SendPropertyChanged("TestRegisterID");
				this.OnTestRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				if (this._StudentDetail.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStudentIDChanging(value);
				this.SendPropertyChanging();
				this._StudentID = value;
				this.SendPropertyChanged("StudentID");
				this.OnStudentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegCost", DbType="Money")]
	public System.Nullable<decimal> RegCost
	{
		get
		{
			return this._RegCost;
		}
		set
		{
			if ((this._RegCost != value))
			{
				this.OnRegCostChanging(value);
				this.SendPropertyChanging();
				this._RegCost = value;
				this.SendPropertyChanged("RegCost");
				this.OnRegCostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCost", DbType="Money")]
	public System.Nullable<decimal> TestCost
	{
		get
		{
			return this._TestCost;
		}
		set
		{
			if ((this._TestCost != value))
			{
				this.OnTestCostChanging(value);
				this.SendPropertyChanging();
				this._TestCost = value;
				this.SendPropertyChanged("TestCost");
				this.OnTestCostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainCost", DbType="Money")]
	public System.Nullable<decimal> TrainCost
	{
		get
		{
			return this._TrainCost;
		}
		set
		{
			if ((this._TrainCost != value))
			{
				this.OnTrainCostChanging(value);
				this.SendPropertyChanging();
				this._TrainCost = value;
				this.SendPropertyChanged("TrainCost");
				this.OnTrainCostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRegistered", DbType="Bit NOT NULL")]
	public bool IsRegistered
	{
		get
		{
			return this._IsRegistered;
		}
		set
		{
			if ((this._IsRegistered != value))
			{
				this.OnIsRegisteredChanging(value);
				this.SendPropertyChanging();
				this._IsRegistered = value;
				this.SendPropertyChanged("IsRegistered");
				this.OnIsRegisteredChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> RegTime
	{
		get
		{
			return this._RegTime;
		}
		set
		{
			if ((this._RegTime != value))
			{
				this.OnRegTimeChanging(value);
				this.SendPropertyChanging();
				this._RegTime = value;
				this.SendPropertyChanged("RegTime");
				this.OnRegTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPayed", DbType="Bit")]
	public System.Nullable<bool> IsPayed
	{
		get
		{
			return this._IsPayed;
		}
		set
		{
			if ((this._IsPayed != value))
			{
				this.OnIsPayedChanging(value);
				this.SendPropertyChanging();
				this._IsPayed = value;
				this.SendPropertyChanged("IsPayed");
				this.OnIsPayedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NCRedoState", DbType="NVarChar(10)")]
	public string NCRedoState
	{
		get
		{
			return this._NCRedoState;
		}
		set
		{
			if ((this._NCRedoState != value))
			{
				this.OnNCRedoStateChanging(value);
				this.SendPropertyChanging();
				this._NCRedoState = value;
				this.SendPropertyChanged("NCRedoState");
				this.OnNCRedoStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_mandarinRegister", Storage="_StudentDetail", ThisKey="StudentID", OtherKey="StudentID", IsForeignKey=true)]
	public StudentDetail StudentDetail
	{
		get
		{
			return this._StudentDetail.Entity;
		}
		set
		{
			StudentDetail previousValue = this._StudentDetail.Entity;
			if (((previousValue != value) 
						|| (this._StudentDetail.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StudentDetail.Entity = null;
					previousValue.mandarinRegisters.Remove(this);
				}
				this._StudentDetail.Entity = value;
				if ((value != null))
				{
					value.mandarinRegisters.Add(this);
					this._StudentID = value.StudentID;
				}
				else
				{
					this._StudentID = default(System.Guid);
				}
				this.SendPropertyChanged("StudentDetail");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MHKConflict")]
public partial class MHKConflict : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _TestRegisterID;
	
	private System.Guid _MHKSujectID;
	
	private string _MHKSubjectName;
	
	private string _Note;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestRegisterIDChanging(System.Guid value);
    partial void OnTestRegisterIDChanged();
    partial void OnMHKSujectIDChanging(System.Guid value);
    partial void OnMHKSujectIDChanged();
    partial void OnMHKSubjectNameChanging(string value);
    partial void OnMHKSubjectNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
	
	public MHKConflict()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				this.OnTestRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._TestRegisterID = value;
				this.SendPropertyChanged("TestRegisterID");
				this.OnTestRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHKSujectID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid MHKSujectID
	{
		get
		{
			return this._MHKSujectID;
		}
		set
		{
			if ((this._MHKSujectID != value))
			{
				this.OnMHKSujectIDChanging(value);
				this.SendPropertyChanging();
				this._MHKSujectID = value;
				this.SendPropertyChanged("MHKSujectID");
				this.OnMHKSujectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHKSubjectName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string MHKSubjectName
	{
		get
		{
			return this._MHKSubjectName;
		}
		set
		{
			if ((this._MHKSubjectName != value))
			{
				this.OnMHKSubjectNameChanging(value);
				this.SendPropertyChanging();
				this._MHKSubjectName = value;
				this.SendPropertyChanged("MHKSubjectName");
				this.OnMHKSubjectNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this.OnNoteChanging(value);
				this.SendPropertyChanging();
				this._Note = value;
				this.SendPropertyChanged("Note");
				this.OnNoteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mhkFinalReg")]
public partial class mhkFinalReg : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _TestRegisterID;
	
	private System.Guid _StuID;
	
	private string _KD_DM;
	
	private string _KD_MC;
	
	private string _KS_XM;
	
	private string _sfzh;
	
	private string _mz;
	
	private string _zzmm;
	
	private string _tlks;
	
	private string _tlbs;
	
	private string _flks;
	
	private string _flbs;
	
	private string _zsdylsh;
	
	private string _whcd;
	
	private string _xy;
	
	private string _sxzy;
	
	private string _nj;
	
	private string _bj;
	
	private string _xh;
	
	private EntityRef<StudentDetail> _StudentDetail;
	
	private EntityRef<TestRegister> _TestRegister;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestRegisterIDChanging(System.Guid value);
    partial void OnTestRegisterIDChanged();
    partial void OnStuIDChanging(System.Guid value);
    partial void OnStuIDChanged();
    partial void OnKD_DMChanging(string value);
    partial void OnKD_DMChanged();
    partial void OnKD_MCChanging(string value);
    partial void OnKD_MCChanged();
    partial void OnKS_XMChanging(string value);
    partial void OnKS_XMChanged();
    partial void OnsfzhChanging(string value);
    partial void OnsfzhChanged();
    partial void OnmzChanging(string value);
    partial void OnmzChanged();
    partial void OnzzmmChanging(string value);
    partial void OnzzmmChanged();
    partial void OntlksChanging(string value);
    partial void OntlksChanged();
    partial void OntlbsChanging(string value);
    partial void OntlbsChanged();
    partial void OnflksChanging(string value);
    partial void OnflksChanged();
    partial void OnflbsChanging(string value);
    partial void OnflbsChanged();
    partial void OnzsdylshChanging(string value);
    partial void OnzsdylshChanged();
    partial void OnwhcdChanging(string value);
    partial void OnwhcdChanged();
    partial void OnxyChanging(string value);
    partial void OnxyChanged();
    partial void OnsxzyChanging(string value);
    partial void OnsxzyChanged();
    partial void OnnjChanging(string value);
    partial void OnnjChanged();
    partial void OnbjChanging(string value);
    partial void OnbjChanged();
    partial void OnxhChanging(string value);
    partial void OnxhChanged();
    #endregion
	
	public mhkFinalReg()
	{
		this._StudentDetail = default(EntityRef<StudentDetail>);
		this._TestRegister = default(EntityRef<TestRegister>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				if (this._TestRegister.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTestRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._TestRegisterID = value;
				this.SendPropertyChanged("TestRegisterID");
				this.OnTestRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid StuID
	{
		get
		{
			return this._StuID;
		}
		set
		{
			if ((this._StuID != value))
			{
				if (this._StudentDetail.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStuIDChanging(value);
				this.SendPropertyChanging();
				this._StuID = value;
				this.SendPropertyChanged("StuID");
				this.OnStuIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KD_DM", DbType="NVarChar(6)")]
	public string KD_DM
	{
		get
		{
			return this._KD_DM;
		}
		set
		{
			if ((this._KD_DM != value))
			{
				this.OnKD_DMChanging(value);
				this.SendPropertyChanging();
				this._KD_DM = value;
				this.SendPropertyChanged("KD_DM");
				this.OnKD_DMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KD_MC", DbType="NVarChar(50)")]
	public string KD_MC
	{
		get
		{
			return this._KD_MC;
		}
		set
		{
			if ((this._KD_MC != value))
			{
				this.OnKD_MCChanging(value);
				this.SendPropertyChanging();
				this._KD_MC = value;
				this.SendPropertyChanged("KD_MC");
				this.OnKD_MCChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KS_XM", DbType="NVarChar(20)")]
	public string KS_XM
	{
		get
		{
			return this._KS_XM;
		}
		set
		{
			if ((this._KS_XM != value))
			{
				this.OnKS_XMChanging(value);
				this.SendPropertyChanging();
				this._KS_XM = value;
				this.SendPropertyChanged("KS_XM");
				this.OnKS_XMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sfzh", DbType="NVarChar(18)")]
	public string sfzh
	{
		get
		{
			return this._sfzh;
		}
		set
		{
			if ((this._sfzh != value))
			{
				this.OnsfzhChanging(value);
				this.SendPropertyChanging();
				this._sfzh = value;
				this.SendPropertyChanged("sfzh");
				this.OnsfzhChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mz", DbType="NVarChar(15)")]
	public string mz
	{
		get
		{
			return this._mz;
		}
		set
		{
			if ((this._mz != value))
			{
				this.OnmzChanging(value);
				this.SendPropertyChanging();
				this._mz = value;
				this.SendPropertyChanged("mz");
				this.OnmzChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zzmm", DbType="NVarChar(5)")]
	public string zzmm
	{
		get
		{
			return this._zzmm;
		}
		set
		{
			if ((this._zzmm != value))
			{
				this.OnzzmmChanging(value);
				this.SendPropertyChanging();
				this._zzmm = value;
				this.SendPropertyChanged("zzmm");
				this.OnzzmmChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tlks", DbType="NVarChar(2)")]
	public string tlks
	{
		get
		{
			return this._tlks;
		}
		set
		{
			if ((this._tlks != value))
			{
				this.OntlksChanging(value);
				this.SendPropertyChanging();
				this._tlks = value;
				this.SendPropertyChanged("tlks");
				this.OntlksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tlbs", DbType="NVarChar(2)")]
	public string tlbs
	{
		get
		{
			return this._tlbs;
		}
		set
		{
			if ((this._tlbs != value))
			{
				this.OntlbsChanging(value);
				this.SendPropertyChanging();
				this._tlbs = value;
				this.SendPropertyChanged("tlbs");
				this.OntlbsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flks", DbType="NVarChar(2)")]
	public string flks
	{
		get
		{
			return this._flks;
		}
		set
		{
			if ((this._flks != value))
			{
				this.OnflksChanging(value);
				this.SendPropertyChanging();
				this._flks = value;
				this.SendPropertyChanged("flks");
				this.OnflksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flbs", DbType="NVarChar(2)")]
	public string flbs
	{
		get
		{
			return this._flbs;
		}
		set
		{
			if ((this._flbs != value))
			{
				this.OnflbsChanging(value);
				this.SendPropertyChanging();
				this._flbs = value;
				this.SendPropertyChanged("flbs");
				this.OnflbsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zsdylsh", DbType="NVarChar(10)")]
	public string zsdylsh
	{
		get
		{
			return this._zsdylsh;
		}
		set
		{
			if ((this._zsdylsh != value))
			{
				this.OnzsdylshChanging(value);
				this.SendPropertyChanging();
				this._zsdylsh = value;
				this.SendPropertyChanged("zsdylsh");
				this.OnzsdylshChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_whcd", DbType="NVarChar(5)")]
	public string whcd
	{
		get
		{
			return this._whcd;
		}
		set
		{
			if ((this._whcd != value))
			{
				this.OnwhcdChanging(value);
				this.SendPropertyChanging();
				this._whcd = value;
				this.SendPropertyChanged("whcd");
				this.OnwhcdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xy", DbType="NVarChar(50)")]
	public string xy
	{
		get
		{
			return this._xy;
		}
		set
		{
			if ((this._xy != value))
			{
				this.OnxyChanging(value);
				this.SendPropertyChanging();
				this._xy = value;
				this.SendPropertyChanged("xy");
				this.OnxyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sxzy", DbType="NVarChar(50)")]
	public string sxzy
	{
		get
		{
			return this._sxzy;
		}
		set
		{
			if ((this._sxzy != value))
			{
				this.OnsxzyChanging(value);
				this.SendPropertyChanging();
				this._sxzy = value;
				this.SendPropertyChanged("sxzy");
				this.OnsxzyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nj", DbType="NVarChar(1)")]
	public string nj
	{
		get
		{
			return this._nj;
		}
		set
		{
			if ((this._nj != value))
			{
				this.OnnjChanging(value);
				this.SendPropertyChanging();
				this._nj = value;
				this.SendPropertyChanged("nj");
				this.OnnjChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bj", DbType="NVarChar(50)")]
	public string bj
	{
		get
		{
			return this._bj;
		}
		set
		{
			if ((this._bj != value))
			{
				this.OnbjChanging(value);
				this.SendPropertyChanging();
				this._bj = value;
				this.SendPropertyChanged("bj");
				this.OnbjChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xh", DbType="NVarChar(10)")]
	public string xh
	{
		get
		{
			return this._xh;
		}
		set
		{
			if ((this._xh != value))
			{
				this.OnxhChanging(value);
				this.SendPropertyChanging();
				this._xh = value;
				this.SendPropertyChanged("xh");
				this.OnxhChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_mhkFinalReg", Storage="_StudentDetail", ThisKey="StuID", OtherKey="StudentID", IsForeignKey=true)]
	public StudentDetail StudentDetail
	{
		get
		{
			return this._StudentDetail.Entity;
		}
		set
		{
			StudentDetail previousValue = this._StudentDetail.Entity;
			if (((previousValue != value) 
						|| (this._StudentDetail.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StudentDetail.Entity = null;
					previousValue.mhkFinalRegs.Remove(this);
				}
				this._StudentDetail.Entity = value;
				if ((value != null))
				{
					value.mhkFinalRegs.Add(this);
					this._StuID = value.StudentID;
				}
				else
				{
					this._StuID = default(System.Guid);
				}
				this.SendPropertyChanged("StudentDetail");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestRegister_mhkFinalReg", Storage="_TestRegister", ThisKey="TestRegisterID", OtherKey="TestRegisterID", IsForeignKey=true)]
	public TestRegister TestRegister
	{
		get
		{
			return this._TestRegister.Entity;
		}
		set
		{
			TestRegister previousValue = this._TestRegister.Entity;
			if (((previousValue != value) 
						|| (this._TestRegister.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TestRegister.Entity = null;
					previousValue.mhkFinalRegs.Remove(this);
				}
				this._TestRegister.Entity = value;
				if ((value != null))
				{
					value.mhkFinalRegs.Add(this);
					this._TestRegisterID = value.TestRegisterID;
				}
				else
				{
					this._TestRegisterID = default(System.Guid);
				}
				this.SendPropertyChanged("TestRegister");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MHKGrade")]
public partial class MHKGrade : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _TestRegisterID;
	
	private System.Guid _StudentID;
	
	private string _SubjectName;
	
	private string _TestLevel;
	
	private string _ExamRegistrationNum;
	
	private string _CertificationNum;
	
	private string _TestGrade;
	
	private System.DateTime _TestDate;
	
	private EntityRef<StudentDetail> _StudentDetail;
	
	private EntityRef<TestRegister> _TestRegister;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestRegisterIDChanging(System.Guid value);
    partial void OnTestRegisterIDChanged();
    partial void OnStudentIDChanging(System.Guid value);
    partial void OnStudentIDChanged();
    partial void OnSubjectNameChanging(string value);
    partial void OnSubjectNameChanged();
    partial void OnTestLevelChanging(string value);
    partial void OnTestLevelChanged();
    partial void OnExamRegistrationNumChanging(string value);
    partial void OnExamRegistrationNumChanged();
    partial void OnCertificationNumChanging(string value);
    partial void OnCertificationNumChanged();
    partial void OnTestGradeChanging(string value);
    partial void OnTestGradeChanged();
    partial void OnTestDateChanging(System.DateTime value);
    partial void OnTestDateChanged();
    #endregion
	
	public MHKGrade()
	{
		this._StudentDetail = default(EntityRef<StudentDetail>);
		this._TestRegister = default(EntityRef<TestRegister>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				if (this._TestRegister.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTestRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._TestRegisterID = value;
				this.SendPropertyChanged("TestRegisterID");
				this.OnTestRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				if (this._StudentDetail.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStudentIDChanging(value);
				this.SendPropertyChanging();
				this._StudentID = value;
				this.SendPropertyChanged("StudentID");
				this.OnStudentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string SubjectName
	{
		get
		{
			return this._SubjectName;
		}
		set
		{
			if ((this._SubjectName != value))
			{
				this.OnSubjectNameChanging(value);
				this.SendPropertyChanging();
				this._SubjectName = value;
				this.SendPropertyChanged("SubjectName");
				this.OnSubjectNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestLevel", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
	public string TestLevel
	{
		get
		{
			return this._TestLevel;
		}
		set
		{
			if ((this._TestLevel != value))
			{
				this.OnTestLevelChanging(value);
				this.SendPropertyChanging();
				this._TestLevel = value;
				this.SendPropertyChanged("TestLevel");
				this.OnTestLevelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamRegistrationNum", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string ExamRegistrationNum
	{
		get
		{
			return this._ExamRegistrationNum;
		}
		set
		{
			if ((this._ExamRegistrationNum != value))
			{
				this.OnExamRegistrationNumChanging(value);
				this.SendPropertyChanging();
				this._ExamRegistrationNum = value;
				this.SendPropertyChanged("ExamRegistrationNum");
				this.OnExamRegistrationNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificationNum", DbType="NVarChar(9)")]
	public string CertificationNum
	{
		get
		{
			return this._CertificationNum;
		}
		set
		{
			if ((this._CertificationNum != value))
			{
				this.OnCertificationNumChanging(value);
				this.SendPropertyChanging();
				this._CertificationNum = value;
				this.SendPropertyChanged("CertificationNum");
				this.OnCertificationNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestGrade", DbType="NVarChar(3)")]
	public string TestGrade
	{
		get
		{
			return this._TestGrade;
		}
		set
		{
			if ((this._TestGrade != value))
			{
				this.OnTestGradeChanging(value);
				this.SendPropertyChanging();
				this._TestGrade = value;
				this.SendPropertyChanged("TestGrade");
				this.OnTestGradeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestDate", DbType="Date NOT NULL", IsPrimaryKey=true)]
	public System.DateTime TestDate
	{
		get
		{
			return this._TestDate;
		}
		set
		{
			if ((this._TestDate != value))
			{
				this.OnTestDateChanging(value);
				this.SendPropertyChanging();
				this._TestDate = value;
				this.SendPropertyChanged("TestDate");
				this.OnTestDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_MHKGrade", Storage="_StudentDetail", ThisKey="StudentID", OtherKey="StudentID", IsForeignKey=true)]
	public StudentDetail StudentDetail
	{
		get
		{
			return this._StudentDetail.Entity;
		}
		set
		{
			StudentDetail previousValue = this._StudentDetail.Entity;
			if (((previousValue != value) 
						|| (this._StudentDetail.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StudentDetail.Entity = null;
					previousValue.MHKGrades.Remove(this);
				}
				this._StudentDetail.Entity = value;
				if ((value != null))
				{
					value.MHKGrades.Add(this);
					this._StudentID = value.StudentID;
				}
				else
				{
					this._StudentID = default(System.Guid);
				}
				this.SendPropertyChanged("StudentDetail");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestRegister_MHKGrade", Storage="_TestRegister", ThisKey="TestRegisterID", OtherKey="TestRegisterID", IsForeignKey=true)]
	public TestRegister TestRegister
	{
		get
		{
			return this._TestRegister.Entity;
		}
		set
		{
			TestRegister previousValue = this._TestRegister.Entity;
			if (((previousValue != value) 
						|| (this._TestRegister.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TestRegister.Entity = null;
					previousValue.MHKGrades.Remove(this);
				}
				this._TestRegister.Entity = value;
				if ((value != null))
				{
					value.MHKGrades.Add(this);
					this._TestRegisterID = value.TestRegisterID;
				}
				else
				{
					this._TestRegisterID = default(System.Guid);
				}
				this.SendPropertyChanged("TestRegister");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MHKStuReg")]
public partial class MHKStuReg : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _TestRegisterID;
	
	private System.Guid _StuID;
	
	private System.Guid _SubjID;
	
	private string _KDNum;
	
	private string _Politicstatus;
	
	private string _printlsh;
	
	private string _CurGrade;
	
	private string _IsApproved;
	
	private bool _IsPayed;
	
	private string _MHKRedoState;
	
	private string _WaterAccount;
	
	private EntityRef<MHKSubject> _MHKSubject;
	
	private EntityRef<StudentDetail> _StudentDetail;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestRegisterIDChanging(System.Guid value);
    partial void OnTestRegisterIDChanged();
    partial void OnStuIDChanging(System.Guid value);
    partial void OnStuIDChanged();
    partial void OnSubjIDChanging(System.Guid value);
    partial void OnSubjIDChanged();
    partial void OnKDNumChanging(string value);
    partial void OnKDNumChanged();
    partial void OnPoliticstatusChanging(string value);
    partial void OnPoliticstatusChanged();
    partial void OnprintlshChanging(string value);
    partial void OnprintlshChanged();
    partial void OnCurGradeChanging(string value);
    partial void OnCurGradeChanged();
    partial void OnIsApprovedChanging(string value);
    partial void OnIsApprovedChanged();
    partial void OnIsPayedChanging(bool value);
    partial void OnIsPayedChanged();
    partial void OnMHKRedoStateChanging(string value);
    partial void OnMHKRedoStateChanged();
    partial void OnWaterAccountChanging(string value);
    partial void OnWaterAccountChanged();
    #endregion
	
	public MHKStuReg()
	{
		this._MHKSubject = default(EntityRef<MHKSubject>);
		this._StudentDetail = default(EntityRef<StudentDetail>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				this.OnTestRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._TestRegisterID = value;
				this.SendPropertyChanged("TestRegisterID");
				this.OnTestRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid StuID
	{
		get
		{
			return this._StuID;
		}
		set
		{
			if ((this._StuID != value))
			{
				if (this._StudentDetail.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStuIDChanging(value);
				this.SendPropertyChanging();
				this._StuID = value;
				this.SendPropertyChanged("StuID");
				this.OnStuIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid SubjID
	{
		get
		{
			return this._SubjID;
		}
		set
		{
			if ((this._SubjID != value))
			{
				if (this._MHKSubject.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSubjIDChanging(value);
				this.SendPropertyChanging();
				this._SubjID = value;
				this.SendPropertyChanged("SubjID");
				this.OnSubjIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KDNum", DbType="NVarChar(6)")]
	public string KDNum
	{
		get
		{
			return this._KDNum;
		}
		set
		{
			if ((this._KDNum != value))
			{
				this.OnKDNumChanging(value);
				this.SendPropertyChanging();
				this._KDNum = value;
				this.SendPropertyChanged("KDNum");
				this.OnKDNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Politicstatus", DbType="NVarChar(8)")]
	public string Politicstatus
	{
		get
		{
			return this._Politicstatus;
		}
		set
		{
			if ((this._Politicstatus != value))
			{
				this.OnPoliticstatusChanging(value);
				this.SendPropertyChanging();
				this._Politicstatus = value;
				this.SendPropertyChanged("Politicstatus");
				this.OnPoliticstatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_printlsh", DbType="NChar(10)")]
	public string printlsh
	{
		get
		{
			return this._printlsh;
		}
		set
		{
			if ((this._printlsh != value))
			{
				this.OnprintlshChanging(value);
				this.SendPropertyChanging();
				this._printlsh = value;
				this.SendPropertyChanged("printlsh");
				this.OnprintlshChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurGrade", DbType="NVarChar(1)")]
	public string CurGrade
	{
		get
		{
			return this._CurGrade;
		}
		set
		{
			if ((this._CurGrade != value))
			{
				this.OnCurGradeChanging(value);
				this.SendPropertyChanging();
				this._CurGrade = value;
				this.SendPropertyChanged("CurGrade");
				this.OnCurGradeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
	public string IsApproved
	{
		get
		{
			return this._IsApproved;
		}
		set
		{
			if ((this._IsApproved != value))
			{
				this.OnIsApprovedChanging(value);
				this.SendPropertyChanging();
				this._IsApproved = value;
				this.SendPropertyChanged("IsApproved");
				this.OnIsApprovedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPayed", DbType="Bit NOT NULL")]
	public bool IsPayed
	{
		get
		{
			return this._IsPayed;
		}
		set
		{
			if ((this._IsPayed != value))
			{
				this.OnIsPayedChanging(value);
				this.SendPropertyChanging();
				this._IsPayed = value;
				this.SendPropertyChanged("IsPayed");
				this.OnIsPayedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHKRedoState", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string MHKRedoState
	{
		get
		{
			return this._MHKRedoState;
		}
		set
		{
			if ((this._MHKRedoState != value))
			{
				this.OnMHKRedoStateChanging(value);
				this.SendPropertyChanging();
				this._MHKRedoState = value;
				this.SendPropertyChanged("MHKRedoState");
				this.OnMHKRedoStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaterAccount", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
	public string WaterAccount
	{
		get
		{
			return this._WaterAccount;
		}
		set
		{
			if ((this._WaterAccount != value))
			{
				this.OnWaterAccountChanging(value);
				this.SendPropertyChanging();
				this._WaterAccount = value;
				this.SendPropertyChanged("WaterAccount");
				this.OnWaterAccountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MHKSubject_MHKStuReg", Storage="_MHKSubject", ThisKey="SubjID", OtherKey="MHKSubID", IsForeignKey=true)]
	public MHKSubject MHKSubject
	{
		get
		{
			return this._MHKSubject.Entity;
		}
		set
		{
			MHKSubject previousValue = this._MHKSubject.Entity;
			if (((previousValue != value) 
						|| (this._MHKSubject.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._MHKSubject.Entity = null;
					previousValue.MHKStuRegs.Remove(this);
				}
				this._MHKSubject.Entity = value;
				if ((value != null))
				{
					value.MHKStuRegs.Add(this);
					this._SubjID = value.MHKSubID;
				}
				else
				{
					this._SubjID = default(System.Guid);
				}
				this.SendPropertyChanged("MHKSubject");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_MHKStuReg", Storage="_StudentDetail", ThisKey="StuID", OtherKey="StudentID", IsForeignKey=true)]
	public StudentDetail StudentDetail
	{
		get
		{
			return this._StudentDetail.Entity;
		}
		set
		{
			StudentDetail previousValue = this._StudentDetail.Entity;
			if (((previousValue != value) 
						|| (this._StudentDetail.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StudentDetail.Entity = null;
					previousValue.MHKStuRegs.Remove(this);
				}
				this._StudentDetail.Entity = value;
				if ((value != null))
				{
					value.MHKStuRegs.Add(this);
					this._StuID = value.StudentID;
				}
				else
				{
					this._StuID = default(System.Guid);
				}
				this.SendPropertyChanged("StudentDetail");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MHKSubject")]
public partial class MHKSubject : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _MHKSubID;
	
	private string _MHKSubName;
	
	private string _MHKNote;
	
	private bool _IsNeedAudit;
	
	private EntitySet<MHKStuReg> _MHKStuRegs;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMHKSubIDChanging(System.Guid value);
    partial void OnMHKSubIDChanged();
    partial void OnMHKSubNameChanging(string value);
    partial void OnMHKSubNameChanged();
    partial void OnMHKNoteChanging(string value);
    partial void OnMHKNoteChanged();
    partial void OnIsNeedAuditChanging(bool value);
    partial void OnIsNeedAuditChanged();
    #endregion
	
	public MHKSubject()
	{
		this._MHKStuRegs = new EntitySet<MHKStuReg>(new Action<MHKStuReg>(this.attach_MHKStuRegs), new Action<MHKStuReg>(this.detach_MHKStuRegs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHKSubID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid MHKSubID
	{
		get
		{
			return this._MHKSubID;
		}
		set
		{
			if ((this._MHKSubID != value))
			{
				this.OnMHKSubIDChanging(value);
				this.SendPropertyChanging();
				this._MHKSubID = value;
				this.SendPropertyChanged("MHKSubID");
				this.OnMHKSubIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHKSubName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string MHKSubName
	{
		get
		{
			return this._MHKSubName;
		}
		set
		{
			if ((this._MHKSubName != value))
			{
				this.OnMHKSubNameChanging(value);
				this.SendPropertyChanging();
				this._MHKSubName = value;
				this.SendPropertyChanged("MHKSubName");
				this.OnMHKSubNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHKNote", DbType="NVarChar(250)")]
	public string MHKNote
	{
		get
		{
			return this._MHKNote;
		}
		set
		{
			if ((this._MHKNote != value))
			{
				this.OnMHKNoteChanging(value);
				this.SendPropertyChanging();
				this._MHKNote = value;
				this.SendPropertyChanged("MHKNote");
				this.OnMHKNoteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNeedAudit", DbType="Bit NOT NULL")]
	public bool IsNeedAudit
	{
		get
		{
			return this._IsNeedAudit;
		}
		set
		{
			if ((this._IsNeedAudit != value))
			{
				this.OnIsNeedAuditChanging(value);
				this.SendPropertyChanging();
				this._IsNeedAudit = value;
				this.SendPropertyChanged("IsNeedAudit");
				this.OnIsNeedAuditChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MHKSubject_MHKStuReg", Storage="_MHKStuRegs", ThisKey="MHKSubID", OtherKey="SubjID")]
	public EntitySet<MHKStuReg> MHKStuRegs
	{
		get
		{
			return this._MHKStuRegs;
		}
		set
		{
			this._MHKStuRegs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_MHKStuRegs(MHKStuReg entity)
	{
		this.SendPropertyChanging();
		entity.MHKSubject = this;
	}
	
	private void detach_MHKStuRegs(MHKStuReg entity)
	{
		this.SendPropertyChanging();
		entity.MHKSubject = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModifyApplication")]
public partial class ModifyApplication : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _OperateID;
	
	private System.Guid _AppliantID;
	
	private System.Guid _StudentID;
	
	private string _ModifyType;
	
	private string _ModifyReason;
	
	private System.DateTime _ApplyDate;
	
	private string _AuditResult;
	
	private string _AuditSuggestion;
	
	private System.Nullable<System.DateTime> _AuditDate;
	
	private string _AuditState;
	
	private EntitySet<Audit> _Audits;
	
	private EntitySet<History> _Histories;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOperateIDChanging(System.Guid value);
    partial void OnOperateIDChanged();
    partial void OnAppliantIDChanging(System.Guid value);
    partial void OnAppliantIDChanged();
    partial void OnStudentIDChanging(System.Guid value);
    partial void OnStudentIDChanged();
    partial void OnModifyTypeChanging(string value);
    partial void OnModifyTypeChanged();
    partial void OnModifyReasonChanging(string value);
    partial void OnModifyReasonChanged();
    partial void OnApplyDateChanging(System.DateTime value);
    partial void OnApplyDateChanged();
    partial void OnAuditResultChanging(string value);
    partial void OnAuditResultChanged();
    partial void OnAuditSuggestionChanging(string value);
    partial void OnAuditSuggestionChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnAuditStateChanging(string value);
    partial void OnAuditStateChanged();
    #endregion
	
	public ModifyApplication()
	{
		this._Audits = new EntitySet<Audit>(new Action<Audit>(this.attach_Audits), new Action<Audit>(this.detach_Audits));
		this._Histories = new EntitySet<History>(new Action<History>(this.attach_Histories), new Action<History>(this.detach_Histories));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperateID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid OperateID
	{
		get
		{
			return this._OperateID;
		}
		set
		{
			if ((this._OperateID != value))
			{
				this.OnOperateIDChanging(value);
				this.SendPropertyChanging();
				this._OperateID = value;
				this.SendPropertyChanged("OperateID");
				this.OnOperateIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliantID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid AppliantID
	{
		get
		{
			return this._AppliantID;
		}
		set
		{
			if ((this._AppliantID != value))
			{
				this.OnAppliantIDChanging(value);
				this.SendPropertyChanging();
				this._AppliantID = value;
				this.SendPropertyChanged("AppliantID");
				this.OnAppliantIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				this.OnStudentIDChanging(value);
				this.SendPropertyChanging();
				this._StudentID = value;
				this.SendPropertyChanged("StudentID");
				this.OnStudentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyType", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
	public string ModifyType
	{
		get
		{
			return this._ModifyType;
		}
		set
		{
			if ((this._ModifyType != value))
			{
				this.OnModifyTypeChanging(value);
				this.SendPropertyChanging();
				this._ModifyType = value;
				this.SendPropertyChanged("ModifyType");
				this.OnModifyTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyReason", DbType="NVarChar(200)")]
	public string ModifyReason
	{
		get
		{
			return this._ModifyReason;
		}
		set
		{
			if ((this._ModifyReason != value))
			{
				this.OnModifyReasonChanging(value);
				this.SendPropertyChanging();
				this._ModifyReason = value;
				this.SendPropertyChanged("ModifyReason");
				this.OnModifyReasonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyDate", DbType="SmallDateTime NOT NULL")]
	public System.DateTime ApplyDate
	{
		get
		{
			return this._ApplyDate;
		}
		set
		{
			if ((this._ApplyDate != value))
			{
				this.OnApplyDateChanging(value);
				this.SendPropertyChanging();
				this._ApplyDate = value;
				this.SendPropertyChanged("ApplyDate");
				this.OnApplyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditResult", DbType="NVarChar(50)")]
	public string AuditResult
	{
		get
		{
			return this._AuditResult;
		}
		set
		{
			if ((this._AuditResult != value))
			{
				this.OnAuditResultChanging(value);
				this.SendPropertyChanging();
				this._AuditResult = value;
				this.SendPropertyChanged("AuditResult");
				this.OnAuditResultChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditSuggestion", DbType="NVarChar(200)")]
	public string AuditSuggestion
	{
		get
		{
			return this._AuditSuggestion;
		}
		set
		{
			if ((this._AuditSuggestion != value))
			{
				this.OnAuditSuggestionChanging(value);
				this.SendPropertyChanging();
				this._AuditSuggestion = value;
				this.SendPropertyChanged("AuditSuggestion");
				this.OnAuditSuggestionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> AuditDate
	{
		get
		{
			return this._AuditDate;
		}
		set
		{
			if ((this._AuditDate != value))
			{
				this.OnAuditDateChanging(value);
				this.SendPropertyChanging();
				this._AuditDate = value;
				this.SendPropertyChanged("AuditDate");
				this.OnAuditDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditState", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string AuditState
	{
		get
		{
			return this._AuditState;
		}
		set
		{
			if ((this._AuditState != value))
			{
				this.OnAuditStateChanging(value);
				this.SendPropertyChanging();
				this._AuditState = value;
				this.SendPropertyChanged("AuditState");
				this.OnAuditStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModifyApplication_Audit", Storage="_Audits", ThisKey="OperateID", OtherKey="OperteID")]
	public EntitySet<Audit> Audits
	{
		get
		{
			return this._Audits;
		}
		set
		{
			this._Audits.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModifyApplication_History", Storage="_Histories", ThisKey="OperateID", OtherKey="OperateID")]
	public EntitySet<History> Histories
	{
		get
		{
			return this._Histories;
		}
		set
		{
			this._Histories.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Audits(Audit entity)
	{
		this.SendPropertyChanging();
		entity.ModifyApplication = this;
	}
	
	private void detach_Audits(Audit entity)
	{
		this.SendPropertyChanging();
		entity.ModifyApplication = null;
	}
	
	private void attach_Histories(History entity)
	{
		this.SendPropertyChanging();
		entity.ModifyApplication = this;
	}
	
	private void detach_Histories(History entity)
	{
		this.SendPropertyChanging();
		entity.ModifyApplication = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nationality")]
public partial class Nationality : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _NationailtyName;
	
	private System.Nullable<int> _NCRECODE;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNationailtyNameChanging(string value);
    partial void OnNationailtyNameChanged();
    partial void OnNCRECODEChanging(System.Nullable<int> value);
    partial void OnNCRECODEChanged();
    #endregion
	
	public Nationality()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationailtyName", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string NationailtyName
	{
		get
		{
			return this._NationailtyName;
		}
		set
		{
			if ((this._NationailtyName != value))
			{
				this.OnNationailtyNameChanging(value);
				this.SendPropertyChanging();
				this._NationailtyName = value;
				this.SendPropertyChanged("NationailtyName");
				this.OnNationailtyNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NCRECODE", DbType="Int")]
	public System.Nullable<int> NCRECODE
	{
		get
		{
			return this._NCRECODE;
		}
		set
		{
			if ((this._NCRECODE != value))
			{
				this.OnNCRECODEChanging(value);
				this.SendPropertyChanging();
				this._NCRECODE = value;
				this.SendPropertyChanged("NCRECODE");
				this.OnNCRECODEChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NCREGrade")]
public partial class NCREGrade : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _TestRegisterID;
	
	private System.Guid _StudentID;
	
	private System.Guid _SubjectID;
	
	private string _ExamRegistrationNum;
	
	private string _CertificationNum;
	
	private string _cj;
	
	private string _TestGrade;
	
	private System.DateTime _TestDate;
	
	private string _Note;
	
	private EntityRef<NCRESUBJECT> _NCRESUBJECT;
	
	private EntityRef<StudentDetail> _StudentDetail;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestRegisterIDChanging(System.Guid value);
    partial void OnTestRegisterIDChanged();
    partial void OnStudentIDChanging(System.Guid value);
    partial void OnStudentIDChanged();
    partial void OnSubjectIDChanging(System.Guid value);
    partial void OnSubjectIDChanged();
    partial void OnExamRegistrationNumChanging(string value);
    partial void OnExamRegistrationNumChanged();
    partial void OnCertificationNumChanging(string value);
    partial void OnCertificationNumChanged();
    partial void OncjChanging(string value);
    partial void OncjChanged();
    partial void OnTestGradeChanging(string value);
    partial void OnTestGradeChanged();
    partial void OnTestDateChanging(System.DateTime value);
    partial void OnTestDateChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
	
	public NCREGrade()
	{
		this._NCRESUBJECT = default(EntityRef<NCRESUBJECT>);
		this._StudentDetail = default(EntityRef<StudentDetail>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				if (this._NCRESUBJECT.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTestRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._TestRegisterID = value;
				this.SendPropertyChanged("TestRegisterID");
				this.OnTestRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				if (this._StudentDetail.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStudentIDChanging(value);
				this.SendPropertyChanging();
				this._StudentID = value;
				this.SendPropertyChanged("StudentID");
				this.OnStudentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid SubjectID
	{
		get
		{
			return this._SubjectID;
		}
		set
		{
			if ((this._SubjectID != value))
			{
				if (this._NCRESUBJECT.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSubjectIDChanging(value);
				this.SendPropertyChanging();
				this._SubjectID = value;
				this.SendPropertyChanged("SubjectID");
				this.OnSubjectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamRegistrationNum", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
	public string ExamRegistrationNum
	{
		get
		{
			return this._ExamRegistrationNum;
		}
		set
		{
			if ((this._ExamRegistrationNum != value))
			{
				this.OnExamRegistrationNumChanging(value);
				this.SendPropertyChanging();
				this._ExamRegistrationNum = value;
				this.SendPropertyChanged("ExamRegistrationNum");
				this.OnExamRegistrationNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificationNum", DbType="NVarChar(14)")]
	public string CertificationNum
	{
		get
		{
			return this._CertificationNum;
		}
		set
		{
			if ((this._CertificationNum != value))
			{
				this.OnCertificationNumChanging(value);
				this.SendPropertyChanging();
				this._CertificationNum = value;
				this.SendPropertyChanged("CertificationNum");
				this.OnCertificationNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cj", DbType="NVarChar(5)")]
	public string cj
	{
		get
		{
			return this._cj;
		}
		set
		{
			if ((this._cj != value))
			{
				this.OncjChanging(value);
				this.SendPropertyChanging();
				this._cj = value;
				this.SendPropertyChanged("cj");
				this.OncjChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestGrade", DbType="NVarChar(8)")]
	public string TestGrade
	{
		get
		{
			return this._TestGrade;
		}
		set
		{
			if ((this._TestGrade != value))
			{
				this.OnTestGradeChanging(value);
				this.SendPropertyChanging();
				this._TestGrade = value;
				this.SendPropertyChanged("TestGrade");
				this.OnTestGradeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestDate", DbType="Date NOT NULL", IsPrimaryKey=true)]
	public System.DateTime TestDate
	{
		get
		{
			return this._TestDate;
		}
		set
		{
			if ((this._TestDate != value))
			{
				this.OnTestDateChanging(value);
				this.SendPropertyChanging();
				this._TestDate = value;
				this.SendPropertyChanged("TestDate");
				this.OnTestDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(50)")]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this.OnNoteChanging(value);
				this.SendPropertyChanging();
				this._Note = value;
				this.SendPropertyChanged("Note");
				this.OnNoteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NCRESUBJECT_NCREGrade", Storage="_NCRESUBJECT", ThisKey="TestRegisterID,SubjectID", OtherKey="TestRegisterID,SubjectID", IsForeignKey=true)]
	public NCRESUBJECT NCRESUBJECT
	{
		get
		{
			return this._NCRESUBJECT.Entity;
		}
		set
		{
			NCRESUBJECT previousValue = this._NCRESUBJECT.Entity;
			if (((previousValue != value) 
						|| (this._NCRESUBJECT.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._NCRESUBJECT.Entity = null;
					previousValue.NCREGrades.Remove(this);
				}
				this._NCRESUBJECT.Entity = value;
				if ((value != null))
				{
					value.NCREGrades.Add(this);
					this._TestRegisterID = value.TestRegisterID;
					this._SubjectID = value.SubjectID;
				}
				else
				{
					this._TestRegisterID = default(System.Guid);
					this._SubjectID = default(System.Guid);
				}
				this.SendPropertyChanged("NCRESUBJECT");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_NCREGrade", Storage="_StudentDetail", ThisKey="StudentID", OtherKey="StudentID", IsForeignKey=true)]
	public StudentDetail StudentDetail
	{
		get
		{
			return this._StudentDetail.Entity;
		}
		set
		{
			StudentDetail previousValue = this._StudentDetail.Entity;
			if (((previousValue != value) 
						|| (this._StudentDetail.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StudentDetail.Entity = null;
					previousValue.NCREGrades.Remove(this);
				}
				this._StudentDetail.Entity = value;
				if ((value != null))
				{
					value.NCREGrades.Add(this);
					this._StudentID = value.StudentID;
				}
				else
				{
					this._StudentID = default(System.Guid);
				}
				this.SendPropertyChanged("StudentDetail");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NCREINFO")]
public partial class NCREINFO : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _TestRegisterID;
	
	private string _TEST_ID;
	
	private string _ORG_CODE;
	
	private string _EXPORTTYPE;
	
	private System.DateTime _CREATETIME;
	
	private System.Guid _CampusLocationID;
	
	private System.Guid _NCRETestRegisterID;
	
	private EntitySet<NCREREGISTER> _NCREREGISTERs;
	
	private EntityRef<CampusLocation> _CampusLocation;
	
	private EntityRef<TestRegister> _TestRegister;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestRegisterIDChanging(System.Guid value);
    partial void OnTestRegisterIDChanged();
    partial void OnTEST_IDChanging(string value);
    partial void OnTEST_IDChanged();
    partial void OnORG_CODEChanging(string value);
    partial void OnORG_CODEChanged();
    partial void OnEXPORTTYPEChanging(string value);
    partial void OnEXPORTTYPEChanged();
    partial void OnCREATETIMEChanging(System.DateTime value);
    partial void OnCREATETIMEChanged();
    partial void OnCampusLocationIDChanging(System.Guid value);
    partial void OnCampusLocationIDChanged();
    partial void OnNCRETestRegisterIDChanging(System.Guid value);
    partial void OnNCRETestRegisterIDChanged();
    #endregion
	
	public NCREINFO()
	{
		this._NCREREGISTERs = new EntitySet<NCREREGISTER>(new Action<NCREREGISTER>(this.attach_NCREREGISTERs), new Action<NCREREGISTER>(this.detach_NCREREGISTERs));
		this._CampusLocation = default(EntityRef<CampusLocation>);
		this._TestRegister = default(EntityRef<TestRegister>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				if (this._TestRegister.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTestRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._TestRegisterID = value;
				this.SendPropertyChanged("TestRegisterID");
				this.OnTestRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEST_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string TEST_ID
	{
		get
		{
			return this._TEST_ID;
		}
		set
		{
			if ((this._TEST_ID != value))
			{
				this.OnTEST_IDChanging(value);
				this.SendPropertyChanging();
				this._TEST_ID = value;
				this.SendPropertyChanged("TEST_ID");
				this.OnTEST_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORG_CODE", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string ORG_CODE
	{
		get
		{
			return this._ORG_CODE;
		}
		set
		{
			if ((this._ORG_CODE != value))
			{
				this.OnORG_CODEChanging(value);
				this.SendPropertyChanging();
				this._ORG_CODE = value;
				this.SendPropertyChanged("ORG_CODE");
				this.OnORG_CODEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXPORTTYPE", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
	public string EXPORTTYPE
	{
		get
		{
			return this._EXPORTTYPE;
		}
		set
		{
			if ((this._EXPORTTYPE != value))
			{
				this.OnEXPORTTYPEChanging(value);
				this.SendPropertyChanging();
				this._EXPORTTYPE = value;
				this.SendPropertyChanged("EXPORTTYPE");
				this.OnEXPORTTYPEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATETIME", DbType="SmallDateTime NOT NULL")]
	public System.DateTime CREATETIME
	{
		get
		{
			return this._CREATETIME;
		}
		set
		{
			if ((this._CREATETIME != value))
			{
				this.OnCREATETIMEChanging(value);
				this.SendPropertyChanging();
				this._CREATETIME = value;
				this.SendPropertyChanged("CREATETIME");
				this.OnCREATETIMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusLocationID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid CampusLocationID
	{
		get
		{
			return this._CampusLocationID;
		}
		set
		{
			if ((this._CampusLocationID != value))
			{
				if (this._CampusLocation.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCampusLocationIDChanging(value);
				this.SendPropertyChanging();
				this._CampusLocationID = value;
				this.SendPropertyChanged("CampusLocationID");
				this.OnCampusLocationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NCRETestRegisterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid NCRETestRegisterID
	{
		get
		{
			return this._NCRETestRegisterID;
		}
		set
		{
			if ((this._NCRETestRegisterID != value))
			{
				this.OnNCRETestRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._NCRETestRegisterID = value;
				this.SendPropertyChanged("NCRETestRegisterID");
				this.OnNCRETestRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NCREINFO_NCREREGISTER", Storage="_NCREREGISTERs", ThisKey="NCRETestRegisterID", OtherKey="NCRETestRegisterID")]
	public EntitySet<NCREREGISTER> NCREREGISTERs
	{
		get
		{
			return this._NCREREGISTERs;
		}
		set
		{
			this._NCREREGISTERs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampusLocation_NCREINFO", Storage="_CampusLocation", ThisKey="CampusLocationID", OtherKey="CampusLocationID", IsForeignKey=true)]
	public CampusLocation CampusLocation
	{
		get
		{
			return this._CampusLocation.Entity;
		}
		set
		{
			CampusLocation previousValue = this._CampusLocation.Entity;
			if (((previousValue != value) 
						|| (this._CampusLocation.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CampusLocation.Entity = null;
					previousValue.NCREINFOs.Remove(this);
				}
				this._CampusLocation.Entity = value;
				if ((value != null))
				{
					value.NCREINFOs.Add(this);
					this._CampusLocationID = value.CampusLocationID;
				}
				else
				{
					this._CampusLocationID = default(System.Guid);
				}
				this.SendPropertyChanged("CampusLocation");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestRegister_NCREINFO", Storage="_TestRegister", ThisKey="TestRegisterID", OtherKey="TestRegisterID", IsForeignKey=true)]
	public TestRegister TestRegister
	{
		get
		{
			return this._TestRegister.Entity;
		}
		set
		{
			TestRegister previousValue = this._TestRegister.Entity;
			if (((previousValue != value) 
						|| (this._TestRegister.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TestRegister.Entity = null;
					previousValue.NCREINFOs.Remove(this);
				}
				this._TestRegister.Entity = value;
				if ((value != null))
				{
					value.NCREINFOs.Add(this);
					this._TestRegisterID = value.TestRegisterID;
				}
				else
				{
					this._TestRegisterID = default(System.Guid);
				}
				this.SendPropertyChanged("TestRegister");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_NCREREGISTERs(NCREREGISTER entity)
	{
		this.SendPropertyChanging();
		entity.NCREINFO = this;
	}
	
	private void detach_NCREREGISTERs(NCREREGISTER entity)
	{
		this.SendPropertyChanging();
		entity.NCREINFO = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NCREREGISTER")]
public partial class NCREREGISTER : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _StudentRegisterID;
	
	private System.Guid _StudentID;
	
	private System.Nullable<System.Guid> _IDENT;
	
	private string _REGCODE;
	
	private string _IsApproved;
	
	private bool _IsPrinted;
	
	private bool _IsPayed;
	
	private System.Guid _SubjectID;
	
	private string _SUBJECT_STAGE;
	
	private System.Guid _NCRETestRegisterID;
	
	private string _RegisterState;
	
	private string _zkzh;
	
	private System.Nullable<System.Guid> _NCRERegisterCampus;
	
	private string _NCRERedoState;
	
	private EntityRef<NCREINFO> _NCREINFO;
	
	private EntityRef<Student> _Student;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentRegisterIDChanging(System.Guid value);
    partial void OnStudentRegisterIDChanged();
    partial void OnStudentIDChanging(System.Guid value);
    partial void OnStudentIDChanged();
    partial void OnIDENTChanging(System.Nullable<System.Guid> value);
    partial void OnIDENTChanged();
    partial void OnREGCODEChanging(string value);
    partial void OnREGCODEChanged();
    partial void OnIsApprovedChanging(string value);
    partial void OnIsApprovedChanged();
    partial void OnIsPrintedChanging(bool value);
    partial void OnIsPrintedChanged();
    partial void OnIsPayedChanging(bool value);
    partial void OnIsPayedChanged();
    partial void OnSubjectIDChanging(System.Guid value);
    partial void OnSubjectIDChanged();
    partial void OnSUBJECT_STAGEChanging(string value);
    partial void OnSUBJECT_STAGEChanged();
    partial void OnNCRETestRegisterIDChanging(System.Guid value);
    partial void OnNCRETestRegisterIDChanged();
    partial void OnRegisterStateChanging(string value);
    partial void OnRegisterStateChanged();
    partial void OnzkzhChanging(string value);
    partial void OnzkzhChanged();
    partial void OnNCRERegisterCampusChanging(System.Nullable<System.Guid> value);
    partial void OnNCRERegisterCampusChanged();
    partial void OnNCRERedoStateChanging(string value);
    partial void OnNCRERedoStateChanged();
    #endregion
	
	public NCREREGISTER()
	{
		this._NCREINFO = default(EntityRef<NCREINFO>);
		this._Student = default(EntityRef<Student>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentRegisterID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid StudentRegisterID
	{
		get
		{
			return this._StudentRegisterID;
		}
		set
		{
			if ((this._StudentRegisterID != value))
			{
				this.OnStudentRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._StudentRegisterID = value;
				this.SendPropertyChanged("StudentRegisterID");
				this.OnStudentRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				if (this._Student.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStudentIDChanging(value);
				this.SendPropertyChanging();
				this._StudentID = value;
				this.SendPropertyChanged("StudentID");
				this.OnStudentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDENT", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> IDENT
	{
		get
		{
			return this._IDENT;
		}
		set
		{
			if ((this._IDENT != value))
			{
				this.OnIDENTChanging(value);
				this.SendPropertyChanging();
				this._IDENT = value;
				this.SendPropertyChanged("IDENT");
				this.OnIDENTChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGCODE", DbType="NVarChar(6)")]
	public string REGCODE
	{
		get
		{
			return this._REGCODE;
		}
		set
		{
			if ((this._REGCODE != value))
			{
				this.OnREGCODEChanging(value);
				this.SendPropertyChanging();
				this._REGCODE = value;
				this.SendPropertyChanged("REGCODE");
				this.OnREGCODEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="NVarChar(5)")]
	public string IsApproved
	{
		get
		{
			return this._IsApproved;
		}
		set
		{
			if ((this._IsApproved != value))
			{
				this.OnIsApprovedChanging(value);
				this.SendPropertyChanging();
				this._IsApproved = value;
				this.SendPropertyChanged("IsApproved");
				this.OnIsApprovedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrinted", DbType="Bit NOT NULL")]
	public bool IsPrinted
	{
		get
		{
			return this._IsPrinted;
		}
		set
		{
			if ((this._IsPrinted != value))
			{
				this.OnIsPrintedChanging(value);
				this.SendPropertyChanging();
				this._IsPrinted = value;
				this.SendPropertyChanged("IsPrinted");
				this.OnIsPrintedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPayed", DbType="Bit NOT NULL")]
	public bool IsPayed
	{
		get
		{
			return this._IsPayed;
		}
		set
		{
			if ((this._IsPayed != value))
			{
				this.OnIsPayedChanging(value);
				this.SendPropertyChanging();
				this._IsPayed = value;
				this.SendPropertyChanged("IsPayed");
				this.OnIsPayedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid SubjectID
	{
		get
		{
			return this._SubjectID;
		}
		set
		{
			if ((this._SubjectID != value))
			{
				this.OnSubjectIDChanging(value);
				this.SendPropertyChanging();
				this._SubjectID = value;
				this.SendPropertyChanged("SubjectID");
				this.OnSubjectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBJECT_STAGE", DbType="NVarChar(10)")]
	public string SUBJECT_STAGE
	{
		get
		{
			return this._SUBJECT_STAGE;
		}
		set
		{
			if ((this._SUBJECT_STAGE != value))
			{
				this.OnSUBJECT_STAGEChanging(value);
				this.SendPropertyChanging();
				this._SUBJECT_STAGE = value;
				this.SendPropertyChanged("SUBJECT_STAGE");
				this.OnSUBJECT_STAGEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NCRETestRegisterID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid NCRETestRegisterID
	{
		get
		{
			return this._NCRETestRegisterID;
		}
		set
		{
			if ((this._NCRETestRegisterID != value))
			{
				if (this._NCREINFO.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnNCRETestRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._NCRETestRegisterID = value;
				this.SendPropertyChanged("NCRETestRegisterID");
				this.OnNCRETestRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterState", DbType="NVarChar(10)")]
	public string RegisterState
	{
		get
		{
			return this._RegisterState;
		}
		set
		{
			if ((this._RegisterState != value))
			{
				this.OnRegisterStateChanging(value);
				this.SendPropertyChanging();
				this._RegisterState = value;
				this.SendPropertyChanged("RegisterState");
				this.OnRegisterStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zkzh", DbType="NVarChar(15)")]
	public string zkzh
	{
		get
		{
			return this._zkzh;
		}
		set
		{
			if ((this._zkzh != value))
			{
				this.OnzkzhChanging(value);
				this.SendPropertyChanging();
				this._zkzh = value;
				this.SendPropertyChanged("zkzh");
				this.OnzkzhChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NCRERegisterCampus", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> NCRERegisterCampus
	{
		get
		{
			return this._NCRERegisterCampus;
		}
		set
		{
			if ((this._NCRERegisterCampus != value))
			{
				this.OnNCRERegisterCampusChanging(value);
				this.SendPropertyChanging();
				this._NCRERegisterCampus = value;
				this.SendPropertyChanged("NCRERegisterCampus");
				this.OnNCRERegisterCampusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NCRERedoState", DbType="NVarChar(10)")]
	public string NCRERedoState
	{
		get
		{
			return this._NCRERedoState;
		}
		set
		{
			if ((this._NCRERedoState != value))
			{
				this.OnNCRERedoStateChanging(value);
				this.SendPropertyChanging();
				this._NCRERedoState = value;
				this.SendPropertyChanged("NCRERedoState");
				this.OnNCRERedoStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NCREINFO_NCREREGISTER", Storage="_NCREINFO", ThisKey="NCRETestRegisterID", OtherKey="NCRETestRegisterID", IsForeignKey=true)]
	public NCREINFO NCREINFO
	{
		get
		{
			return this._NCREINFO.Entity;
		}
		set
		{
			NCREINFO previousValue = this._NCREINFO.Entity;
			if (((previousValue != value) 
						|| (this._NCREINFO.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._NCREINFO.Entity = null;
					previousValue.NCREREGISTERs.Remove(this);
				}
				this._NCREINFO.Entity = value;
				if ((value != null))
				{
					value.NCREREGISTERs.Add(this);
					this._NCRETestRegisterID = value.NCRETestRegisterID;
				}
				else
				{
					this._NCRETestRegisterID = default(System.Guid);
				}
				this.SendPropertyChanged("NCREINFO");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_NCREREGISTER", Storage="_Student", ThisKey="StudentID", OtherKey="StudentID", IsForeignKey=true)]
	public Student Student
	{
		get
		{
			return this._Student.Entity;
		}
		set
		{
			Student previousValue = this._Student.Entity;
			if (((previousValue != value) 
						|| (this._Student.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Student.Entity = null;
					previousValue.NCREREGISTERs.Remove(this);
				}
				this._Student.Entity = value;
				if ((value != null))
				{
					value.NCREREGISTERs.Add(this);
					this._StudentID = value.StudentID;
				}
				else
				{
					this._StudentID = default(System.Guid);
				}
				this.SendPropertyChanged("Student");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NCRESUBJECT")]
public partial class NCRESUBJECT : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _TestRegisterID;
	
	private string _TEST_ID;
	
	private string _SUBJECTCODE;
	
	private string _GRADE;
	
	private short _TESTTIME1;
	
	private short _TESTTIME2;
	
	private string _SUBJECTNAME;
	
	private System.Guid _SubjectID;
	
	private EntitySet<NCREGrade> _NCREGrades;
	
	private EntityRef<TestRegister> _TestRegister;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestRegisterIDChanging(System.Guid value);
    partial void OnTestRegisterIDChanged();
    partial void OnTEST_IDChanging(string value);
    partial void OnTEST_IDChanged();
    partial void OnSUBJECTCODEChanging(string value);
    partial void OnSUBJECTCODEChanged();
    partial void OnGRADEChanging(string value);
    partial void OnGRADEChanged();
    partial void OnTESTTIME1Changing(short value);
    partial void OnTESTTIME1Changed();
    partial void OnTESTTIME2Changing(short value);
    partial void OnTESTTIME2Changed();
    partial void OnSUBJECTNAMEChanging(string value);
    partial void OnSUBJECTNAMEChanged();
    partial void OnSubjectIDChanging(System.Guid value);
    partial void OnSubjectIDChanged();
    #endregion
	
	public NCRESUBJECT()
	{
		this._NCREGrades = new EntitySet<NCREGrade>(new Action<NCREGrade>(this.attach_NCREGrades), new Action<NCREGrade>(this.detach_NCREGrades));
		this._TestRegister = default(EntityRef<TestRegister>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				if (this._TestRegister.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTestRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._TestRegisterID = value;
				this.SendPropertyChanged("TestRegisterID");
				this.OnTestRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEST_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string TEST_ID
	{
		get
		{
			return this._TEST_ID;
		}
		set
		{
			if ((this._TEST_ID != value))
			{
				this.OnTEST_IDChanging(value);
				this.SendPropertyChanging();
				this._TEST_ID = value;
				this.SendPropertyChanged("TEST_ID");
				this.OnTEST_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBJECTCODE", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string SUBJECTCODE
	{
		get
		{
			return this._SUBJECTCODE;
		}
		set
		{
			if ((this._SUBJECTCODE != value))
			{
				this.OnSUBJECTCODEChanging(value);
				this.SendPropertyChanging();
				this._SUBJECTCODE = value;
				this.SendPropertyChanged("SUBJECTCODE");
				this.OnSUBJECTCODEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRADE", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string GRADE
	{
		get
		{
			return this._GRADE;
		}
		set
		{
			if ((this._GRADE != value))
			{
				this.OnGRADEChanging(value);
				this.SendPropertyChanging();
				this._GRADE = value;
				this.SendPropertyChanged("GRADE");
				this.OnGRADEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TESTTIME1", DbType="SmallInt NOT NULL")]
	public short TESTTIME1
	{
		get
		{
			return this._TESTTIME1;
		}
		set
		{
			if ((this._TESTTIME1 != value))
			{
				this.OnTESTTIME1Changing(value);
				this.SendPropertyChanging();
				this._TESTTIME1 = value;
				this.SendPropertyChanged("TESTTIME1");
				this.OnTESTTIME1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TESTTIME2", DbType="SmallInt NOT NULL")]
	public short TESTTIME2
	{
		get
		{
			return this._TESTTIME2;
		}
		set
		{
			if ((this._TESTTIME2 != value))
			{
				this.OnTESTTIME2Changing(value);
				this.SendPropertyChanging();
				this._TESTTIME2 = value;
				this.SendPropertyChanged("TESTTIME2");
				this.OnTESTTIME2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBJECTNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string SUBJECTNAME
	{
		get
		{
			return this._SUBJECTNAME;
		}
		set
		{
			if ((this._SUBJECTNAME != value))
			{
				this.OnSUBJECTNAMEChanging(value);
				this.SendPropertyChanging();
				this._SUBJECTNAME = value;
				this.SendPropertyChanged("SUBJECTNAME");
				this.OnSUBJECTNAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid SubjectID
	{
		get
		{
			return this._SubjectID;
		}
		set
		{
			if ((this._SubjectID != value))
			{
				this.OnSubjectIDChanging(value);
				this.SendPropertyChanging();
				this._SubjectID = value;
				this.SendPropertyChanged("SubjectID");
				this.OnSubjectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NCRESUBJECT_NCREGrade", Storage="_NCREGrades", ThisKey="TestRegisterID,SubjectID", OtherKey="TestRegisterID,SubjectID")]
	public EntitySet<NCREGrade> NCREGrades
	{
		get
		{
			return this._NCREGrades;
		}
		set
		{
			this._NCREGrades.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestRegister_NCRESUBJECT", Storage="_TestRegister", ThisKey="TestRegisterID", OtherKey="TestRegisterID", IsForeignKey=true)]
	public TestRegister TestRegister
	{
		get
		{
			return this._TestRegister.Entity;
		}
		set
		{
			TestRegister previousValue = this._TestRegister.Entity;
			if (((previousValue != value) 
						|| (this._TestRegister.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TestRegister.Entity = null;
					previousValue.NCRESUBJECTs.Remove(this);
				}
				this._TestRegister.Entity = value;
				if ((value != null))
				{
					value.NCRESUBJECTs.Add(this);
					this._TestRegisterID = value.TestRegisterID;
				}
				else
				{
					this._TestRegisterID = default(System.Guid);
				}
				this.SendPropertyChanged("TestRegister");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_NCREGrades(NCREGrade entity)
	{
		this.SendPropertyChanging();
		entity.NCRESUBJECT = this;
	}
	
	private void detach_NCREGrades(NCREGrade entity)
	{
		this.SendPropertyChanging();
		entity.NCRESUBJECT = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Operate_Type")]
public partial class Operate_Type : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _OperateType;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOperateTypeChanging(string value);
    partial void OnOperateTypeChanged();
    #endregion
	
	public Operate_Type()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperateType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string OperateType
	{
		get
		{
			return this._OperateType;
		}
		set
		{
			if ((this._OperateType != value))
			{
				this.OnOperateTypeChanging(value);
				this.SendPropertyChanging();
				this._OperateType = value;
				this.SendPropertyChanged("OperateType");
				this.OnOperateTypeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RedoAudit")]
public partial class RedoAudit : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _NCRedoID;
	
	private string _ApplyUser;
	
	private string _ApplyReason;
	
	private System.Nullable<System.DateTime> _ApplyDate;
	
	private string _InitUser;
	
	private string _InitResult;
	
	private string _InitSuggestion;
	
	private System.Nullable<System.DateTime> _InitDate;
	
	private string _FinalUser;
	
	private string _FinalResult;
	
	private string _FinalSuggestion;
	
	private System.Nullable<System.DateTime> _FinalDate;
	
	private string _NCRedoState;
	
	private string _NCRedoResult;
	
	private EntitySet<RedoInfo> _RedoInfos;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNCRedoIDChanging(System.Guid value);
    partial void OnNCRedoIDChanged();
    partial void OnApplyUserChanging(string value);
    partial void OnApplyUserChanged();
    partial void OnApplyReasonChanging(string value);
    partial void OnApplyReasonChanged();
    partial void OnApplyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApplyDateChanged();
    partial void OnInitUserChanging(string value);
    partial void OnInitUserChanged();
    partial void OnInitResultChanging(string value);
    partial void OnInitResultChanged();
    partial void OnInitSuggestionChanging(string value);
    partial void OnInitSuggestionChanged();
    partial void OnInitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInitDateChanged();
    partial void OnFinalUserChanging(string value);
    partial void OnFinalUserChanged();
    partial void OnFinalResultChanging(string value);
    partial void OnFinalResultChanged();
    partial void OnFinalSuggestionChanging(string value);
    partial void OnFinalSuggestionChanged();
    partial void OnFinalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinalDateChanged();
    partial void OnNCRedoStateChanging(string value);
    partial void OnNCRedoStateChanged();
    partial void OnNCRedoResultChanging(string value);
    partial void OnNCRedoResultChanged();
    #endregion
	
	public RedoAudit()
	{
		this._RedoInfos = new EntitySet<RedoInfo>(new Action<RedoInfo>(this.attach_RedoInfos), new Action<RedoInfo>(this.detach_RedoInfos));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NCRedoID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid NCRedoID
	{
		get
		{
			return this._NCRedoID;
		}
		set
		{
			if ((this._NCRedoID != value))
			{
				this.OnNCRedoIDChanging(value);
				this.SendPropertyChanging();
				this._NCRedoID = value;
				this.SendPropertyChanged("NCRedoID");
				this.OnNCRedoIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUser", DbType="NVarChar(15)")]
	public string ApplyUser
	{
		get
		{
			return this._ApplyUser;
		}
		set
		{
			if ((this._ApplyUser != value))
			{
				this.OnApplyUserChanging(value);
				this.SendPropertyChanging();
				this._ApplyUser = value;
				this.SendPropertyChanged("ApplyUser");
				this.OnApplyUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyReason", DbType="NVarChar(50)")]
	public string ApplyReason
	{
		get
		{
			return this._ApplyReason;
		}
		set
		{
			if ((this._ApplyReason != value))
			{
				this.OnApplyReasonChanging(value);
				this.SendPropertyChanging();
				this._ApplyReason = value;
				this.SendPropertyChanged("ApplyReason");
				this.OnApplyReasonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ApplyDate
	{
		get
		{
			return this._ApplyDate;
		}
		set
		{
			if ((this._ApplyDate != value))
			{
				this.OnApplyDateChanging(value);
				this.SendPropertyChanging();
				this._ApplyDate = value;
				this.SendPropertyChanged("ApplyDate");
				this.OnApplyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitUser", DbType="NVarChar(15)")]
	public string InitUser
	{
		get
		{
			return this._InitUser;
		}
		set
		{
			if ((this._InitUser != value))
			{
				this.OnInitUserChanging(value);
				this.SendPropertyChanging();
				this._InitUser = value;
				this.SendPropertyChanged("InitUser");
				this.OnInitUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitResult", DbType="NVarChar(5)")]
	public string InitResult
	{
		get
		{
			return this._InitResult;
		}
		set
		{
			if ((this._InitResult != value))
			{
				this.OnInitResultChanging(value);
				this.SendPropertyChanging();
				this._InitResult = value;
				this.SendPropertyChanged("InitResult");
				this.OnInitResultChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitSuggestion", DbType="NVarChar(50)")]
	public string InitSuggestion
	{
		get
		{
			return this._InitSuggestion;
		}
		set
		{
			if ((this._InitSuggestion != value))
			{
				this.OnInitSuggestionChanging(value);
				this.SendPropertyChanging();
				this._InitSuggestion = value;
				this.SendPropertyChanged("InitSuggestion");
				this.OnInitSuggestionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InitDate
	{
		get
		{
			return this._InitDate;
		}
		set
		{
			if ((this._InitDate != value))
			{
				this.OnInitDateChanging(value);
				this.SendPropertyChanging();
				this._InitDate = value;
				this.SendPropertyChanged("InitDate");
				this.OnInitDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalUser", DbType="NVarChar(15)")]
	public string FinalUser
	{
		get
		{
			return this._FinalUser;
		}
		set
		{
			if ((this._FinalUser != value))
			{
				this.OnFinalUserChanging(value);
				this.SendPropertyChanging();
				this._FinalUser = value;
				this.SendPropertyChanged("FinalUser");
				this.OnFinalUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalResult", DbType="NVarChar(5)")]
	public string FinalResult
	{
		get
		{
			return this._FinalResult;
		}
		set
		{
			if ((this._FinalResult != value))
			{
				this.OnFinalResultChanging(value);
				this.SendPropertyChanging();
				this._FinalResult = value;
				this.SendPropertyChanged("FinalResult");
				this.OnFinalResultChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalSuggestion", DbType="NVarChar(50)")]
	public string FinalSuggestion
	{
		get
		{
			return this._FinalSuggestion;
		}
		set
		{
			if ((this._FinalSuggestion != value))
			{
				this.OnFinalSuggestionChanging(value);
				this.SendPropertyChanging();
				this._FinalSuggestion = value;
				this.SendPropertyChanged("FinalSuggestion");
				this.OnFinalSuggestionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> FinalDate
	{
		get
		{
			return this._FinalDate;
		}
		set
		{
			if ((this._FinalDate != value))
			{
				this.OnFinalDateChanging(value);
				this.SendPropertyChanging();
				this._FinalDate = value;
				this.SendPropertyChanged("FinalDate");
				this.OnFinalDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NCRedoState", DbType="NVarChar(10)")]
	public string NCRedoState
	{
		get
		{
			return this._NCRedoState;
		}
		set
		{
			if ((this._NCRedoState != value))
			{
				this.OnNCRedoStateChanging(value);
				this.SendPropertyChanging();
				this._NCRedoState = value;
				this.SendPropertyChanged("NCRedoState");
				this.OnNCRedoStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NCRedoResult", DbType="NVarChar(10)")]
	public string NCRedoResult
	{
		get
		{
			return this._NCRedoResult;
		}
		set
		{
			if ((this._NCRedoResult != value))
			{
				this.OnNCRedoResultChanging(value);
				this.SendPropertyChanging();
				this._NCRedoResult = value;
				this.SendPropertyChanged("NCRedoResult");
				this.OnNCRedoResultChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RedoAudit_RedoInfo", Storage="_RedoInfos", ThisKey="NCRedoID", OtherKey="NCRedoID")]
	public EntitySet<RedoInfo> RedoInfos
	{
		get
		{
			return this._RedoInfos;
		}
		set
		{
			this._RedoInfos.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_RedoInfos(RedoInfo entity)
	{
		this.SendPropertyChanging();
		entity.RedoAudit = this;
	}
	
	private void detach_RedoInfos(RedoInfo entity)
	{
		this.SendPropertyChanging();
		entity.RedoAudit = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RedoInfo")]
public partial class RedoInfo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _NCRedoID;
	
	private System.Guid _TestRegisterID;
	
	private System.Guid _StudentID;
	
	private System.Guid _SubjectID;
	
	private string _NCRedoNode;
	
	private EntityRef<RedoAudit> _RedoAudit;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNCRedoIDChanging(System.Guid value);
    partial void OnNCRedoIDChanged();
    partial void OnTestRegisterIDChanging(System.Guid value);
    partial void OnTestRegisterIDChanged();
    partial void OnStudentIDChanging(System.Guid value);
    partial void OnStudentIDChanged();
    partial void OnSubjectIDChanging(System.Guid value);
    partial void OnSubjectIDChanged();
    partial void OnNCRedoNodeChanging(string value);
    partial void OnNCRedoNodeChanged();
    #endregion
	
	public RedoInfo()
	{
		this._RedoAudit = default(EntityRef<RedoAudit>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NCRedoID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid NCRedoID
	{
		get
		{
			return this._NCRedoID;
		}
		set
		{
			if ((this._NCRedoID != value))
			{
				if (this._RedoAudit.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnNCRedoIDChanging(value);
				this.SendPropertyChanging();
				this._NCRedoID = value;
				this.SendPropertyChanged("NCRedoID");
				this.OnNCRedoIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				this.OnTestRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._TestRegisterID = value;
				this.SendPropertyChanged("TestRegisterID");
				this.OnTestRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				this.OnStudentIDChanging(value);
				this.SendPropertyChanging();
				this._StudentID = value;
				this.SendPropertyChanged("StudentID");
				this.OnStudentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid SubjectID
	{
		get
		{
			return this._SubjectID;
		}
		set
		{
			if ((this._SubjectID != value))
			{
				this.OnSubjectIDChanging(value);
				this.SendPropertyChanging();
				this._SubjectID = value;
				this.SendPropertyChanged("SubjectID");
				this.OnSubjectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NCRedoNode", DbType="NVarChar(250)")]
	public string NCRedoNode
	{
		get
		{
			return this._NCRedoNode;
		}
		set
		{
			if ((this._NCRedoNode != value))
			{
				this.OnNCRedoNodeChanging(value);
				this.SendPropertyChanging();
				this._NCRedoNode = value;
				this.SendPropertyChanged("NCRedoNode");
				this.OnNCRedoNodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RedoAudit_RedoInfo", Storage="_RedoAudit", ThisKey="NCRedoID", OtherKey="NCRedoID", IsForeignKey=true)]
	public RedoAudit RedoAudit
	{
		get
		{
			return this._RedoAudit.Entity;
		}
		set
		{
			RedoAudit previousValue = this._RedoAudit.Entity;
			if (((previousValue != value) 
						|| (this._RedoAudit.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._RedoAudit.Entity = null;
					previousValue.RedoInfos.Remove(this);
				}
				this._RedoAudit.Entity = value;
				if ((value != null))
				{
					value.RedoInfos.Add(this);
					this._NCRedoID = value.NCRedoID;
				}
				else
				{
					this._NCRedoID = default(System.Guid);
				}
				this.SendPropertyChanged("RedoAudit");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegisterProcess")]
public partial class RegisterProcess : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _TestRegisterID;
	
	private System.Guid _DeptID;
	
	private string _State;
	
	private EntityRef<Dept> _Dept;
	
	private EntityRef<TestRegister> _TestRegister;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestRegisterIDChanging(System.Guid value);
    partial void OnTestRegisterIDChanged();
    partial void OnDeptIDChanging(System.Guid value);
    partial void OnDeptIDChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    #endregion
	
	public RegisterProcess()
	{
		this._Dept = default(EntityRef<Dept>);
		this._TestRegister = default(EntityRef<TestRegister>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				if (this._TestRegister.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTestRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._TestRegisterID = value;
				this.SendPropertyChanged("TestRegisterID");
				this.OnTestRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid DeptID
	{
		get
		{
			return this._DeptID;
		}
		set
		{
			if ((this._DeptID != value))
			{
				if (this._Dept.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDeptIDChanging(value);
				this.SendPropertyChanging();
				this._DeptID = value;
				this.SendPropertyChanged("DeptID");
				this.OnDeptIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string State
	{
		get
		{
			return this._State;
		}
		set
		{
			if ((this._State != value))
			{
				this.OnStateChanging(value);
				this.SendPropertyChanging();
				this._State = value;
				this.SendPropertyChanged("State");
				this.OnStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dept_RegisterProcess", Storage="_Dept", ThisKey="DeptID", OtherKey="DeptID", IsForeignKey=true)]
	public Dept Dept
	{
		get
		{
			return this._Dept.Entity;
		}
		set
		{
			Dept previousValue = this._Dept.Entity;
			if (((previousValue != value) 
						|| (this._Dept.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Dept.Entity = null;
					previousValue.RegisterProcesses.Remove(this);
				}
				this._Dept.Entity = value;
				if ((value != null))
				{
					value.RegisterProcesses.Add(this);
					this._DeptID = value.DeptID;
				}
				else
				{
					this._DeptID = default(System.Guid);
				}
				this.SendPropertyChanged("Dept");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestRegister_RegisterProcess", Storage="_TestRegister", ThisKey="TestRegisterID", OtherKey="TestRegisterID", IsForeignKey=true)]
	public TestRegister TestRegister
	{
		get
		{
			return this._TestRegister.Entity;
		}
		set
		{
			TestRegister previousValue = this._TestRegister.Entity;
			if (((previousValue != value) 
						|| (this._TestRegister.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TestRegister.Entity = null;
					previousValue.RegisterProcesses.Remove(this);
				}
				this._TestRegister.Entity = value;
				if ((value != null))
				{
					value.RegisterProcesses.Add(this);
					this._TestRegisterID = value.TestRegisterID;
				}
				else
				{
					this._TestRegisterID = default(System.Guid);
				}
				this.SendPropertyChanged("TestRegister");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegisterState")]
public partial class RegisterState : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _RegisterTypeID;
	
	private string _RegisterName;
	
	private System.Nullable<System.DateTime> _StartDate;
	
	private System.Nullable<System.DateTime> _EndDate;
	
	private string _RegisterCurState;
	
	private System.Nullable<int> _RegisterNum;
	
	private EntitySet<DeptProcess> _DeptProcesses;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegisterTypeIDChanging(System.Guid value);
    partial void OnRegisterTypeIDChanged();
    partial void OnRegisterNameChanging(string value);
    partial void OnRegisterNameChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnRegisterCurStateChanging(string value);
    partial void OnRegisterCurStateChanged();
    partial void OnRegisterNumChanging(System.Nullable<int> value);
    partial void OnRegisterNumChanged();
    #endregion
	
	public RegisterState()
	{
		this._DeptProcesses = new EntitySet<DeptProcess>(new Action<DeptProcess>(this.attach_DeptProcesses), new Action<DeptProcess>(this.detach_DeptProcesses));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterTypeID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid RegisterTypeID
	{
		get
		{
			return this._RegisterTypeID;
		}
		set
		{
			if ((this._RegisterTypeID != value))
			{
				this.OnRegisterTypeIDChanging(value);
				this.SendPropertyChanging();
				this._RegisterTypeID = value;
				this.SendPropertyChanged("RegisterTypeID");
				this.OnRegisterTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterName", DbType="NVarChar(20)")]
	public string RegisterName
	{
		get
		{
			return this._RegisterName;
		}
		set
		{
			if ((this._RegisterName != value))
			{
				this.OnRegisterNameChanging(value);
				this.SendPropertyChanging();
				this._RegisterName = value;
				this.SendPropertyChanged("RegisterName");
				this.OnRegisterNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterCurState", DbType="NVarChar(10)")]
	public string RegisterCurState
	{
		get
		{
			return this._RegisterCurState;
		}
		set
		{
			if ((this._RegisterCurState != value))
			{
				this.OnRegisterCurStateChanging(value);
				this.SendPropertyChanging();
				this._RegisterCurState = value;
				this.SendPropertyChanged("RegisterCurState");
				this.OnRegisterCurStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterNum", DbType="Int")]
	public System.Nullable<int> RegisterNum
	{
		get
		{
			return this._RegisterNum;
		}
		set
		{
			if ((this._RegisterNum != value))
			{
				this.OnRegisterNumChanging(value);
				this.SendPropertyChanging();
				this._RegisterNum = value;
				this.SendPropertyChanged("RegisterNum");
				this.OnRegisterNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegisterState_DeptProcess", Storage="_DeptProcesses", ThisKey="RegisterTypeID", OtherKey="RegisterTypeID")]
	public EntitySet<DeptProcess> DeptProcesses
	{
		get
		{
			return this._DeptProcesses;
		}
		set
		{
			this._DeptProcesses.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_DeptProcesses(DeptProcess entity)
	{
		this.SendPropertyChanging();
		entity.RegisterState1 = this;
	}
	
	private void detach_DeptProcesses(DeptProcess entity)
	{
		this.SendPropertyChanging();
		entity.RegisterState1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.School")]
public partial class School : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _SchoolID;
	
	private string _SchoolName;
	
	private string _SchoolNumber;
	
	private string _Note;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSchoolIDChanging(System.Guid value);
    partial void OnSchoolIDChanged();
    partial void OnSchoolNameChanging(string value);
    partial void OnSchoolNameChanged();
    partial void OnSchoolNumberChanging(string value);
    partial void OnSchoolNumberChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
	
	public School()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid SchoolID
	{
		get
		{
			return this._SchoolID;
		}
		set
		{
			if ((this._SchoolID != value))
			{
				this.OnSchoolIDChanging(value);
				this.SendPropertyChanging();
				this._SchoolID = value;
				this.SendPropertyChanged("SchoolID");
				this.OnSchoolIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string SchoolName
	{
		get
		{
			return this._SchoolName;
		}
		set
		{
			if ((this._SchoolName != value))
			{
				this.OnSchoolNameChanging(value);
				this.SendPropertyChanging();
				this._SchoolName = value;
				this.SendPropertyChanged("SchoolName");
				this.OnSchoolNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolNumber", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string SchoolNumber
	{
		get
		{
			return this._SchoolNumber;
		}
		set
		{
			if ((this._SchoolNumber != value))
			{
				this.OnSchoolNumberChanging(value);
				this.SendPropertyChanging();
				this._SchoolNumber = value;
				this.SendPropertyChanged("SchoolNumber");
				this.OnSchoolNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(50)")]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this.OnNoteChanging(value);
				this.SendPropertyChanging();
				this._Note = value;
				this.SendPropertyChanged("Note");
				this.OnNoteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Secretary")]
public partial class Secretary : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _UserName;
	
	private System.Guid _DeptID;
	
	private System.Guid _UserID;
	
	private string _IsValidated;
	
	private string _RealName;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnDeptIDChanging(System.Guid value);
    partial void OnDeptIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnIsValidatedChanging(string value);
    partial void OnIsValidatedChanged();
    partial void OnRealNameChanging(string value);
    partial void OnRealNameChanged();
    #endregion
	
	public Secretary()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid DeptID
	{
		get
		{
			return this._DeptID;
		}
		set
		{
			if ((this._DeptID != value))
			{
				this.OnDeptIDChanging(value);
				this.SendPropertyChanging();
				this._DeptID = value;
				this.SendPropertyChanged("DeptID");
				this.OnDeptIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValidated", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string IsValidated
	{
		get
		{
			return this._IsValidated;
		}
		set
		{
			if ((this._IsValidated != value))
			{
				this.OnIsValidatedChanging(value);
				this.SendPropertyChanging();
				this._IsValidated = value;
				this.SendPropertyChanged("IsValidated");
				this.OnIsValidatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string RealName
	{
		get
		{
			return this._RealName;
		}
		set
		{
			if ((this._RealName != value))
			{
				this.OnRealNameChanging(value);
				this.SendPropertyChanging();
				this._RealName = value;
				this.SendPropertyChanged("RealName");
				this.OnRealNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _StudentID;
	
	private string _StudentIDCardID;
	
	private string _StudentName;
	
	private string _Note;
	
	private System.Guid _ClassID;
	
	private bool _IsAccountExisted;
	
	private string _IsInformationConfirmed;
	
	private EntitySet<NCREREGISTER> _NCREREGISTERs;
	
	private EntityRef<StudentDetail> _StudentDetail;
	
	private EntitySet<StuInfoChange> _StuInfoChanges;
	
	private EntityRef<Class> _Class;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIDChanging(System.Guid value);
    partial void OnStudentIDChanged();
    partial void OnStudentIDCardIDChanging(string value);
    partial void OnStudentIDCardIDChanged();
    partial void OnStudentNameChanging(string value);
    partial void OnStudentNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnClassIDChanging(System.Guid value);
    partial void OnClassIDChanged();
    partial void OnIsAccountExistedChanging(bool value);
    partial void OnIsAccountExistedChanged();
    partial void OnIsInformationConfirmedChanging(string value);
    partial void OnIsInformationConfirmedChanged();
    #endregion
	
	public Student()
	{
		this._NCREREGISTERs = new EntitySet<NCREREGISTER>(new Action<NCREREGISTER>(this.attach_NCREREGISTERs), new Action<NCREREGISTER>(this.detach_NCREREGISTERs));
		this._StudentDetail = default(EntityRef<StudentDetail>);
		this._StuInfoChanges = new EntitySet<StuInfoChange>(new Action<StuInfoChange>(this.attach_StuInfoChanges), new Action<StuInfoChange>(this.detach_StuInfoChanges));
		this._Class = default(EntityRef<Class>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				this.OnStudentIDChanging(value);
				this.SendPropertyChanging();
				this._StudentID = value;
				this.SendPropertyChanged("StudentID");
				this.OnStudentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentIDCardID", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string StudentIDCardID
	{
		get
		{
			return this._StudentIDCardID;
		}
		set
		{
			if ((this._StudentIDCardID != value))
			{
				this.OnStudentIDCardIDChanging(value);
				this.SendPropertyChanging();
				this._StudentIDCardID = value;
				this.SendPropertyChanged("StudentIDCardID");
				this.OnStudentIDCardIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string StudentName
	{
		get
		{
			return this._StudentName;
		}
		set
		{
			if ((this._StudentName != value))
			{
				this.OnStudentNameChanging(value);
				this.SendPropertyChanging();
				this._StudentName = value;
				this.SendPropertyChanged("StudentName");
				this.OnStudentNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(200)")]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this.OnNoteChanging(value);
				this.SendPropertyChanging();
				this._Note = value;
				this.SendPropertyChanged("Note");
				this.OnNoteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ClassID
	{
		get
		{
			return this._ClassID;
		}
		set
		{
			if ((this._ClassID != value))
			{
				if (this._Class.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnClassIDChanging(value);
				this.SendPropertyChanging();
				this._ClassID = value;
				this.SendPropertyChanged("ClassID");
				this.OnClassIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAccountExisted", DbType="Bit NOT NULL")]
	public bool IsAccountExisted
	{
		get
		{
			return this._IsAccountExisted;
		}
		set
		{
			if ((this._IsAccountExisted != value))
			{
				this.OnIsAccountExistedChanging(value);
				this.SendPropertyChanging();
				this._IsAccountExisted = value;
				this.SendPropertyChanged("IsAccountExisted");
				this.OnIsAccountExistedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInformationConfirmed", DbType="NVarChar(5)")]
	public string IsInformationConfirmed
	{
		get
		{
			return this._IsInformationConfirmed;
		}
		set
		{
			if ((this._IsInformationConfirmed != value))
			{
				this.OnIsInformationConfirmedChanging(value);
				this.SendPropertyChanging();
				this._IsInformationConfirmed = value;
				this.SendPropertyChanged("IsInformationConfirmed");
				this.OnIsInformationConfirmedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_NCREREGISTER", Storage="_NCREREGISTERs", ThisKey="StudentID", OtherKey="StudentID")]
	public EntitySet<NCREREGISTER> NCREREGISTERs
	{
		get
		{
			return this._NCREREGISTERs;
		}
		set
		{
			this._NCREREGISTERs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentDetail", Storage="_StudentDetail", ThisKey="StudentID", OtherKey="StudentID", IsUnique=true, IsForeignKey=false)]
	public StudentDetail StudentDetail
	{
		get
		{
			return this._StudentDetail.Entity;
		}
		set
		{
			StudentDetail previousValue = this._StudentDetail.Entity;
			if (((previousValue != value) 
						|| (this._StudentDetail.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StudentDetail.Entity = null;
					previousValue.Student = null;
				}
				this._StudentDetail.Entity = value;
				if ((value != null))
				{
					value.Student = this;
				}
				this.SendPropertyChanged("StudentDetail");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StuInfoChange", Storage="_StuInfoChanges", ThisKey="StudentID", OtherKey="stuID")]
	public EntitySet<StuInfoChange> StuInfoChanges
	{
		get
		{
			return this._StuInfoChanges;
		}
		set
		{
			this._StuInfoChanges.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Student", Storage="_Class", ThisKey="ClassID", OtherKey="ClassID", IsForeignKey=true)]
	public Class Class
	{
		get
		{
			return this._Class.Entity;
		}
		set
		{
			Class previousValue = this._Class.Entity;
			if (((previousValue != value) 
						|| (this._Class.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Class.Entity = null;
					previousValue.Students.Remove(this);
				}
				this._Class.Entity = value;
				if ((value != null))
				{
					value.Students.Add(this);
					this._ClassID = value.ClassID;
				}
				else
				{
					this._ClassID = default(System.Guid);
				}
				this.SendPropertyChanged("Class");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_NCREREGISTERs(NCREREGISTER entity)
	{
		this.SendPropertyChanging();
		entity.Student = this;
	}
	
	private void detach_NCREREGISTERs(NCREREGISTER entity)
	{
		this.SendPropertyChanging();
		entity.Student = null;
	}
	
	private void attach_StuInfoChanges(StuInfoChange entity)
	{
		this.SendPropertyChanging();
		entity.Student = this;
	}
	
	private void detach_StuInfoChanges(StuInfoChange entity)
	{
		this.SendPropertyChanging();
		entity.Student = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentDetail")]
public partial class StudentDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _StudentID;
	
	private string _DeptName;
	
	private string _MajorName;
	
	private string _ClassName;
	
	private string _GradeName;
	
	private string _NationalityName;
	
	private string _Gender;
	
	private string _CardID;
	
	private string _UniversityID;
	
	private string _BirthDate;
	
	private string _StudentName;
	
	private string _ImportedStudentInfo;
	
	private string _jg;
	
	private string _lyd;
	
	private string _xz;
	
	private string _cc;
	
	private string _jtszd;
	
	private string _IsInfomationConfirmed;
	
	private bool _IsGraduated;
	
	private EntitySet<EngGrade> _EngGrades;
	
	private EntitySet<EngRedo> _EngRedos;
	
	private EntitySet<MandarinGrade> _MandarinGrades;
	
	private EntitySet<mandarinRegister> _mandarinRegisters;
	
	private EntitySet<mhkFinalReg> _mhkFinalRegs;
	
	private EntitySet<MHKGrade> _MHKGrades;
	
	private EntitySet<MHKStuReg> _MHKStuRegs;
	
	private EntitySet<NCREGrade> _NCREGrades;
	
	private EntitySet<StuReg> _StuRegs;
	
	private EntityRef<Student> _Student;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIDChanging(System.Guid value);
    partial void OnStudentIDChanged();
    partial void OnDeptNameChanging(string value);
    partial void OnDeptNameChanged();
    partial void OnMajorNameChanging(string value);
    partial void OnMajorNameChanged();
    partial void OnClassNameChanging(string value);
    partial void OnClassNameChanged();
    partial void OnGradeNameChanging(string value);
    partial void OnGradeNameChanged();
    partial void OnNationalityNameChanging(string value);
    partial void OnNationalityNameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnCardIDChanging(string value);
    partial void OnCardIDChanged();
    partial void OnUniversityIDChanging(string value);
    partial void OnUniversityIDChanged();
    partial void OnBirthDateChanging(string value);
    partial void OnBirthDateChanged();
    partial void OnStudentNameChanging(string value);
    partial void OnStudentNameChanged();
    partial void OnImportedStudentInfoChanging(string value);
    partial void OnImportedStudentInfoChanged();
    partial void OnjgChanging(string value);
    partial void OnjgChanged();
    partial void OnlydChanging(string value);
    partial void OnlydChanged();
    partial void OnxzChanging(string value);
    partial void OnxzChanged();
    partial void OnccChanging(string value);
    partial void OnccChanged();
    partial void OnjtszdChanging(string value);
    partial void OnjtszdChanged();
    partial void OnIsInfomationConfirmedChanging(string value);
    partial void OnIsInfomationConfirmedChanged();
    partial void OnIsGraduatedChanging(bool value);
    partial void OnIsGraduatedChanged();
    #endregion
	
	public StudentDetail()
	{
		this._EngGrades = new EntitySet<EngGrade>(new Action<EngGrade>(this.attach_EngGrades), new Action<EngGrade>(this.detach_EngGrades));
		this._EngRedos = new EntitySet<EngRedo>(new Action<EngRedo>(this.attach_EngRedos), new Action<EngRedo>(this.detach_EngRedos));
		this._MandarinGrades = new EntitySet<MandarinGrade>(new Action<MandarinGrade>(this.attach_MandarinGrades), new Action<MandarinGrade>(this.detach_MandarinGrades));
		this._mandarinRegisters = new EntitySet<mandarinRegister>(new Action<mandarinRegister>(this.attach_mandarinRegisters), new Action<mandarinRegister>(this.detach_mandarinRegisters));
		this._mhkFinalRegs = new EntitySet<mhkFinalReg>(new Action<mhkFinalReg>(this.attach_mhkFinalRegs), new Action<mhkFinalReg>(this.detach_mhkFinalRegs));
		this._MHKGrades = new EntitySet<MHKGrade>(new Action<MHKGrade>(this.attach_MHKGrades), new Action<MHKGrade>(this.detach_MHKGrades));
		this._MHKStuRegs = new EntitySet<MHKStuReg>(new Action<MHKStuReg>(this.attach_MHKStuRegs), new Action<MHKStuReg>(this.detach_MHKStuRegs));
		this._NCREGrades = new EntitySet<NCREGrade>(new Action<NCREGrade>(this.attach_NCREGrades), new Action<NCREGrade>(this.detach_NCREGrades));
		this._StuRegs = new EntitySet<StuReg>(new Action<StuReg>(this.attach_StuRegs), new Action<StuReg>(this.detach_StuRegs));
		this._Student = default(EntityRef<Student>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				if (this._Student.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStudentIDChanging(value);
				this.SendPropertyChanging();
				this._StudentID = value;
				this.SendPropertyChanged("StudentID");
				this.OnStudentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptName", DbType="NVarChar(50)")]
	public string DeptName
	{
		get
		{
			return this._DeptName;
		}
		set
		{
			if ((this._DeptName != value))
			{
				this.OnDeptNameChanging(value);
				this.SendPropertyChanging();
				this._DeptName = value;
				this.SendPropertyChanged("DeptName");
				this.OnDeptNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(50)")]
	public string MajorName
	{
		get
		{
			return this._MajorName;
		}
		set
		{
			if ((this._MajorName != value))
			{
				this.OnMajorNameChanging(value);
				this.SendPropertyChanging();
				this._MajorName = value;
				this.SendPropertyChanged("MajorName");
				this.OnMajorNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(50)")]
	public string ClassName
	{
		get
		{
			return this._ClassName;
		}
		set
		{
			if ((this._ClassName != value))
			{
				this.OnClassNameChanging(value);
				this.SendPropertyChanging();
				this._ClassName = value;
				this.SendPropertyChanged("ClassName");
				this.OnClassNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="NVarChar(10)")]
	public string GradeName
	{
		get
		{
			return this._GradeName;
		}
		set
		{
			if ((this._GradeName != value))
			{
				this.OnGradeNameChanging(value);
				this.SendPropertyChanging();
				this._GradeName = value;
				this.SendPropertyChanged("GradeName");
				this.OnGradeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityName", DbType="NVarChar(10)")]
	public string NationalityName
	{
		get
		{
			return this._NationalityName;
		}
		set
		{
			if ((this._NationalityName != value))
			{
				this.OnNationalityNameChanging(value);
				this.SendPropertyChanging();
				this._NationalityName = value;
				this.SendPropertyChanged("NationalityName");
				this.OnNationalityNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(2)")]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardID", DbType="NVarChar(20)")]
	public string CardID
	{
		get
		{
			return this._CardID;
		}
		set
		{
			if ((this._CardID != value))
			{
				this.OnCardIDChanging(value);
				this.SendPropertyChanging();
				this._CardID = value;
				this.SendPropertyChanged("CardID");
				this.OnCardIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniversityID", DbType="NVarChar(20)")]
	public string UniversityID
	{
		get
		{
			return this._UniversityID;
		}
		set
		{
			if ((this._UniversityID != value))
			{
				this.OnUniversityIDChanging(value);
				this.SendPropertyChanging();
				this._UniversityID = value;
				this.SendPropertyChanged("UniversityID");
				this.OnUniversityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(10)")]
	public string BirthDate
	{
		get
		{
			return this._BirthDate;
		}
		set
		{
			if ((this._BirthDate != value))
			{
				this.OnBirthDateChanging(value);
				this.SendPropertyChanging();
				this._BirthDate = value;
				this.SendPropertyChanged("BirthDate");
				this.OnBirthDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="NVarChar(50)")]
	public string StudentName
	{
		get
		{
			return this._StudentName;
		}
		set
		{
			if ((this._StudentName != value))
			{
				this.OnStudentNameChanging(value);
				this.SendPropertyChanging();
				this._StudentName = value;
				this.SendPropertyChanged("StudentName");
				this.OnStudentNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportedStudentInfo", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string ImportedStudentInfo
	{
		get
		{
			return this._ImportedStudentInfo;
		}
		set
		{
			if ((this._ImportedStudentInfo != value))
			{
				this.OnImportedStudentInfoChanging(value);
				this.SendPropertyChanging();
				this._ImportedStudentInfo = value;
				this.SendPropertyChanged("ImportedStudentInfo");
				this.OnImportedStudentInfoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jg", DbType="NVarChar(30)")]
	public string jg
	{
		get
		{
			return this._jg;
		}
		set
		{
			if ((this._jg != value))
			{
				this.OnjgChanging(value);
				this.SendPropertyChanging();
				this._jg = value;
				this.SendPropertyChanged("jg");
				this.OnjgChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lyd", DbType="NVarChar(30)")]
	public string lyd
	{
		get
		{
			return this._lyd;
		}
		set
		{
			if ((this._lyd != value))
			{
				this.OnlydChanging(value);
				this.SendPropertyChanging();
				this._lyd = value;
				this.SendPropertyChanged("lyd");
				this.OnlydChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xz", DbType="NVarChar(2)")]
	public string xz
	{
		get
		{
			return this._xz;
		}
		set
		{
			if ((this._xz != value))
			{
				this.OnxzChanging(value);
				this.SendPropertyChanging();
				this._xz = value;
				this.SendPropertyChanged("xz");
				this.OnxzChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cc", DbType="NVarChar(4)")]
	public string cc
	{
		get
		{
			return this._cc;
		}
		set
		{
			if ((this._cc != value))
			{
				this.OnccChanging(value);
				this.SendPropertyChanging();
				this._cc = value;
				this.SendPropertyChanged("cc");
				this.OnccChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jtszd", DbType="NVarChar(200)")]
	public string jtszd
	{
		get
		{
			return this._jtszd;
		}
		set
		{
			if ((this._jtszd != value))
			{
				this.OnjtszdChanging(value);
				this.SendPropertyChanging();
				this._jtszd = value;
				this.SendPropertyChanged("jtszd");
				this.OnjtszdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInfomationConfirmed", DbType="NVarChar(5)")]
	public string IsInfomationConfirmed
	{
		get
		{
			return this._IsInfomationConfirmed;
		}
		set
		{
			if ((this._IsInfomationConfirmed != value))
			{
				this.OnIsInfomationConfirmedChanging(value);
				this.SendPropertyChanging();
				this._IsInfomationConfirmed = value;
				this.SendPropertyChanged("IsInfomationConfirmed");
				this.OnIsInfomationConfirmedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGraduated", DbType="Bit NOT NULL")]
	public bool IsGraduated
	{
		get
		{
			return this._IsGraduated;
		}
		set
		{
			if ((this._IsGraduated != value))
			{
				this.OnIsGraduatedChanging(value);
				this.SendPropertyChanging();
				this._IsGraduated = value;
				this.SendPropertyChanged("IsGraduated");
				this.OnIsGraduatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_EngGrade", Storage="_EngGrades", ThisKey="StudentID", OtherKey="StudentID")]
	public EntitySet<EngGrade> EngGrades
	{
		get
		{
			return this._EngGrades;
		}
		set
		{
			this._EngGrades.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_EngRedo", Storage="_EngRedos", ThisKey="StudentID", OtherKey="StuID")]
	public EntitySet<EngRedo> EngRedos
	{
		get
		{
			return this._EngRedos;
		}
		set
		{
			this._EngRedos.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_MandarinGrade", Storage="_MandarinGrades", ThisKey="StudentID", OtherKey="StudentID")]
	public EntitySet<MandarinGrade> MandarinGrades
	{
		get
		{
			return this._MandarinGrades;
		}
		set
		{
			this._MandarinGrades.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_mandarinRegister", Storage="_mandarinRegisters", ThisKey="StudentID", OtherKey="StudentID")]
	public EntitySet<mandarinRegister> mandarinRegisters
	{
		get
		{
			return this._mandarinRegisters;
		}
		set
		{
			this._mandarinRegisters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_mhkFinalReg", Storage="_mhkFinalRegs", ThisKey="StudentID", OtherKey="StuID")]
	public EntitySet<mhkFinalReg> mhkFinalRegs
	{
		get
		{
			return this._mhkFinalRegs;
		}
		set
		{
			this._mhkFinalRegs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_MHKGrade", Storage="_MHKGrades", ThisKey="StudentID", OtherKey="StudentID")]
	public EntitySet<MHKGrade> MHKGrades
	{
		get
		{
			return this._MHKGrades;
		}
		set
		{
			this._MHKGrades.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_MHKStuReg", Storage="_MHKStuRegs", ThisKey="StudentID", OtherKey="StuID")]
	public EntitySet<MHKStuReg> MHKStuRegs
	{
		get
		{
			return this._MHKStuRegs;
		}
		set
		{
			this._MHKStuRegs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_NCREGrade", Storage="_NCREGrades", ThisKey="StudentID", OtherKey="StudentID")]
	public EntitySet<NCREGrade> NCREGrades
	{
		get
		{
			return this._NCREGrades;
		}
		set
		{
			this._NCREGrades.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_StuReg", Storage="_StuRegs", ThisKey="StudentID", OtherKey="StuID")]
	public EntitySet<StuReg> StuRegs
	{
		get
		{
			return this._StuRegs;
		}
		set
		{
			this._StuRegs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentDetail", Storage="_Student", ThisKey="StudentID", OtherKey="StudentID", IsForeignKey=true)]
	public Student Student
	{
		get
		{
			return this._Student.Entity;
		}
		set
		{
			Student previousValue = this._Student.Entity;
			if (((previousValue != value) 
						|| (this._Student.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Student.Entity = null;
					previousValue.StudentDetail = null;
				}
				this._Student.Entity = value;
				if ((value != null))
				{
					value.StudentDetail = this;
					this._StudentID = value.StudentID;
				}
				else
				{
					this._StudentID = default(System.Guid);
				}
				this.SendPropertyChanged("Student");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_EngGrades(EngGrade entity)
	{
		this.SendPropertyChanging();
		entity.StudentDetail = this;
	}
	
	private void detach_EngGrades(EngGrade entity)
	{
		this.SendPropertyChanging();
		entity.StudentDetail = null;
	}
	
	private void attach_EngRedos(EngRedo entity)
	{
		this.SendPropertyChanging();
		entity.StudentDetail = this;
	}
	
	private void detach_EngRedos(EngRedo entity)
	{
		this.SendPropertyChanging();
		entity.StudentDetail = null;
	}
	
	private void attach_MandarinGrades(MandarinGrade entity)
	{
		this.SendPropertyChanging();
		entity.StudentDetail = this;
	}
	
	private void detach_MandarinGrades(MandarinGrade entity)
	{
		this.SendPropertyChanging();
		entity.StudentDetail = null;
	}
	
	private void attach_mandarinRegisters(mandarinRegister entity)
	{
		this.SendPropertyChanging();
		entity.StudentDetail = this;
	}
	
	private void detach_mandarinRegisters(mandarinRegister entity)
	{
		this.SendPropertyChanging();
		entity.StudentDetail = null;
	}
	
	private void attach_mhkFinalRegs(mhkFinalReg entity)
	{
		this.SendPropertyChanging();
		entity.StudentDetail = this;
	}
	
	private void detach_mhkFinalRegs(mhkFinalReg entity)
	{
		this.SendPropertyChanging();
		entity.StudentDetail = null;
	}
	
	private void attach_MHKGrades(MHKGrade entity)
	{
		this.SendPropertyChanging();
		entity.StudentDetail = this;
	}
	
	private void detach_MHKGrades(MHKGrade entity)
	{
		this.SendPropertyChanging();
		entity.StudentDetail = null;
	}
	
	private void attach_MHKStuRegs(MHKStuReg entity)
	{
		this.SendPropertyChanging();
		entity.StudentDetail = this;
	}
	
	private void detach_MHKStuRegs(MHKStuReg entity)
	{
		this.SendPropertyChanging();
		entity.StudentDetail = null;
	}
	
	private void attach_NCREGrades(NCREGrade entity)
	{
		this.SendPropertyChanging();
		entity.StudentDetail = this;
	}
	
	private void detach_NCREGrades(NCREGrade entity)
	{
		this.SendPropertyChanging();
		entity.StudentDetail = null;
	}
	
	private void attach_StuRegs(StuReg entity)
	{
		this.SendPropertyChanging();
		entity.StudentDetail = this;
	}
	
	private void detach_StuRegs(StuReg entity)
	{
		this.SendPropertyChanging();
		entity.StudentDetail = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StuInfoChange")]
public partial class StuInfoChange : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ChangeID;
	
	private System.Guid _stuID;
	
	private string _ChangeReason;
	
	private string _jwcIsChecked;
	
	private string _jwcNote;
	
	private string _DetailReason;
	
	private EntityRef<Student> _Student;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChangeIDChanging(System.Guid value);
    partial void OnChangeIDChanged();
    partial void OnstuIDChanging(System.Guid value);
    partial void OnstuIDChanged();
    partial void OnChangeReasonChanging(string value);
    partial void OnChangeReasonChanged();
    partial void OnjwcIsCheckedChanging(string value);
    partial void OnjwcIsCheckedChanged();
    partial void OnjwcNoteChanging(string value);
    partial void OnjwcNoteChanged();
    partial void OnDetailReasonChanging(string value);
    partial void OnDetailReasonChanged();
    #endregion
	
	public StuInfoChange()
	{
		this._Student = default(EntityRef<Student>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid ChangeID
	{
		get
		{
			return this._ChangeID;
		}
		set
		{
			if ((this._ChangeID != value))
			{
				this.OnChangeIDChanging(value);
				this.SendPropertyChanging();
				this._ChangeID = value;
				this.SendPropertyChanged("ChangeID");
				this.OnChangeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stuID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid stuID
	{
		get
		{
			return this._stuID;
		}
		set
		{
			if ((this._stuID != value))
			{
				if (this._Student.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnstuIDChanging(value);
				this.SendPropertyChanging();
				this._stuID = value;
				this.SendPropertyChanged("stuID");
				this.OnstuIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeReason", DbType="NVarChar(50)")]
	public string ChangeReason
	{
		get
		{
			return this._ChangeReason;
		}
		set
		{
			if ((this._ChangeReason != value))
			{
				this.OnChangeReasonChanging(value);
				this.SendPropertyChanging();
				this._ChangeReason = value;
				this.SendPropertyChanged("ChangeReason");
				this.OnChangeReasonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jwcIsChecked", DbType="NVarChar(6)")]
	public string jwcIsChecked
	{
		get
		{
			return this._jwcIsChecked;
		}
		set
		{
			if ((this._jwcIsChecked != value))
			{
				this.OnjwcIsCheckedChanging(value);
				this.SendPropertyChanging();
				this._jwcIsChecked = value;
				this.SendPropertyChanged("jwcIsChecked");
				this.OnjwcIsCheckedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jwcNote", DbType="NVarChar(50)")]
	public string jwcNote
	{
		get
		{
			return this._jwcNote;
		}
		set
		{
			if ((this._jwcNote != value))
			{
				this.OnjwcNoteChanging(value);
				this.SendPropertyChanging();
				this._jwcNote = value;
				this.SendPropertyChanged("jwcNote");
				this.OnjwcNoteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailReason", DbType="NVarChar(200)")]
	public string DetailReason
	{
		get
		{
			return this._DetailReason;
		}
		set
		{
			if ((this._DetailReason != value))
			{
				this.OnDetailReasonChanging(value);
				this.SendPropertyChanging();
				this._DetailReason = value;
				this.SendPropertyChanged("DetailReason");
				this.OnDetailReasonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StuInfoChange", Storage="_Student", ThisKey="stuID", OtherKey="StudentID", IsForeignKey=true)]
	public Student Student
	{
		get
		{
			return this._Student.Entity;
		}
		set
		{
			Student previousValue = this._Student.Entity;
			if (((previousValue != value) 
						|| (this._Student.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Student.Entity = null;
					previousValue.StuInfoChanges.Remove(this);
				}
				this._Student.Entity = value;
				if ((value != null))
				{
					value.StuInfoChanges.Add(this);
					this._stuID = value.StudentID;
				}
				else
				{
					this._stuID = default(System.Guid);
				}
				this.SendPropertyChanged("Student");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StuRegs")]
public partial class StuReg : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _TestRegisterID;
	
	private System.Guid _StuID;
	
	private System.Guid _SubID;
	
	private string _RegisterNum;
	
	private string _RegisterCampus;
	
	private string _RegLanLevel;
	
	private string _StudentName;
	
	private string _StudentGender;
	
	private string _StuEduLel;
	
	private string _StuEduLen;
	
	private string _StuNum;
	
	private string _StuDept;
	
	private string _StuMajor;
	
	private string _StuGrade;
	
	private string _StuClass;
	
	private string _StuIdentify;
	
	private string _BelongCampus;
	
	private System.Nullable<System.DateTime> _RegisterDate;
	
	private System.Nullable<System.DateTime> _RegisterMODIFYB;
	
	private System.Nullable<System.DateTime> _RegiserMODIFY2;
	
	private System.Nullable<System.DateTime> _RegisterMODIFY;
	
	private System.Nullable<System.DateTime> _Photo_MODI;
	
	private System.Nullable<decimal> _PHOTO_SIZE;
	
	private string _WaterAccount;
	
	private string _IsApproved;
	
	private bool _IsPayed;
	
	private string _CETRedoState;
	
	private EntityRef<llv> _llv;
	
	private EntityRef<StudentDetail> _StudentDetail;
	
	private EntityRef<TestRegister> _TestRegister;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestRegisterIDChanging(System.Guid value);
    partial void OnTestRegisterIDChanged();
    partial void OnStuIDChanging(System.Guid value);
    partial void OnStuIDChanged();
    partial void OnSubIDChanging(System.Guid value);
    partial void OnSubIDChanged();
    partial void OnRegisterNumChanging(string value);
    partial void OnRegisterNumChanged();
    partial void OnRegisterCampusChanging(string value);
    partial void OnRegisterCampusChanged();
    partial void OnRegLanLevelChanging(string value);
    partial void OnRegLanLevelChanged();
    partial void OnStudentNameChanging(string value);
    partial void OnStudentNameChanged();
    partial void OnStudentGenderChanging(string value);
    partial void OnStudentGenderChanged();
    partial void OnStuEduLelChanging(string value);
    partial void OnStuEduLelChanged();
    partial void OnStuEduLenChanging(string value);
    partial void OnStuEduLenChanged();
    partial void OnStuNumChanging(string value);
    partial void OnStuNumChanged();
    partial void OnStuDeptChanging(string value);
    partial void OnStuDeptChanged();
    partial void OnStuMajorChanging(string value);
    partial void OnStuMajorChanged();
    partial void OnStuGradeChanging(string value);
    partial void OnStuGradeChanged();
    partial void OnStuClassChanging(string value);
    partial void OnStuClassChanged();
    partial void OnStuIdentifyChanging(string value);
    partial void OnStuIdentifyChanged();
    partial void OnBelongCampusChanging(string value);
    partial void OnBelongCampusChanged();
    partial void OnRegisterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegisterDateChanged();
    partial void OnRegisterMODIFYBChanging(System.Nullable<System.DateTime> value);
    partial void OnRegisterMODIFYBChanged();
    partial void OnRegiserMODIFY2Changing(System.Nullable<System.DateTime> value);
    partial void OnRegiserMODIFY2Changed();
    partial void OnRegisterMODIFYChanging(System.Nullable<System.DateTime> value);
    partial void OnRegisterMODIFYChanged();
    partial void OnPhoto_MODIChanging(System.Nullable<System.DateTime> value);
    partial void OnPhoto_MODIChanged();
    partial void OnPHOTO_SIZEChanging(System.Nullable<decimal> value);
    partial void OnPHOTO_SIZEChanged();
    partial void OnWaterAccountChanging(string value);
    partial void OnWaterAccountChanged();
    partial void OnIsApprovedChanging(string value);
    partial void OnIsApprovedChanged();
    partial void OnIsPayedChanging(bool value);
    partial void OnIsPayedChanged();
    partial void OnCETRedoStateChanging(string value);
    partial void OnCETRedoStateChanged();
    #endregion
	
	public StuReg()
	{
		this._llv = default(EntityRef<llv>);
		this._StudentDetail = default(EntityRef<StudentDetail>);
		this._TestRegister = default(EntityRef<TestRegister>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				if (this._TestRegister.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTestRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._TestRegisterID = value;
				this.SendPropertyChanged("TestRegisterID");
				this.OnTestRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid StuID
	{
		get
		{
			return this._StuID;
		}
		set
		{
			if ((this._StuID != value))
			{
				if (this._StudentDetail.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStuIDChanging(value);
				this.SendPropertyChanging();
				this._StuID = value;
				this.SendPropertyChanged("StuID");
				this.OnStuIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid SubID
	{
		get
		{
			return this._SubID;
		}
		set
		{
			if ((this._SubID != value))
			{
				if (this._llv.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSubIDChanging(value);
				this.SendPropertyChanging();
				this._SubID = value;
				this.SendPropertyChanged("SubID");
				this.OnSubIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterNum", DbType="NVarChar(12)")]
	public string RegisterNum
	{
		get
		{
			return this._RegisterNum;
		}
		set
		{
			if ((this._RegisterNum != value))
			{
				this.OnRegisterNumChanging(value);
				this.SendPropertyChanging();
				this._RegisterNum = value;
				this.SendPropertyChanged("RegisterNum");
				this.OnRegisterNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterCampus", DbType="NVarChar(1)")]
	public string RegisterCampus
	{
		get
		{
			return this._RegisterCampus;
		}
		set
		{
			if ((this._RegisterCampus != value))
			{
				this.OnRegisterCampusChanging(value);
				this.SendPropertyChanging();
				this._RegisterCampus = value;
				this.SendPropertyChanged("RegisterCampus");
				this.OnRegisterCampusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegLanLevel", DbType="NVarChar(1)")]
	public string RegLanLevel
	{
		get
		{
			return this._RegLanLevel;
		}
		set
		{
			if ((this._RegLanLevel != value))
			{
				this.OnRegLanLevelChanging(value);
				this.SendPropertyChanging();
				this._RegLanLevel = value;
				this.SendPropertyChanged("RegLanLevel");
				this.OnRegLanLevelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="NVarChar(32)")]
	public string StudentName
	{
		get
		{
			return this._StudentName;
		}
		set
		{
			if ((this._StudentName != value))
			{
				this.OnStudentNameChanging(value);
				this.SendPropertyChanging();
				this._StudentName = value;
				this.SendPropertyChanged("StudentName");
				this.OnStudentNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentGender", DbType="NVarChar(2)")]
	public string StudentGender
	{
		get
		{
			return this._StudentGender;
		}
		set
		{
			if ((this._StudentGender != value))
			{
				this.OnStudentGenderChanging(value);
				this.SendPropertyChanging();
				this._StudentGender = value;
				this.SendPropertyChanged("StudentGender");
				this.OnStudentGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuEduLel", DbType="NVarChar(1)")]
	public string StuEduLel
	{
		get
		{
			return this._StuEduLel;
		}
		set
		{
			if ((this._StuEduLel != value))
			{
				this.OnStuEduLelChanging(value);
				this.SendPropertyChanging();
				this._StuEduLel = value;
				this.SendPropertyChanged("StuEduLel");
				this.OnStuEduLelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuEduLen", DbType="NVarChar(1)")]
	public string StuEduLen
	{
		get
		{
			return this._StuEduLen;
		}
		set
		{
			if ((this._StuEduLen != value))
			{
				this.OnStuEduLenChanging(value);
				this.SendPropertyChanging();
				this._StuEduLen = value;
				this.SendPropertyChanged("StuEduLen");
				this.OnStuEduLenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuNum", DbType="NVarChar(20)")]
	public string StuNum
	{
		get
		{
			return this._StuNum;
		}
		set
		{
			if ((this._StuNum != value))
			{
				this.OnStuNumChanging(value);
				this.SendPropertyChanging();
				this._StuNum = value;
				this.SendPropertyChanged("StuNum");
				this.OnStuNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuDept", DbType="NVarChar(3)")]
	public string StuDept
	{
		get
		{
			return this._StuDept;
		}
		set
		{
			if ((this._StuDept != value))
			{
				this.OnStuDeptChanging(value);
				this.SendPropertyChanging();
				this._StuDept = value;
				this.SendPropertyChanged("StuDept");
				this.OnStuDeptChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuMajor", DbType="NVarChar(6)")]
	public string StuMajor
	{
		get
		{
			return this._StuMajor;
		}
		set
		{
			if ((this._StuMajor != value))
			{
				this.OnStuMajorChanging(value);
				this.SendPropertyChanging();
				this._StuMajor = value;
				this.SendPropertyChanged("StuMajor");
				this.OnStuMajorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuGrade", DbType="NVarChar(2)")]
	public string StuGrade
	{
		get
		{
			return this._StuGrade;
		}
		set
		{
			if ((this._StuGrade != value))
			{
				this.OnStuGradeChanging(value);
				this.SendPropertyChanging();
				this._StuGrade = value;
				this.SendPropertyChanged("StuGrade");
				this.OnStuGradeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuClass", DbType="NVarChar(3)")]
	public string StuClass
	{
		get
		{
			return this._StuClass;
		}
		set
		{
			if ((this._StuClass != value))
			{
				this.OnStuClassChanging(value);
				this.SendPropertyChanging();
				this._StuClass = value;
				this.SendPropertyChanged("StuClass");
				this.OnStuClassChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuIdentify", DbType="NVarChar(20)")]
	public string StuIdentify
	{
		get
		{
			return this._StuIdentify;
		}
		set
		{
			if ((this._StuIdentify != value))
			{
				this.OnStuIdentifyChanging(value);
				this.SendPropertyChanging();
				this._StuIdentify = value;
				this.SendPropertyChanged("StuIdentify");
				this.OnStuIdentifyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BelongCampus", DbType="NVarChar(1)")]
	public string BelongCampus
	{
		get
		{
			return this._BelongCampus;
		}
		set
		{
			if ((this._BelongCampus != value))
			{
				this.OnBelongCampusChanging(value);
				this.SendPropertyChanging();
				this._BelongCampus = value;
				this.SendPropertyChanged("BelongCampus");
				this.OnBelongCampusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> RegisterDate
	{
		get
		{
			return this._RegisterDate;
		}
		set
		{
			if ((this._RegisterDate != value))
			{
				this.OnRegisterDateChanging(value);
				this.SendPropertyChanging();
				this._RegisterDate = value;
				this.SendPropertyChanged("RegisterDate");
				this.OnRegisterDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterMODIFYB", DbType="DateTime")]
	public System.Nullable<System.DateTime> RegisterMODIFYB
	{
		get
		{
			return this._RegisterMODIFYB;
		}
		set
		{
			if ((this._RegisterMODIFYB != value))
			{
				this.OnRegisterMODIFYBChanging(value);
				this.SendPropertyChanging();
				this._RegisterMODIFYB = value;
				this.SendPropertyChanged("RegisterMODIFYB");
				this.OnRegisterMODIFYBChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegiserMODIFY2", DbType="DateTime")]
	public System.Nullable<System.DateTime> RegiserMODIFY2
	{
		get
		{
			return this._RegiserMODIFY2;
		}
		set
		{
			if ((this._RegiserMODIFY2 != value))
			{
				this.OnRegiserMODIFY2Changing(value);
				this.SendPropertyChanging();
				this._RegiserMODIFY2 = value;
				this.SendPropertyChanged("RegiserMODIFY2");
				this.OnRegiserMODIFY2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterMODIFY", DbType="DateTime")]
	public System.Nullable<System.DateTime> RegisterMODIFY
	{
		get
		{
			return this._RegisterMODIFY;
		}
		set
		{
			if ((this._RegisterMODIFY != value))
			{
				this.OnRegisterMODIFYChanging(value);
				this.SendPropertyChanging();
				this._RegisterMODIFY = value;
				this.SendPropertyChanged("RegisterMODIFY");
				this.OnRegisterMODIFYChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo_MODI", DbType="DateTime")]
	public System.Nullable<System.DateTime> Photo_MODI
	{
		get
		{
			return this._Photo_MODI;
		}
		set
		{
			if ((this._Photo_MODI != value))
			{
				this.OnPhoto_MODIChanging(value);
				this.SendPropertyChanging();
				this._Photo_MODI = value;
				this.SendPropertyChanged("Photo_MODI");
				this.OnPhoto_MODIChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHOTO_SIZE", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> PHOTO_SIZE
	{
		get
		{
			return this._PHOTO_SIZE;
		}
		set
		{
			if ((this._PHOTO_SIZE != value))
			{
				this.OnPHOTO_SIZEChanging(value);
				this.SendPropertyChanging();
				this._PHOTO_SIZE = value;
				this.SendPropertyChanged("PHOTO_SIZE");
				this.OnPHOTO_SIZEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaterAccount", DbType="NVarChar(5)")]
	public string WaterAccount
	{
		get
		{
			return this._WaterAccount;
		}
		set
		{
			if ((this._WaterAccount != value))
			{
				this.OnWaterAccountChanging(value);
				this.SendPropertyChanging();
				this._WaterAccount = value;
				this.SendPropertyChanged("WaterAccount");
				this.OnWaterAccountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
	public string IsApproved
	{
		get
		{
			return this._IsApproved;
		}
		set
		{
			if ((this._IsApproved != value))
			{
				this.OnIsApprovedChanging(value);
				this.SendPropertyChanging();
				this._IsApproved = value;
				this.SendPropertyChanged("IsApproved");
				this.OnIsApprovedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPayed", DbType="Bit NOT NULL")]
	public bool IsPayed
	{
		get
		{
			return this._IsPayed;
		}
		set
		{
			if ((this._IsPayed != value))
			{
				this.OnIsPayedChanging(value);
				this.SendPropertyChanging();
				this._IsPayed = value;
				this.SendPropertyChanged("IsPayed");
				this.OnIsPayedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CETRedoState", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string CETRedoState
	{
		get
		{
			return this._CETRedoState;
		}
		set
		{
			if ((this._CETRedoState != value))
			{
				this.OnCETRedoStateChanging(value);
				this.SendPropertyChanging();
				this._CETRedoState = value;
				this.SendPropertyChanged("CETRedoState");
				this.OnCETRedoStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="llv_StuReg", Storage="_llv", ThisKey="SubID", OtherKey="llv_ID", IsForeignKey=true)]
	public llv llv
	{
		get
		{
			return this._llv.Entity;
		}
		set
		{
			llv previousValue = this._llv.Entity;
			if (((previousValue != value) 
						|| (this._llv.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._llv.Entity = null;
					previousValue.StuRegs.Remove(this);
				}
				this._llv.Entity = value;
				if ((value != null))
				{
					value.StuRegs.Add(this);
					this._SubID = value.llv_ID;
				}
				else
				{
					this._SubID = default(System.Guid);
				}
				this.SendPropertyChanged("llv");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_StuReg", Storage="_StudentDetail", ThisKey="StuID", OtherKey="StudentID", IsForeignKey=true)]
	public StudentDetail StudentDetail
	{
		get
		{
			return this._StudentDetail.Entity;
		}
		set
		{
			StudentDetail previousValue = this._StudentDetail.Entity;
			if (((previousValue != value) 
						|| (this._StudentDetail.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StudentDetail.Entity = null;
					previousValue.StuRegs.Remove(this);
				}
				this._StudentDetail.Entity = value;
				if ((value != null))
				{
					value.StuRegs.Add(this);
					this._StuID = value.StudentID;
				}
				else
				{
					this._StuID = default(System.Guid);
				}
				this.SendPropertyChanged("StudentDetail");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestRegister_StuReg", Storage="_TestRegister", ThisKey="TestRegisterID", OtherKey="TestRegisterID", IsForeignKey=true)]
	public TestRegister TestRegister
	{
		get
		{
			return this._TestRegister.Entity;
		}
		set
		{
			TestRegister previousValue = this._TestRegister.Entity;
			if (((previousValue != value) 
						|| (this._TestRegister.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TestRegister.Entity = null;
					previousValue.StuRegs.Remove(this);
				}
				this._TestRegister.Entity = value;
				if ((value != null))
				{
					value.StuRegs.Add(this);
					this._TestRegisterID = value.TestRegisterID;
				}
				else
				{
					this._TestRegisterID = default(System.Guid);
				}
				this.SendPropertyChanged("TestRegister");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Test")]
public partial class Test : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _TestTypeID;
	
	private string _TestTypeName;
	
	private EntitySet<TestRegister> _TestRegisters;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestTypeIDChanging(System.Guid value);
    partial void OnTestTypeIDChanged();
    partial void OnTestTypeNameChanging(string value);
    partial void OnTestTypeNameChanged();
    #endregion
	
	public Test()
	{
		this._TestRegisters = new EntitySet<TestRegister>(new Action<TestRegister>(this.attach_TestRegisters), new Action<TestRegister>(this.detach_TestRegisters));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestTypeID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid TestTypeID
	{
		get
		{
			return this._TestTypeID;
		}
		set
		{
			if ((this._TestTypeID != value))
			{
				this.OnTestTypeIDChanging(value);
				this.SendPropertyChanging();
				this._TestTypeID = value;
				this.SendPropertyChanged("TestTypeID");
				this.OnTestTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string TestTypeName
	{
		get
		{
			return this._TestTypeName;
		}
		set
		{
			if ((this._TestTypeName != value))
			{
				this.OnTestTypeNameChanging(value);
				this.SendPropertyChanging();
				this._TestTypeName = value;
				this.SendPropertyChanged("TestTypeName");
				this.OnTestTypeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Test_TestRegister", Storage="_TestRegisters", ThisKey="TestTypeID", OtherKey="TestTypeID")]
	public EntitySet<TestRegister> TestRegisters
	{
		get
		{
			return this._TestRegisters;
		}
		set
		{
			this._TestRegisters.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TestRegisters(TestRegister entity)
	{
		this.SendPropertyChanging();
		entity.Test = this;
	}
	
	private void detach_TestRegisters(TestRegister entity)
	{
		this.SendPropertyChanging();
		entity.Test = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestRegister")]
public partial class TestRegister : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _TestTypeID;
	
	private System.Guid _TestRegisterID;
	
	private System.Nullable<System.DateTime> _StartDate;
	
	private System.Nullable<System.DateTime> _EndDate;
	
	private string _RegisterName;
	
	private string _State;
	
	private System.Nullable<int> _RegisterNum;
	
	private EntitySet<EngGrade> _EngGrades;
	
	private EntitySet<EngRedo> _EngRedos;
	
	private EntitySet<MandarinGrade> _MandarinGrades;
	
	private EntitySet<mhkFinalReg> _mhkFinalRegs;
	
	private EntitySet<MHKGrade> _MHKGrades;
	
	private EntitySet<NCREINFO> _NCREINFOs;
	
	private EntitySet<NCRESUBJECT> _NCRESUBJECTs;
	
	private EntitySet<RegisterProcess> _RegisterProcesses;
	
	private EntitySet<StuReg> _StuRegs;
	
	private EntityRef<Test> _Test;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestTypeIDChanging(System.Guid value);
    partial void OnTestTypeIDChanged();
    partial void OnTestRegisterIDChanging(System.Guid value);
    partial void OnTestRegisterIDChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnRegisterNameChanging(string value);
    partial void OnRegisterNameChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnRegisterNumChanging(System.Nullable<int> value);
    partial void OnRegisterNumChanged();
    #endregion
	
	public TestRegister()
	{
		this._EngGrades = new EntitySet<EngGrade>(new Action<EngGrade>(this.attach_EngGrades), new Action<EngGrade>(this.detach_EngGrades));
		this._EngRedos = new EntitySet<EngRedo>(new Action<EngRedo>(this.attach_EngRedos), new Action<EngRedo>(this.detach_EngRedos));
		this._MandarinGrades = new EntitySet<MandarinGrade>(new Action<MandarinGrade>(this.attach_MandarinGrades), new Action<MandarinGrade>(this.detach_MandarinGrades));
		this._mhkFinalRegs = new EntitySet<mhkFinalReg>(new Action<mhkFinalReg>(this.attach_mhkFinalRegs), new Action<mhkFinalReg>(this.detach_mhkFinalRegs));
		this._MHKGrades = new EntitySet<MHKGrade>(new Action<MHKGrade>(this.attach_MHKGrades), new Action<MHKGrade>(this.detach_MHKGrades));
		this._NCREINFOs = new EntitySet<NCREINFO>(new Action<NCREINFO>(this.attach_NCREINFOs), new Action<NCREINFO>(this.detach_NCREINFOs));
		this._NCRESUBJECTs = new EntitySet<NCRESUBJECT>(new Action<NCRESUBJECT>(this.attach_NCRESUBJECTs), new Action<NCRESUBJECT>(this.detach_NCRESUBJECTs));
		this._RegisterProcesses = new EntitySet<RegisterProcess>(new Action<RegisterProcess>(this.attach_RegisterProcesses), new Action<RegisterProcess>(this.detach_RegisterProcesses));
		this._StuRegs = new EntitySet<StuReg>(new Action<StuReg>(this.attach_StuRegs), new Action<StuReg>(this.detach_StuRegs));
		this._Test = default(EntityRef<Test>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestTypeID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid TestTypeID
	{
		get
		{
			return this._TestTypeID;
		}
		set
		{
			if ((this._TestTypeID != value))
			{
				if (this._Test.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTestTypeIDChanging(value);
				this.SendPropertyChanging();
				this._TestTypeID = value;
				this.SendPropertyChanged("TestTypeID");
				this.OnTestTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				this.OnTestRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._TestRegisterID = value;
				this.SendPropertyChanged("TestRegisterID");
				this.OnTestRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterName", DbType="NVarChar(50)")]
	public string RegisterName
	{
		get
		{
			return this._RegisterName;
		}
		set
		{
			if ((this._RegisterName != value))
			{
				this.OnRegisterNameChanging(value);
				this.SendPropertyChanging();
				this._RegisterName = value;
				this.SendPropertyChanged("RegisterName");
				this.OnRegisterNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string State
	{
		get
		{
			return this._State;
		}
		set
		{
			if ((this._State != value))
			{
				this.OnStateChanging(value);
				this.SendPropertyChanging();
				this._State = value;
				this.SendPropertyChanged("State");
				this.OnStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterNum", DbType="Int")]
	public System.Nullable<int> RegisterNum
	{
		get
		{
			return this._RegisterNum;
		}
		set
		{
			if ((this._RegisterNum != value))
			{
				this.OnRegisterNumChanging(value);
				this.SendPropertyChanging();
				this._RegisterNum = value;
				this.SendPropertyChanged("RegisterNum");
				this.OnRegisterNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestRegister_EngGrade", Storage="_EngGrades", ThisKey="TestRegisterID", OtherKey="TestRegisterID")]
	public EntitySet<EngGrade> EngGrades
	{
		get
		{
			return this._EngGrades;
		}
		set
		{
			this._EngGrades.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestRegister_EngRedo", Storage="_EngRedos", ThisKey="TestRegisterID", OtherKey="TestRegisterID")]
	public EntitySet<EngRedo> EngRedos
	{
		get
		{
			return this._EngRedos;
		}
		set
		{
			this._EngRedos.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestRegister_MandarinGrade", Storage="_MandarinGrades", ThisKey="TestRegisterID", OtherKey="TestRegisterID")]
	public EntitySet<MandarinGrade> MandarinGrades
	{
		get
		{
			return this._MandarinGrades;
		}
		set
		{
			this._MandarinGrades.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestRegister_mhkFinalReg", Storage="_mhkFinalRegs", ThisKey="TestRegisterID", OtherKey="TestRegisterID")]
	public EntitySet<mhkFinalReg> mhkFinalRegs
	{
		get
		{
			return this._mhkFinalRegs;
		}
		set
		{
			this._mhkFinalRegs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestRegister_MHKGrade", Storage="_MHKGrades", ThisKey="TestRegisterID", OtherKey="TestRegisterID")]
	public EntitySet<MHKGrade> MHKGrades
	{
		get
		{
			return this._MHKGrades;
		}
		set
		{
			this._MHKGrades.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestRegister_NCREINFO", Storage="_NCREINFOs", ThisKey="TestRegisterID", OtherKey="TestRegisterID")]
	public EntitySet<NCREINFO> NCREINFOs
	{
		get
		{
			return this._NCREINFOs;
		}
		set
		{
			this._NCREINFOs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestRegister_NCRESUBJECT", Storage="_NCRESUBJECTs", ThisKey="TestRegisterID", OtherKey="TestRegisterID")]
	public EntitySet<NCRESUBJECT> NCRESUBJECTs
	{
		get
		{
			return this._NCRESUBJECTs;
		}
		set
		{
			this._NCRESUBJECTs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestRegister_RegisterProcess", Storage="_RegisterProcesses", ThisKey="TestRegisterID", OtherKey="TestRegisterID")]
	public EntitySet<RegisterProcess> RegisterProcesses
	{
		get
		{
			return this._RegisterProcesses;
		}
		set
		{
			this._RegisterProcesses.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestRegister_StuReg", Storage="_StuRegs", ThisKey="TestRegisterID", OtherKey="TestRegisterID")]
	public EntitySet<StuReg> StuRegs
	{
		get
		{
			return this._StuRegs;
		}
		set
		{
			this._StuRegs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Test_TestRegister", Storage="_Test", ThisKey="TestTypeID", OtherKey="TestTypeID", IsForeignKey=true)]
	public Test Test
	{
		get
		{
			return this._Test.Entity;
		}
		set
		{
			Test previousValue = this._Test.Entity;
			if (((previousValue != value) 
						|| (this._Test.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Test.Entity = null;
					previousValue.TestRegisters.Remove(this);
				}
				this._Test.Entity = value;
				if ((value != null))
				{
					value.TestRegisters.Add(this);
					this._TestTypeID = value.TestTypeID;
				}
				else
				{
					this._TestTypeID = default(System.Guid);
				}
				this.SendPropertyChanged("Test");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_EngGrades(EngGrade entity)
	{
		this.SendPropertyChanging();
		entity.TestRegister = this;
	}
	
	private void detach_EngGrades(EngGrade entity)
	{
		this.SendPropertyChanging();
		entity.TestRegister = null;
	}
	
	private void attach_EngRedos(EngRedo entity)
	{
		this.SendPropertyChanging();
		entity.TestRegister = this;
	}
	
	private void detach_EngRedos(EngRedo entity)
	{
		this.SendPropertyChanging();
		entity.TestRegister = null;
	}
	
	private void attach_MandarinGrades(MandarinGrade entity)
	{
		this.SendPropertyChanging();
		entity.TestRegister = this;
	}
	
	private void detach_MandarinGrades(MandarinGrade entity)
	{
		this.SendPropertyChanging();
		entity.TestRegister = null;
	}
	
	private void attach_mhkFinalRegs(mhkFinalReg entity)
	{
		this.SendPropertyChanging();
		entity.TestRegister = this;
	}
	
	private void detach_mhkFinalRegs(mhkFinalReg entity)
	{
		this.SendPropertyChanging();
		entity.TestRegister = null;
	}
	
	private void attach_MHKGrades(MHKGrade entity)
	{
		this.SendPropertyChanging();
		entity.TestRegister = this;
	}
	
	private void detach_MHKGrades(MHKGrade entity)
	{
		this.SendPropertyChanging();
		entity.TestRegister = null;
	}
	
	private void attach_NCREINFOs(NCREINFO entity)
	{
		this.SendPropertyChanging();
		entity.TestRegister = this;
	}
	
	private void detach_NCREINFOs(NCREINFO entity)
	{
		this.SendPropertyChanging();
		entity.TestRegister = null;
	}
	
	private void attach_NCRESUBJECTs(NCRESUBJECT entity)
	{
		this.SendPropertyChanging();
		entity.TestRegister = this;
	}
	
	private void detach_NCRESUBJECTs(NCRESUBJECT entity)
	{
		this.SendPropertyChanging();
		entity.TestRegister = null;
	}
	
	private void attach_RegisterProcesses(RegisterProcess entity)
	{
		this.SendPropertyChanging();
		entity.TestRegister = this;
	}
	
	private void detach_RegisterProcesses(RegisterProcess entity)
	{
		this.SendPropertyChanging();
		entity.TestRegister = null;
	}
	
	private void attach_StuRegs(StuReg entity)
	{
		this.SendPropertyChanging();
		entity.TestRegister = this;
	}
	
	private void detach_StuRegs(StuReg entity)
	{
		this.SendPropertyChanging();
		entity.TestRegister = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_ClassDept")]
public partial class View_ClassDept
{
	
	private System.Guid _MajorID;
	
	private string _ClassName;
	
	private System.Guid _Expr1;
	
	private System.Guid _DeptID;
	
	private string _MajorName;
	
	private System.Guid _Expr2;
	
	private string _DeptName;
	
	private string _GradeName;
	
	private string _CampusLocationName;
	
	private System.Guid _ClassID;
	
	private System.Guid _CampusLocationID;
	
	private System.Nullable<System.Guid> _NCRECampusLocationID;
	
	private System.Nullable<System.Guid> _CETCampusLocationID;
	
	private System.Nullable<System.Guid> _MHKCampusLocationID;
	
	private string _ClassNumber;
	
	public View_ClassDept()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid MajorID
	{
		get
		{
			return this._MajorID;
		}
		set
		{
			if ((this._MajorID != value))
			{
				this._MajorID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string ClassName
	{
		get
		{
			return this._ClassName;
		}
		set
		{
			if ((this._ClassName != value))
			{
				this._ClassName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid Expr1
	{
		get
		{
			return this._Expr1;
		}
		set
		{
			if ((this._Expr1 != value))
			{
				this._Expr1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid DeptID
	{
		get
		{
			return this._DeptID;
		}
		set
		{
			if ((this._DeptID != value))
			{
				this._DeptID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string MajorName
	{
		get
		{
			return this._MajorName;
		}
		set
		{
			if ((this._MajorName != value))
			{
				this._MajorName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr2", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid Expr2
	{
		get
		{
			return this._Expr2;
		}
		set
		{
			if ((this._Expr2 != value))
			{
				this._Expr2 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string DeptName
	{
		get
		{
			return this._DeptName;
		}
		set
		{
			if ((this._DeptName != value))
			{
				this._DeptName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string GradeName
	{
		get
		{
			return this._GradeName;
		}
		set
		{
			if ((this._GradeName != value))
			{
				this._GradeName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusLocationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string CampusLocationName
	{
		get
		{
			return this._CampusLocationName;
		}
		set
		{
			if ((this._CampusLocationName != value))
			{
				this._CampusLocationName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ClassID
	{
		get
		{
			return this._ClassID;
		}
		set
		{
			if ((this._ClassID != value))
			{
				this._ClassID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusLocationID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid CampusLocationID
	{
		get
		{
			return this._CampusLocationID;
		}
		set
		{
			if ((this._CampusLocationID != value))
			{
				this._CampusLocationID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NCRECampusLocationID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> NCRECampusLocationID
	{
		get
		{
			return this._NCRECampusLocationID;
		}
		set
		{
			if ((this._NCRECampusLocationID != value))
			{
				this._NCRECampusLocationID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CETCampusLocationID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> CETCampusLocationID
	{
		get
		{
			return this._CETCampusLocationID;
		}
		set
		{
			if ((this._CETCampusLocationID != value))
			{
				this._CETCampusLocationID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHKCampusLocationID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> MHKCampusLocationID
	{
		get
		{
			return this._MHKCampusLocationID;
		}
		set
		{
			if ((this._MHKCampusLocationID != value))
			{
				this._MHKCampusLocationID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNumber", DbType="NVarChar(3)")]
	public string ClassNumber
	{
		get
		{
			return this._ClassNumber;
		}
		set
		{
			if ((this._ClassNumber != value))
			{
				this._ClassNumber = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_EngApply")]
public partial class View_EngApply
{
	
	private System.Guid _StudentID;
	
	private System.Guid _llv_ID;
	
	private string _DeptName;
	
	private string _MajorName;
	
	private string _ClassName;
	
	private string _GradeName;
	
	private string _Gender;
	
	private string _UniversityID;
	
	private string _CardID;
	
	private string _StudentName;
	
	private string _xz;
	
	private string _cc;
	
	private string _IsApproved;
	
	private bool _IsPayed;
	
	private string _CETRedoState;
	
	private string _WaterAccount;
	
	private System.Nullable<decimal> _PHOTO_SIZE;
	
	private System.Nullable<System.DateTime> _RegisterDate;
	
	private string _BelongCampus;
	
	private string _RegisterCampus;
	
	private string _llv_Name;
	
	private string _llv_Number;
	
	private string _llv_SimpleName;
	
	private System.DateTime _llv_Date;
	
	private System.DateTime _llv_StartTime;
	
	private System.DateTime _llv_EndTime;
	
	private decimal _llv_cost;
	
	private System.Guid _TestRegisterID;
	
	private string _RegisterNum;
	
	public View_EngApply()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				this._StudentID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_llv_ID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid llv_ID
	{
		get
		{
			return this._llv_ID;
		}
		set
		{
			if ((this._llv_ID != value))
			{
				this._llv_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptName", DbType="NVarChar(50)")]
	public string DeptName
	{
		get
		{
			return this._DeptName;
		}
		set
		{
			if ((this._DeptName != value))
			{
				this._DeptName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(50)")]
	public string MajorName
	{
		get
		{
			return this._MajorName;
		}
		set
		{
			if ((this._MajorName != value))
			{
				this._MajorName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(50)")]
	public string ClassName
	{
		get
		{
			return this._ClassName;
		}
		set
		{
			if ((this._ClassName != value))
			{
				this._ClassName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="NVarChar(10)")]
	public string GradeName
	{
		get
		{
			return this._GradeName;
		}
		set
		{
			if ((this._GradeName != value))
			{
				this._GradeName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(2)")]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this._Gender = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniversityID", DbType="NVarChar(20)")]
	public string UniversityID
	{
		get
		{
			return this._UniversityID;
		}
		set
		{
			if ((this._UniversityID != value))
			{
				this._UniversityID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardID", DbType="NVarChar(20)")]
	public string CardID
	{
		get
		{
			return this._CardID;
		}
		set
		{
			if ((this._CardID != value))
			{
				this._CardID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="NVarChar(50)")]
	public string StudentName
	{
		get
		{
			return this._StudentName;
		}
		set
		{
			if ((this._StudentName != value))
			{
				this._StudentName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xz", DbType="NVarChar(2)")]
	public string xz
	{
		get
		{
			return this._xz;
		}
		set
		{
			if ((this._xz != value))
			{
				this._xz = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cc", DbType="NVarChar(4)")]
	public string cc
	{
		get
		{
			return this._cc;
		}
		set
		{
			if ((this._cc != value))
			{
				this._cc = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
	public string IsApproved
	{
		get
		{
			return this._IsApproved;
		}
		set
		{
			if ((this._IsApproved != value))
			{
				this._IsApproved = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPayed", DbType="Bit NOT NULL")]
	public bool IsPayed
	{
		get
		{
			return this._IsPayed;
		}
		set
		{
			if ((this._IsPayed != value))
			{
				this._IsPayed = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CETRedoState", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string CETRedoState
	{
		get
		{
			return this._CETRedoState;
		}
		set
		{
			if ((this._CETRedoState != value))
			{
				this._CETRedoState = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaterAccount", DbType="NVarChar(5)")]
	public string WaterAccount
	{
		get
		{
			return this._WaterAccount;
		}
		set
		{
			if ((this._WaterAccount != value))
			{
				this._WaterAccount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHOTO_SIZE", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> PHOTO_SIZE
	{
		get
		{
			return this._PHOTO_SIZE;
		}
		set
		{
			if ((this._PHOTO_SIZE != value))
			{
				this._PHOTO_SIZE = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> RegisterDate
	{
		get
		{
			return this._RegisterDate;
		}
		set
		{
			if ((this._RegisterDate != value))
			{
				this._RegisterDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BelongCampus", DbType="NVarChar(1)")]
	public string BelongCampus
	{
		get
		{
			return this._BelongCampus;
		}
		set
		{
			if ((this._BelongCampus != value))
			{
				this._BelongCampus = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterCampus", DbType="NVarChar(1)")]
	public string RegisterCampus
	{
		get
		{
			return this._RegisterCampus;
		}
		set
		{
			if ((this._RegisterCampus != value))
			{
				this._RegisterCampus = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_llv_Name", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
	public string llv_Name
	{
		get
		{
			return this._llv_Name;
		}
		set
		{
			if ((this._llv_Name != value))
			{
				this._llv_Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_llv_Number", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
	public string llv_Number
	{
		get
		{
			return this._llv_Number;
		}
		set
		{
			if ((this._llv_Number != value))
			{
				this._llv_Number = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_llv_SimpleName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string llv_SimpleName
	{
		get
		{
			return this._llv_SimpleName;
		}
		set
		{
			if ((this._llv_SimpleName != value))
			{
				this._llv_SimpleName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_llv_Date", DbType="Date NOT NULL")]
	public System.DateTime llv_Date
	{
		get
		{
			return this._llv_Date;
		}
		set
		{
			if ((this._llv_Date != value))
			{
				this._llv_Date = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_llv_StartTime", DbType="DateTime NOT NULL")]
	public System.DateTime llv_StartTime
	{
		get
		{
			return this._llv_StartTime;
		}
		set
		{
			if ((this._llv_StartTime != value))
			{
				this._llv_StartTime = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_llv_EndTime", DbType="DateTime NOT NULL")]
	public System.DateTime llv_EndTime
	{
		get
		{
			return this._llv_EndTime;
		}
		set
		{
			if ((this._llv_EndTime != value))
			{
				this._llv_EndTime = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_llv_cost", DbType="Decimal(18,4) NOT NULL")]
	public decimal llv_cost
	{
		get
		{
			return this._llv_cost;
		}
		set
		{
			if ((this._llv_cost != value))
			{
				this._llv_cost = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				this._TestRegisterID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterNum", DbType="NVarChar(12)")]
	public string RegisterNum
	{
		get
		{
			return this._RegisterNum;
		}
		set
		{
			if ((this._RegisterNum != value))
			{
				this._RegisterNum = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_MHKRegs")]
public partial class View_MHKReg
{
	
	private string _DeptName;
	
	private string _MajorName;
	
	private string _ClassName;
	
	private string _GradeName;
	
	private string _NationalityName;
	
	private string _Gender;
	
	private string _CardID;
	
	private string _UniversityID;
	
	private string _StudentName;
	
	private string _cc;
	
	private string _KDNum;
	
	private string _Politicstatus;
	
	private string _printlsh;
	
	private System.Guid _StuID;
	
	private System.Guid _SubjID;
	
	private string _CurGrade;
	
	private string _IsApproved;
	
	private bool _IsPayed;
	
	private string _MHKRedoState;
	
	private string _MHKSubName;
	
	private string _WaterAccount;
	
	private System.Guid _TestRegisterID;
	
	public View_MHKReg()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptName", DbType="NVarChar(50)")]
	public string DeptName
	{
		get
		{
			return this._DeptName;
		}
		set
		{
			if ((this._DeptName != value))
			{
				this._DeptName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(50)")]
	public string MajorName
	{
		get
		{
			return this._MajorName;
		}
		set
		{
			if ((this._MajorName != value))
			{
				this._MajorName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(50)")]
	public string ClassName
	{
		get
		{
			return this._ClassName;
		}
		set
		{
			if ((this._ClassName != value))
			{
				this._ClassName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="NVarChar(10)")]
	public string GradeName
	{
		get
		{
			return this._GradeName;
		}
		set
		{
			if ((this._GradeName != value))
			{
				this._GradeName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityName", DbType="NVarChar(10)")]
	public string NationalityName
	{
		get
		{
			return this._NationalityName;
		}
		set
		{
			if ((this._NationalityName != value))
			{
				this._NationalityName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(2)")]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this._Gender = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardID", DbType="NVarChar(20)")]
	public string CardID
	{
		get
		{
			return this._CardID;
		}
		set
		{
			if ((this._CardID != value))
			{
				this._CardID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniversityID", DbType="NVarChar(20)")]
	public string UniversityID
	{
		get
		{
			return this._UniversityID;
		}
		set
		{
			if ((this._UniversityID != value))
			{
				this._UniversityID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="NVarChar(50)")]
	public string StudentName
	{
		get
		{
			return this._StudentName;
		}
		set
		{
			if ((this._StudentName != value))
			{
				this._StudentName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cc", DbType="NVarChar(4)")]
	public string cc
	{
		get
		{
			return this._cc;
		}
		set
		{
			if ((this._cc != value))
			{
				this._cc = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KDNum", DbType="NVarChar(6)")]
	public string KDNum
	{
		get
		{
			return this._KDNum;
		}
		set
		{
			if ((this._KDNum != value))
			{
				this._KDNum = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Politicstatus", DbType="NVarChar(8)")]
	public string Politicstatus
	{
		get
		{
			return this._Politicstatus;
		}
		set
		{
			if ((this._Politicstatus != value))
			{
				this._Politicstatus = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_printlsh", DbType="NChar(10)")]
	public string printlsh
	{
		get
		{
			return this._printlsh;
		}
		set
		{
			if ((this._printlsh != value))
			{
				this._printlsh = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid StuID
	{
		get
		{
			return this._StuID;
		}
		set
		{
			if ((this._StuID != value))
			{
				this._StuID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid SubjID
	{
		get
		{
			return this._SubjID;
		}
		set
		{
			if ((this._SubjID != value))
			{
				this._SubjID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurGrade", DbType="NVarChar(1)")]
	public string CurGrade
	{
		get
		{
			return this._CurGrade;
		}
		set
		{
			if ((this._CurGrade != value))
			{
				this._CurGrade = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
	public string IsApproved
	{
		get
		{
			return this._IsApproved;
		}
		set
		{
			if ((this._IsApproved != value))
			{
				this._IsApproved = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPayed", DbType="Bit NOT NULL")]
	public bool IsPayed
	{
		get
		{
			return this._IsPayed;
		}
		set
		{
			if ((this._IsPayed != value))
			{
				this._IsPayed = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHKRedoState", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string MHKRedoState
	{
		get
		{
			return this._MHKRedoState;
		}
		set
		{
			if ((this._MHKRedoState != value))
			{
				this._MHKRedoState = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHKSubName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string MHKSubName
	{
		get
		{
			return this._MHKSubName;
		}
		set
		{
			if ((this._MHKSubName != value))
			{
				this._MHKSubName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaterAccount", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
	public string WaterAccount
	{
		get
		{
			return this._WaterAccount;
		}
		set
		{
			if ((this._WaterAccount != value))
			{
				this._WaterAccount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				this._TestRegisterID = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_MandarinRegInfo")]
public partial class View_MandarinRegInfo
{
	
	private System.Guid _StudentID;
	
	private System.Nullable<decimal> _RegCost;
	
	private System.Nullable<decimal> _TestCost;
	
	private System.Nullable<decimal> _TrainCost;
	
	private bool _IsRegistered;
	
	private System.Nullable<bool> _IsPayed;
	
	private string _NCRedoState;
	
	private string _DeptName;
	
	private string _MajorName;
	
	private string _ClassName;
	
	private string _GradeName;
	
	private string _NationalityName;
	
	private string _Gender;
	
	private string _CardID;
	
	private string _UniversityID;
	
	private string _StudentName;
	
	private System.Guid _TestRegisterID;
	
	public View_MandarinRegInfo()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				this._StudentID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegCost", DbType="Money")]
	public System.Nullable<decimal> RegCost
	{
		get
		{
			return this._RegCost;
		}
		set
		{
			if ((this._RegCost != value))
			{
				this._RegCost = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCost", DbType="Money")]
	public System.Nullable<decimal> TestCost
	{
		get
		{
			return this._TestCost;
		}
		set
		{
			if ((this._TestCost != value))
			{
				this._TestCost = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainCost", DbType="Money")]
	public System.Nullable<decimal> TrainCost
	{
		get
		{
			return this._TrainCost;
		}
		set
		{
			if ((this._TrainCost != value))
			{
				this._TrainCost = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRegistered", DbType="Bit NOT NULL")]
	public bool IsRegistered
	{
		get
		{
			return this._IsRegistered;
		}
		set
		{
			if ((this._IsRegistered != value))
			{
				this._IsRegistered = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPayed", DbType="Bit")]
	public System.Nullable<bool> IsPayed
	{
		get
		{
			return this._IsPayed;
		}
		set
		{
			if ((this._IsPayed != value))
			{
				this._IsPayed = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NCRedoState", DbType="NVarChar(10)")]
	public string NCRedoState
	{
		get
		{
			return this._NCRedoState;
		}
		set
		{
			if ((this._NCRedoState != value))
			{
				this._NCRedoState = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptName", DbType="NVarChar(50)")]
	public string DeptName
	{
		get
		{
			return this._DeptName;
		}
		set
		{
			if ((this._DeptName != value))
			{
				this._DeptName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(50)")]
	public string MajorName
	{
		get
		{
			return this._MajorName;
		}
		set
		{
			if ((this._MajorName != value))
			{
				this._MajorName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(50)")]
	public string ClassName
	{
		get
		{
			return this._ClassName;
		}
		set
		{
			if ((this._ClassName != value))
			{
				this._ClassName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="NVarChar(10)")]
	public string GradeName
	{
		get
		{
			return this._GradeName;
		}
		set
		{
			if ((this._GradeName != value))
			{
				this._GradeName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityName", DbType="NVarChar(10)")]
	public string NationalityName
	{
		get
		{
			return this._NationalityName;
		}
		set
		{
			if ((this._NationalityName != value))
			{
				this._NationalityName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(2)")]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this._Gender = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardID", DbType="NVarChar(20)")]
	public string CardID
	{
		get
		{
			return this._CardID;
		}
		set
		{
			if ((this._CardID != value))
			{
				this._CardID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniversityID", DbType="NVarChar(20)")]
	public string UniversityID
	{
		get
		{
			return this._UniversityID;
		}
		set
		{
			if ((this._UniversityID != value))
			{
				this._UniversityID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="NVarChar(50)")]
	public string StudentName
	{
		get
		{
			return this._StudentName;
		}
		set
		{
			if ((this._StudentName != value))
			{
				this._StudentName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				this._TestRegisterID = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_MandarinGrade")]
public partial class View_MandarinGrade
{
	
	private string _StudentName;
	
	private string _UniversityID;
	
	private string _CardID;
	
	private string _Gender;
	
	private string _NationalityName;
	
	private string _DeptName;
	
	private string _MajorName;
	
	private string _GradeName;
	
	private string _ClassName;
	
	private string _ExamRegNum;
	
	private double _TestGrade;
	
	private string _TestLevel;
	
	private string _CertificateNumber;
	
	private System.DateTime _TestDate;
	
	private System.Guid _TestRegisterID;
	
	private System.Guid _StudentID;
	
	private string _RegisterName;
	
	private System.Nullable<int> _RegisterNum;
	
	private System.Guid _ClassID;
	
	private System.Guid _MajorID;
	
	private System.Guid _DeptID;
	
	private string _Expr1;
	
	public View_MandarinGrade()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="NVarChar(50)")]
	public string StudentName
	{
		get
		{
			return this._StudentName;
		}
		set
		{
			if ((this._StudentName != value))
			{
				this._StudentName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniversityID", DbType="NVarChar(20)")]
	public string UniversityID
	{
		get
		{
			return this._UniversityID;
		}
		set
		{
			if ((this._UniversityID != value))
			{
				this._UniversityID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardID", DbType="NVarChar(20)")]
	public string CardID
	{
		get
		{
			return this._CardID;
		}
		set
		{
			if ((this._CardID != value))
			{
				this._CardID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(2)")]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this._Gender = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityName", DbType="NVarChar(10)")]
	public string NationalityName
	{
		get
		{
			return this._NationalityName;
		}
		set
		{
			if ((this._NationalityName != value))
			{
				this._NationalityName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptName", DbType="NVarChar(50)")]
	public string DeptName
	{
		get
		{
			return this._DeptName;
		}
		set
		{
			if ((this._DeptName != value))
			{
				this._DeptName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(50)")]
	public string MajorName
	{
		get
		{
			return this._MajorName;
		}
		set
		{
			if ((this._MajorName != value))
			{
				this._MajorName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="NVarChar(10)")]
	public string GradeName
	{
		get
		{
			return this._GradeName;
		}
		set
		{
			if ((this._GradeName != value))
			{
				this._GradeName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(50)")]
	public string ClassName
	{
		get
		{
			return this._ClassName;
		}
		set
		{
			if ((this._ClassName != value))
			{
				this._ClassName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamRegNum", DbType="NVarChar(13) NOT NULL", CanBeNull=false)]
	public string ExamRegNum
	{
		get
		{
			return this._ExamRegNum;
		}
		set
		{
			if ((this._ExamRegNum != value))
			{
				this._ExamRegNum = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestGrade", DbType="Float NOT NULL")]
	public double TestGrade
	{
		get
		{
			return this._TestGrade;
		}
		set
		{
			if ((this._TestGrade != value))
			{
				this._TestGrade = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestLevel", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string TestLevel
	{
		get
		{
			return this._TestLevel;
		}
		set
		{
			if ((this._TestLevel != value))
			{
				this._TestLevel = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNumber", DbType="NVarChar(13) NOT NULL", CanBeNull=false)]
	public string CertificateNumber
	{
		get
		{
			return this._CertificateNumber;
		}
		set
		{
			if ((this._CertificateNumber != value))
			{
				this._CertificateNumber = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestDate", DbType="Date NOT NULL")]
	public System.DateTime TestDate
	{
		get
		{
			return this._TestDate;
		}
		set
		{
			if ((this._TestDate != value))
			{
				this._TestDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				this._TestRegisterID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				this._StudentID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterName", DbType="NVarChar(50)")]
	public string RegisterName
	{
		get
		{
			return this._RegisterName;
		}
		set
		{
			if ((this._RegisterName != value))
			{
				this._RegisterName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterNum", DbType="Int")]
	public System.Nullable<int> RegisterNum
	{
		get
		{
			return this._RegisterNum;
		}
		set
		{
			if ((this._RegisterNum != value))
			{
				this._RegisterNum = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ClassID
	{
		get
		{
			return this._ClassID;
		}
		set
		{
			if ((this._ClassID != value))
			{
				this._ClassID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid MajorID
	{
		get
		{
			return this._MajorID;
		}
		set
		{
			if ((this._MajorID != value))
			{
				this._MajorID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid DeptID
	{
		get
		{
			return this._DeptID;
		}
		set
		{
			if ((this._DeptID != value))
			{
				this._DeptID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string Expr1
	{
		get
		{
			return this._Expr1;
		}
		set
		{
			if ((this._Expr1 != value))
			{
				this._Expr1 = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_EngGrade")]
public partial class View_EngGrade
{
	
	private System.Guid _TestRegisterID;
	
	private System.Guid _StudentID;
	
	private string _StudentName;
	
	private string _UniversityID;
	
	private string _CardID;
	
	private string _Gender;
	
	private string _NationalityName;
	
	private string _DeptName;
	
	private string _MajorName;
	
	private string _GradeName;
	
	private string _ClassName;
	
	private string _LanguageLevel;
	
	private string _TestGrade;
	
	private string _ExamRegistrationNum;
	
	private System.DateTime _TestDate;
	
	private string _RegisterName;
	
	private System.Nullable<int> _RegisterNum;
	
	private System.Guid _ClassID;
	
	private System.Guid _MajorID;
	
	private string _Expr1;
	
	private System.Guid _DeptID;
	
	public View_EngGrade()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				this._TestRegisterID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				this._StudentID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="NVarChar(50)")]
	public string StudentName
	{
		get
		{
			return this._StudentName;
		}
		set
		{
			if ((this._StudentName != value))
			{
				this._StudentName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniversityID", DbType="NVarChar(20)")]
	public string UniversityID
	{
		get
		{
			return this._UniversityID;
		}
		set
		{
			if ((this._UniversityID != value))
			{
				this._UniversityID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardID", DbType="NVarChar(20)")]
	public string CardID
	{
		get
		{
			return this._CardID;
		}
		set
		{
			if ((this._CardID != value))
			{
				this._CardID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(2)")]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this._Gender = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityName", DbType="NVarChar(10)")]
	public string NationalityName
	{
		get
		{
			return this._NationalityName;
		}
		set
		{
			if ((this._NationalityName != value))
			{
				this._NationalityName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptName", DbType="NVarChar(50)")]
	public string DeptName
	{
		get
		{
			return this._DeptName;
		}
		set
		{
			if ((this._DeptName != value))
			{
				this._DeptName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(50)")]
	public string MajorName
	{
		get
		{
			return this._MajorName;
		}
		set
		{
			if ((this._MajorName != value))
			{
				this._MajorName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="NVarChar(10)")]
	public string GradeName
	{
		get
		{
			return this._GradeName;
		}
		set
		{
			if ((this._GradeName != value))
			{
				this._GradeName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(50)")]
	public string ClassName
	{
		get
		{
			return this._ClassName;
		}
		set
		{
			if ((this._ClassName != value))
			{
				this._ClassName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageLevel", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
	public string LanguageLevel
	{
		get
		{
			return this._LanguageLevel;
		}
		set
		{
			if ((this._LanguageLevel != value))
			{
				this._LanguageLevel = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestGrade", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
	public string TestGrade
	{
		get
		{
			return this._TestGrade;
		}
		set
		{
			if ((this._TestGrade != value))
			{
				this._TestGrade = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamRegistrationNum", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
	public string ExamRegistrationNum
	{
		get
		{
			return this._ExamRegistrationNum;
		}
		set
		{
			if ((this._ExamRegistrationNum != value))
			{
				this._ExamRegistrationNum = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestDate", DbType="Date NOT NULL")]
	public System.DateTime TestDate
	{
		get
		{
			return this._TestDate;
		}
		set
		{
			if ((this._TestDate != value))
			{
				this._TestDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterName", DbType="NVarChar(50)")]
	public string RegisterName
	{
		get
		{
			return this._RegisterName;
		}
		set
		{
			if ((this._RegisterName != value))
			{
				this._RegisterName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterNum", DbType="Int")]
	public System.Nullable<int> RegisterNum
	{
		get
		{
			return this._RegisterNum;
		}
		set
		{
			if ((this._RegisterNum != value))
			{
				this._RegisterNum = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ClassID
	{
		get
		{
			return this._ClassID;
		}
		set
		{
			if ((this._ClassID != value))
			{
				this._ClassID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid MajorID
	{
		get
		{
			return this._MajorID;
		}
		set
		{
			if ((this._MajorID != value))
			{
				this._MajorID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string Expr1
	{
		get
		{
			return this._Expr1;
		}
		set
		{
			if ((this._Expr1 != value))
			{
				this._Expr1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid DeptID
	{
		get
		{
			return this._DeptID;
		}
		set
		{
			if ((this._DeptID != value))
			{
				this._DeptID = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_NCREGrade")]
public partial class View_NCREGrade
{
	
	private System.Guid _TestRegisterID;
	
	private System.Guid _StudentID;
	
	private System.Guid _SubjectID;
	
	private string _StudentName;
	
	private string _UniversityID;
	
	private string _CardID;
	
	private string _Gender;
	
	private string _NationalityName;
	
	private string _DeptName;
	
	private string _MajorName;
	
	private string _ClassName;
	
	private string _GradeName;
	
	private string _SUBJECTCODE;
	
	private string _SUBJECTNAME;
	
	private string _GRADE;
	
	private string _RegisterName;
	
	private System.Nullable<int> _RegisterNum;
	
	private string _ExamRegistrationNum;
	
	private string _TestGrade;
	
	private string _CertificationNum;
	
	private System.DateTime _TestDate;
	
	private string _Note;
	
	private string _cj;
	
	private System.Guid _DeptID;
	
	private System.Guid _ClassID;
	
	private System.Guid _MajorID;
	
	private string _Expr1;
	
	public View_NCREGrade()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				this._TestRegisterID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				this._StudentID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid SubjectID
	{
		get
		{
			return this._SubjectID;
		}
		set
		{
			if ((this._SubjectID != value))
			{
				this._SubjectID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="NVarChar(50)")]
	public string StudentName
	{
		get
		{
			return this._StudentName;
		}
		set
		{
			if ((this._StudentName != value))
			{
				this._StudentName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniversityID", DbType="NVarChar(20)")]
	public string UniversityID
	{
		get
		{
			return this._UniversityID;
		}
		set
		{
			if ((this._UniversityID != value))
			{
				this._UniversityID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardID", DbType="NVarChar(20)")]
	public string CardID
	{
		get
		{
			return this._CardID;
		}
		set
		{
			if ((this._CardID != value))
			{
				this._CardID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(2)")]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this._Gender = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityName", DbType="NVarChar(10)")]
	public string NationalityName
	{
		get
		{
			return this._NationalityName;
		}
		set
		{
			if ((this._NationalityName != value))
			{
				this._NationalityName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptName", DbType="NVarChar(50)")]
	public string DeptName
	{
		get
		{
			return this._DeptName;
		}
		set
		{
			if ((this._DeptName != value))
			{
				this._DeptName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(50)")]
	public string MajorName
	{
		get
		{
			return this._MajorName;
		}
		set
		{
			if ((this._MajorName != value))
			{
				this._MajorName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(50)")]
	public string ClassName
	{
		get
		{
			return this._ClassName;
		}
		set
		{
			if ((this._ClassName != value))
			{
				this._ClassName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="NVarChar(10)")]
	public string GradeName
	{
		get
		{
			return this._GradeName;
		}
		set
		{
			if ((this._GradeName != value))
			{
				this._GradeName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBJECTCODE", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string SUBJECTCODE
	{
		get
		{
			return this._SUBJECTCODE;
		}
		set
		{
			if ((this._SUBJECTCODE != value))
			{
				this._SUBJECTCODE = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBJECTNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string SUBJECTNAME
	{
		get
		{
			return this._SUBJECTNAME;
		}
		set
		{
			if ((this._SUBJECTNAME != value))
			{
				this._SUBJECTNAME = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRADE", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string GRADE
	{
		get
		{
			return this._GRADE;
		}
		set
		{
			if ((this._GRADE != value))
			{
				this._GRADE = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterName", DbType="NVarChar(50)")]
	public string RegisterName
	{
		get
		{
			return this._RegisterName;
		}
		set
		{
			if ((this._RegisterName != value))
			{
				this._RegisterName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterNum", DbType="Int")]
	public System.Nullable<int> RegisterNum
	{
		get
		{
			return this._RegisterNum;
		}
		set
		{
			if ((this._RegisterNum != value))
			{
				this._RegisterNum = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamRegistrationNum", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
	public string ExamRegistrationNum
	{
		get
		{
			return this._ExamRegistrationNum;
		}
		set
		{
			if ((this._ExamRegistrationNum != value))
			{
				this._ExamRegistrationNum = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestGrade", DbType="NVarChar(8)")]
	public string TestGrade
	{
		get
		{
			return this._TestGrade;
		}
		set
		{
			if ((this._TestGrade != value))
			{
				this._TestGrade = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificationNum", DbType="NVarChar(14)")]
	public string CertificationNum
	{
		get
		{
			return this._CertificationNum;
		}
		set
		{
			if ((this._CertificationNum != value))
			{
				this._CertificationNum = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestDate", DbType="Date NOT NULL")]
	public System.DateTime TestDate
	{
		get
		{
			return this._TestDate;
		}
		set
		{
			if ((this._TestDate != value))
			{
				this._TestDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(50)")]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this._Note = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cj", DbType="NVarChar(5)")]
	public string cj
	{
		get
		{
			return this._cj;
		}
		set
		{
			if ((this._cj != value))
			{
				this._cj = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid DeptID
	{
		get
		{
			return this._DeptID;
		}
		set
		{
			if ((this._DeptID != value))
			{
				this._DeptID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ClassID
	{
		get
		{
			return this._ClassID;
		}
		set
		{
			if ((this._ClassID != value))
			{
				this._ClassID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid MajorID
	{
		get
		{
			return this._MajorID;
		}
		set
		{
			if ((this._MajorID != value))
			{
				this._MajorID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string Expr1
	{
		get
		{
			return this._Expr1;
		}
		set
		{
			if ((this._Expr1 != value))
			{
				this._Expr1 = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_MHKGrade")]
public partial class View_MHKGrade
{
	
	private System.Guid _TestRegisterID;
	
	private System.Guid _StudentID;
	
	private string _SubjectName;
	
	private string _StudentName;
	
	private string _UniversityID;
	
	private string _CardID;
	
	private string _Gender;
	
	private string _NationalityName;
	
	private string _DeptName;
	
	private string _MajorName;
	
	private string _ClassName;
	
	private string _GradeName;
	
	private string _ExamRegistrationNum;
	
	private string _TestGrade;
	
	private string _TestLevel;
	
	private string _CertificationNum;
	
	private System.DateTime _TestDate;
	
	private string _RegisterName;
	
	private System.Nullable<int> _RegisterNum;
	
	private System.Guid _DeptID;
	
	private System.Guid _ClassID;
	
	private System.Guid _MajorID;
	
	private string _Expr1;
	
	public View_MHKGrade()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRegisterID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid TestRegisterID
	{
		get
		{
			return this._TestRegisterID;
		}
		set
		{
			if ((this._TestRegisterID != value))
			{
				this._TestRegisterID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				this._StudentID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string SubjectName
	{
		get
		{
			return this._SubjectName;
		}
		set
		{
			if ((this._SubjectName != value))
			{
				this._SubjectName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="NVarChar(50)")]
	public string StudentName
	{
		get
		{
			return this._StudentName;
		}
		set
		{
			if ((this._StudentName != value))
			{
				this._StudentName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniversityID", DbType="NVarChar(20)")]
	public string UniversityID
	{
		get
		{
			return this._UniversityID;
		}
		set
		{
			if ((this._UniversityID != value))
			{
				this._UniversityID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardID", DbType="NVarChar(20)")]
	public string CardID
	{
		get
		{
			return this._CardID;
		}
		set
		{
			if ((this._CardID != value))
			{
				this._CardID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(2)")]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this._Gender = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityName", DbType="NVarChar(10)")]
	public string NationalityName
	{
		get
		{
			return this._NationalityName;
		}
		set
		{
			if ((this._NationalityName != value))
			{
				this._NationalityName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptName", DbType="NVarChar(50)")]
	public string DeptName
	{
		get
		{
			return this._DeptName;
		}
		set
		{
			if ((this._DeptName != value))
			{
				this._DeptName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(50)")]
	public string MajorName
	{
		get
		{
			return this._MajorName;
		}
		set
		{
			if ((this._MajorName != value))
			{
				this._MajorName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(50)")]
	public string ClassName
	{
		get
		{
			return this._ClassName;
		}
		set
		{
			if ((this._ClassName != value))
			{
				this._ClassName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="NVarChar(10)")]
	public string GradeName
	{
		get
		{
			return this._GradeName;
		}
		set
		{
			if ((this._GradeName != value))
			{
				this._GradeName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamRegistrationNum", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string ExamRegistrationNum
	{
		get
		{
			return this._ExamRegistrationNum;
		}
		set
		{
			if ((this._ExamRegistrationNum != value))
			{
				this._ExamRegistrationNum = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestGrade", DbType="NVarChar(3)")]
	public string TestGrade
	{
		get
		{
			return this._TestGrade;
		}
		set
		{
			if ((this._TestGrade != value))
			{
				this._TestGrade = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestLevel", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
	public string TestLevel
	{
		get
		{
			return this._TestLevel;
		}
		set
		{
			if ((this._TestLevel != value))
			{
				this._TestLevel = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificationNum", DbType="NVarChar(9)")]
	public string CertificationNum
	{
		get
		{
			return this._CertificationNum;
		}
		set
		{
			if ((this._CertificationNum != value))
			{
				this._CertificationNum = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestDate", DbType="Date NOT NULL")]
	public System.DateTime TestDate
	{
		get
		{
			return this._TestDate;
		}
		set
		{
			if ((this._TestDate != value))
			{
				this._TestDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterName", DbType="NVarChar(50)")]
	public string RegisterName
	{
		get
		{
			return this._RegisterName;
		}
		set
		{
			if ((this._RegisterName != value))
			{
				this._RegisterName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterNum", DbType="Int")]
	public System.Nullable<int> RegisterNum
	{
		get
		{
			return this._RegisterNum;
		}
		set
		{
			if ((this._RegisterNum != value))
			{
				this._RegisterNum = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid DeptID
	{
		get
		{
			return this._DeptID;
		}
		set
		{
			if ((this._DeptID != value))
			{
				this._DeptID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ClassID
	{
		get
		{
			return this._ClassID;
		}
		set
		{
			if ((this._ClassID != value))
			{
				this._ClassID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid MajorID
	{
		get
		{
			return this._MajorID;
		}
		set
		{
			if ((this._MajorID != value))
			{
				this._MajorID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string Expr1
	{
		get
		{
			return this._Expr1;
		}
		set
		{
			if ((this._Expr1 != value))
			{
				this._Expr1 = value;
			}
		}
	}
}
#pragma warning restore 1591
